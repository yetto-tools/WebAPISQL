using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPISQL.Models;

namespace WebAPISQL.Data
{
    public partial class QsystemsContext : DbContext
    {
        public QsystemsContext()
        {
        }

        public QsystemsContext(DbContextOptions<QsystemsContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Abrecajapo> Abrecajapos { get; set; } = null!;
        public virtual DbSet<Actualiza> Actualizas { get; set; } = null!;
        public virtual DbSet<Actualizacion> Actualizacions { get; set; } = null!;
        public virtual DbSet<AdmEmpProdH> AdmEmpProdHs { get; set; } = null!;
        public virtual DbSet<AdmEmpProdL> AdmEmpProdLs { get; set; } = null!;
        public virtual DbSet<AdmFormTipH> AdmFormTipHs { get; set; } = null!;
        public virtual DbSet<AdmFormTipL> AdmFormTipLs { get; set; } = null!;
        public virtual DbSet<AdmGrpProdH> AdmGrpProdHs { get; set; } = null!;
        public virtual DbSet<AdmGrpProdL> AdmGrpProdLs { get; set; } = null!;
        public virtual DbSet<AdmProdDiaH> AdmProdDiaHs { get; set; } = null!;
        public virtual DbSet<AdmProdDiaL> AdmProdDiaLs { get; set; } = null!;
        public virtual DbSet<AdmProdTermH> AdmProdTermHs { get; set; } = null!;
        public virtual DbSet<AdmProdTermL> AdmProdTermLs { get; set; } = null!;
        public virtual DbSet<AjusExtraCxp> AjusExtraCxps { get; set; } = null!;
        public virtual DbSet<AjustesCxc> AjustesCxcs { get; set; } = null!;
        public virtual DbSet<AjustesCxcDetalle> AjustesCxcDetalles { get; set; } = null!;
        public virtual DbSet<AjustesCxcL> AjustesCxcLs { get; set; } = null!;
        public virtual DbSet<AjustesCxp> AjustesCxps { get; set; } = null!;
        public virtual DbSet<ArtsBodega> ArtsBodegas { get; set; } = null!;
        public virtual DbSet<ArtsProveedor> ArtsProveedors { get; set; } = null!;
        public virtual DbSet<AsignacionLista> AsignacionListas { get; set; } = null!;
        public virtual DbSet<AsignacionOferta> AsignacionOfertas { get; set; } = null!;
        public virtual DbSet<Bancospo> Bancospos { get; set; } = null!;
        public virtual DbSet<BcoMaestro> BcoMaestros { get; set; } = null!;
        public virtual DbSet<BcoMovExtra> BcoMovExtras { get; set; } = null!;
        public virtual DbSet<BcoMovimiento> BcoMovimientos { get; set; } = null!;
        public virtual DbSet<BcoOrdena> BcoOrdenas { get; set; } = null!;
        public virtual DbSet<BcoRechaza> BcoRechazas { get; set; } = null!;
        public virtual DbSet<BcoSaldo> BcoSaldos { get; set; } = null!;
        public virtual DbSet<BcoTransacH> BcoTransacHes { get; set; } = null!;
        public virtual DbSet<BcoTransacL> BcoTransacLs { get; set; } = null!;
        public virtual DbSet<BcoVoucher> BcoVouchers { get; set; } = null!;
        public virtual DbSet<BitActclientesextra> BitActclientesextras { get; set; } = null!;
        public virtual DbSet<BitActcosto> BitActcostos { get; set; } = null!;
        public virtual DbSet<BitOpactprecio> BitOpactprecios { get; set; } = null!;
        public virtual DbSet<Bitacora> Bitacoras { get; set; } = null!;
        public virtual DbSet<Bitacora1> Bitacoras1 { get; set; } = null!;
        public virtual DbSet<BitacoraTraCompra> BitacoraTraCompras { get; set; } = null!;
        public virtual DbSet<BitacoraVentaH> BitacoraVentaHs { get; set; } = null!;
        public virtual DbSet<BitacoraVentaL> BitacoraVentaLs { get; set; } = null!;
        public virtual DbSet<Bodega> Bodegas { get; set; } = null!;
        public virtual DbSet<BodegaEsta1> BodegaEsta1s { get; set; } = null!;
        public virtual DbSet<BodegaEstum> BodegaEsta { get; set; } = null!;
        public virtual DbSet<BodegasCategorium> BodegasCategoria { get; set; } = null!;
        public virtual DbSet<BodegasExtra1> BodegasExtra1s { get; set; } = null!;
        public virtual DbSet<Cajerospo> Cajerospos { get; set; } = null!;
        public virtual DbSet<CentroCosto> CentroCostos { get; set; } = null!;
        public virtual DbSet<CentroHistorico> CentroHistoricos { get; set; } = null!;
        public virtual DbSet<CentroHnom> CentroHnoms { get; set; } = null!;
        public virtual DbSet<CentroNoman> CentroNomen { get; set; } = null!;
        public virtual DbSet<Clase> Clases { get; set; } = null!;
        public virtual DbSet<ClasiCuentasCli> ClasiCuentasClis { get; set; } = null!;
        public virtual DbSet<ClasificaCliente> ClasificaClientes { get; set; } = null!;
        public virtual DbSet<CliPagh> CliPaghs { get; set; } = null!;
        public virtual DbSet<CliPaghExtra> CliPaghExtras { get; set; } = null!;
        public virtual DbSet<CliPagl> CliPagls { get; set; } = null!;
        public virtual DbSet<ClientesAgen> ClientesAgens { get; set; } = null!;
        public virtual DbSet<ClientesExtra> ClientesExtras { get; set; } = null!;
        public virtual DbSet<ClientesExtra2> ClientesExtra2s { get; set; } = null!;
        public virtual DbSet<ClientesGp> ClientesGps { get; set; } = null!;
        public virtual DbSet<Clientesporvendedor> Clientesporvendedors { get; set; } = null!;
        public virtual DbSet<ComCotizapH> ComCotizapHs { get; set; } = null!;
        public virtual DbSet<ComCotizapL> ComCotizapLs { get; set; } = null!;
        public virtual DbSet<ComOrdencH> ComOrdencHes { get; set; } = null!;
        public virtual DbSet<ComOrdencHext1> ComOrdencHext1s { get; set; } = null!;
        public virtual DbSet<ComOrdencL> ComOrdencLs { get; set; } = null!;
        public virtual DbSet<ComReqCotiza> ComReqCotizas { get; set; } = null!;
        public virtual DbSet<ComReqcompraH> ComReqcompraHs { get; set; } = null!;
        public virtual DbSet<ComReqcompraL> ComReqcompraLs { get; set; } = null!;
        public virtual DbSet<Comphead> Compheads { get; set; } = null!;
        public virtual DbSet<Compline> Complines { get; set; } = null!;
        public virtual DbSet<ConHistActivo> ConHistActivos { get; set; } = null!;
        public virtual DbSet<ConResper> ConRespers { get; set; } = null!;
        public virtual DbSet<Conano> Conanos { get; set; } = null!;
        public virtual DbSet<Conparh> Conparhs { get; set; } = null!;
        public virtual DbSet<Conparht> Conparhts { get; set; } = null!;
        public virtual DbSet<Conparl> Conparls { get; set; } = null!;
        public virtual DbSet<Conparlt> Conparlts { get; set; } = null!;
        public virtual DbSet<Contraco> Contracos { get; set; } = null!;
        public virtual DbSet<Contradet> Contradets { get; set; } = null!;
        public virtual DbSet<Contrasena> Contrasenas { get; set; } = null!;
        public virtual DbSet<Correlativo> Correlativos { get; set; } = null!;
        public virtual DbSet<CorrelativoEspecial> CorrelativoEspecials { get; set; } = null!;
        public virtual DbSet<Correlpo> Correlpos { get; set; } = null!;
        public virtual DbSet<CotAutopedido> CotAutopedidos { get; set; } = null!;
        public virtual DbSet<CreditosCliente> CreditosClientes { get; set; } = null!;
        public virtual DbSet<CtaContTiendum> CtaContTienda { get; set; } = null!;
        public virtual DbSet<CxcAntigLinea> CxcAntigLineas { get; set; } = null!;
        public virtual DbSet<CxcAntigRecibo> CxcAntigRecibos { get; set; } = null!;
        public virtual DbSet<CxcAntigmontasa> CxcAntigmontasas { get; set; } = null!;
        public virtual DbSet<CxcAntiguedad> CxcAntiguedads { get; set; } = null!;
        public virtual DbSet<CxcAntiguedad1> CxcAntiguedad1s { get; set; } = null!;
        public virtual DbSet<CxcAntiguedad2> CxcAntiguedad2s { get; set; } = null!;
        public virtual DbSet<CxcCobCentro> CxcCobCentros { get; set; } = null!;
        public virtual DbSet<CxcCobranza> CxcCobranzas { get; set; } = null!;
        public virtual DbSet<CxcCobranza1> CxcCobranza1s { get; set; } = null!;
        public virtual DbSet<CxcCobranzaClasifica> CxcCobranzaClasificas { get; set; } = null!;
        public virtual DbSet<CxcGlobalLinea> CxcGlobalLineas { get; set; } = null!;
        public virtual DbSet<CxcHistoLinea> CxcHistoLineas { get; set; } = null!;
        public virtual DbSet<CxcPagosbatchH> CxcPagosbatchHs { get; set; } = null!;
        public virtual DbSet<CxcPagosbatchL> CxcPagosbatchLs { get; set; } = null!;
        public virtual DbSet<CxcPagosbatchLd> CxcPagosbatchLds { get; set; } = null!;
        public virtual DbSet<CxcTablaret> CxcTablarets { get; set; } = null!;
        public virtual DbSet<CxpAnticiposH> CxpAnticiposHes { get; set; } = null!;
        public virtual DbSet<CxpAnticiposL> CxpAnticiposLs { get; set; } = null!;
        public virtual DbSet<CxpAntiguedad> CxpAntiguedads { get; set; } = null!;
        public virtual DbSet<CxpAutofactura> CxpAutofacturas { get; set; } = null!;
        public virtual DbSet<CxpContrasena> CxpContrasenas { get; set; } = null!;
        public virtual DbSet<CxpFacCuentum> CxpFacCuenta { get; set; } = null!;
        public virtual DbSet<CxpLibroiva> CxpLibroivas { get; set; } = null!;
        public virtual DbSet<CxpPagRealizar> CxpPagRealizars { get; set; } = null!;
        public virtual DbSet<CxpPago> CxpPagos { get; set; } = null!;
        public virtual DbSet<Depreciacion> Depreciacions { get; set; } = null!;
        public virtual DbSet<Descuento> Descuentos { get; set; } = null!;
        public virtual DbSet<Dethold> Detholds { get; set; } = null!;
        public virtual DbSet<Dificultade> Dificultades { get; set; } = null!;
        public virtual DbSet<DisValeH> DisValeHs { get; set; } = null!;
        public virtual DbSet<DisValeL> DisValeLs { get; set; } = null!;
        public virtual DbSet<DistArtsvenbonbol> DistArtsvenbonbols { get; set; } = null!;
        public virtual DbSet<DistArtsvenotrbon> DistArtsvenotrbons { get; set; } = null!;
        public virtual DbSet<DistDevolclihVw01> DistDevolclihVw01s { get; set; } = null!;
        public virtual DbSet<DistInvartsven> DistInvartsvens { get; set; } = null!;
        public virtual DbSet<DistInvcfg> DistInvcfgs { get; set; } = null!;
        public virtual DbSet<DistInvclicla> DistInvcliclas { get; set; } = null!;
        public virtual DbSet<DistInvclivend> DistInvclivends { get; set; } = null!;
        public virtual DbSet<DistInvclivendl> DistInvclivendls { get; set; } = null!;
        public virtual DbSet<DistInvdevolclih> DistInvdevolclihs { get; set; } = null!;
        public virtual DbSet<DistInvdevolclil> DistInvdevolclils { get; set; } = null!;
        public virtual DbSet<DistInvfiscli> DistInvfisclis { get; set; } = null!;
        public virtual DbSet<DistInvocomclih> DistInvocomclihs { get; set; } = null!;
        public virtual DbSet<DistInvocomclil> DistInvocomclils { get; set; } = null!;
        public virtual DbSet<DistInvpersonal> DistInvpersonals { get; set; } = null!;
        public virtual DbSet<DistInvtabpron> DistInvtabprons { get; set; } = null!;
        public virtual DbSet<DistInvvend> DistInvvends { get; set; } = null!;
        public virtual DbSet<DistLiqcierreh> DistLiqcierrehs { get; set; } = null!;
        public virtual DbSet<DistLiqcierrel> DistLiqcierrels { get; set; } = null!;
        public virtual DbSet<DistLiqenvio> DistLiqenvios { get; set; } = null!;
        public virtual DbSet<DistLiqmulta> DistLiqmultas { get; set; } = null!;
        public virtual DbSet<DistLiqpago> DistLiqpagos { get; set; } = null!;
        public virtual DbSet<DistLiqprecio> DistLiqprecios { get; set; } = null!;
        public virtual DbSet<DistLiqregreso> DistLiqregresos { get; set; } = null!;
        public virtual DbSet<DistLiquidacH> DistLiquidacHes { get; set; } = null!;
        public virtual DbSet<DistLiqvalesh> DistLiqvaleshes { get; set; } = null!;
        public virtual DbSet<DistLiqvaleshExtra1> DistLiqvaleshExtra1s { get; set; } = null!;
        public virtual DbSet<DistLiqvalesl> DistLiqvalesls { get; set; } = null!;
        public virtual DbSet<DistReportesg> DistReportesgs { get; set; } = null!;
        public virtual DbSet<DistTemporal> DistTemporals { get; set; } = null!;
        public virtual DbSet<DoccontableFecae> DoccontableFecaes { get; set; } = null!;
        public virtual DbSet<Empresa> Empresas { get; set; } = null!;
        public virtual DbSet<EmpresaExtra2> EmpresaExtra2s { get; set; } = null!;
        public virtual DbSet<Ensamble> Ensambles { get; set; } = null!;
        public virtual DbSet<EnsamblesClaCliente> EnsamblesClaClientes { get; set; } = null!;
        public virtual DbSet<EnsamblesCliente> EnsamblesClientes { get; set; } = null!;
        public virtual DbSet<EnsamblesVw> EnsamblesVws { get; set; } = null!;
        public virtual DbSet<EnvDocumento> EnvDocumentos { get; set; } = null!;
        public virtual DbSet<EstaCxc> EstaCxcs { get; set; } = null!;
        public virtual DbSet<EstaCxp> EstaCxps { get; set; } = null!;
        public virtual DbSet<Estadistica> Estadisticas { get; set; } = null!;
        public virtual DbSet<FacAnulacion> FacAnulacions { get; set; } = null!;
        public virtual DbSet<FacBackorder> FacBackorders { get; set; } = null!;
        public virtual DbSet<FacBackordersH> FacBackordersHes { get; set; } = null!;
        public virtual DbSet<FacBackordersL> FacBackordersLs { get; set; } = null!;
        public virtual DbSet<FacCobrador> FacCobradors { get; set; } = null!;
        public virtual DbSet<FacComisione> FacComisiones { get; set; } = null!;
        public virtual DbSet<FacComisionr> FacComisionrs { get; set; } = null!;
        public virtual DbSet<FacCotCliente> FacCotClientes { get; set; } = null!;
        public virtual DbSet<FacCotizaExtrah> FacCotizaExtrahs { get; set; } = null!;
        public virtual DbSet<FacCotizaExtral> FacCotizaExtrals { get; set; } = null!;
        public virtual DbSet<FacCotizaH> FacCotizaHs { get; set; } = null!;
        public virtual DbSet<FacCotizaL> FacCotizaLs { get; set; } = null!;
        public virtual DbSet<FacCotizalDescrip> FacCotizalDescrips { get; set; } = null!;
        public virtual DbSet<FacDespachobkorder> FacDespachobkorders { get; set; } = null!;
        public virtual DbSet<FacEnviosH> FacEnviosHes { get; set; } = null!;
        public virtual DbSet<FacEnviosL> FacEnviosLs { get; set; } = null!;
        public virtual DbSet<FacHistItem> FacHistItems { get; set; } = null!;
        public virtual DbSet<FacOrdencH> FacOrdencHes { get; set; } = null!;
        public virtual DbSet<FacOrdencL> FacOrdencLs { get; set; } = null!;
        public virtual DbSet<FacPago> FacPagos { get; set; } = null!;
        public virtual DbSet<FacRentabilidad> FacRentabilidads { get; set; } = null!;
        public virtual DbSet<FacturasXFecha> FacturasXFechas { get; set; } = null!;
        public virtual DbSet<FelLlafe> FelLlaves { get; set; } = null!;
        public virtual DbSet<Feriado> Feriados { get; set; } = null!;
        public virtual DbSet<FiadoresCliente> FiadoresClientes { get; set; } = null!;
        public virtual DbSet<Fisico> Fisicos { get; set; } = null!;
        public virtual DbSet<FormatAjuc> FormatAjucs { get; set; } = null!;
        public virtual DbSet<Generale> Generales { get; set; } = null!;
        public virtual DbSet<GeneralesExtra1> GeneralesExtra1s { get; set; } = null!;
        public virtual DbSet<Hedhold> Hedholds { get; set; } = null!;
        public virtual DbSet<HistCli> HistClis { get; set; } = null!;
        public virtual DbSet<HistPro> HistPros { get; set; } = null!;
        public virtual DbSet<HistkCxc> HistkCxcs { get; set; } = null!;
        public virtual DbSet<HistkCxp> HistkCxps { get; set; } = null!;
        public virtual DbSet<IngBodegah> IngBodegahs { get; set; } = null!;
        public virtual DbSet<IngBodegal> IngBodegals { get; set; } = null!;
        public virtual DbSet<IngBodegalExt1> IngBodegalExt1s { get; set; } = null!;
        public virtual DbSet<InvCalculoprc> InvCalculoprcs { get; set; } = null!;
        public virtual DbSet<InvCentro> InvCentros { get; set; } = null!;
        public virtual DbSet<InvColore> InvColores { get; set; } = null!;
        public virtual DbSet<InvEquipo> InvEquipos { get; set; } = null!;
        public virtual DbSet<InvEquivalente> InvEquivalentes { get; set; } = null!;
        public virtual DbSet<InvLiquidaH> InvLiquidaHs { get; set; } = null!;
        public virtual DbSet<InvLiquidaL> InvLiquidaLs { get; set; } = null!;
        public virtual DbSet<InvListaPrecio> InvListaPrecios { get; set; } = null!;
        public virtual DbSet<InvLoteFecha> InvLoteFechas { get; set; } = null!;
        public virtual DbSet<InvOrdencH> InvOrdencHes { get; set; } = null!;
        public virtual DbSet<InvOrdencL> InvOrdencLs { get; set; } = null!;
        public virtual DbSet<InvPrecio> InvPrecios { get; set; } = null!;
        public virtual DbSet<InvPreciodesc> InvPreciodescs { get; set; } = null!;
        public virtual DbSet<InvRentabilidad> InvRentabilidads { get; set; } = null!;
        public virtual DbSet<InvReporteStat> InvReporteStats { get; set; } = null!;
        public virtual DbSet<InvReporteVtasSublinea> InvReporteVtasSublineas { get; set; } = null!;
        public virtual DbSet<InvRepuesto> InvRepuestos { get; set; } = null!;
        public virtual DbSet<InvRequisicionh> InvRequisicionhs { get; set; } = null!;
        public virtual DbSet<InvRequisicionl> InvRequisicionls { get; set; } = null!;
        public virtual DbSet<InvSaldoinicial> InvSaldoinicials { get; set; } = null!;
        public virtual DbSet<InvSegbodega> InvSegbodegas { get; set; } = null!;
        public virtual DbSet<InvSerie> InvSeries { get; set; } = null!;
        public virtual DbSet<InvTitpre> InvTitpres { get; set; } = null!;
        public virtual DbSet<InvbodClasesbodega> InvbodClasesbodegas { get; set; } = null!;
        public virtual DbSet<InvbodTiposbodega> InvbodTiposbodegas { get; set; } = null!;
        public virtual DbSet<KardexCxc> KardexCxcs { get; set; } = null!;
        public virtual DbSet<KardexCxp> KardexCxps { get; set; } = null!;
        public virtual DbSet<Lactar> Lactars { get; set; } = null!;
        public virtual DbSet<LineasArtspo> LineasArtspos { get; set; } = null!;
        public virtual DbSet<LineasVta> LineasVtas { get; set; } = null!;
        public virtual DbSet<MantDificultad> MantDificultads { get; set; } = null!;
        public virtual DbSet<Maquinarium> Maquinaria { get; set; } = null!;
        public virtual DbSet<MastAsigTal> MastAsigTals { get; set; } = null!;
        public virtual DbSet<Mastact> Mastacts { get; set; } = null!;
        public virtual DbSet<Mastcli> Mastclis { get; set; } = null!;
        public virtual DbSet<Mastcli1> Mastcli1s { get; set; } = null!;
        public virtual DbSet<Mastcon> Mastcons { get; set; } = null!;
        public virtual DbSet<Mastdoc> Mastdocs { get; set; } = null!;
        public virtual DbSet<MastinvDescrip> MastinvDescrips { get; set; } = null!;
        public virtual DbSet<Mastinvpo> Mastinvpos { get; set; } = null!;
        public virtual DbSet<MastinvposExtra> MastinvposExtras { get; set; } = null!;
        public virtual DbSet<Mastprov> Mastprovs { get; set; } = null!;
        public virtual DbSet<MastprovExt1> MastprovExt1s { get; set; } = null!;
        public virtual DbSet<Masttran> Masttrans { get; set; } = null!;
        public virtual DbSet<MftTmpSaldoKardex> MftTmpSaldoKardices { get; set; } = null!;
        public virtual DbSet<Moneda> Monedas { get; set; } = null!;
        public virtual DbSet<MovBod> MovBods { get; set; } = null!;
        public virtual DbSet<MovBol> MovBols { get; set; } = null!;
        public virtual DbSet<Movcajapo> Movcajapos { get; set; } = null!;
        public virtual DbSet<MstTarjetum> MstTarjeta { get; set; } = null!;
        public virtual DbSet<MtConfigTipo> MtConfigTipos { get; set; } = null!;
        public virtual DbSet<MtFuncionalidad> MtFuncionalidads { get; set; } = null!;
        public virtual DbSet<MtPerfilAcceso> MtPerfilAccesos { get; set; } = null!;
        public virtual DbSet<MtUsuario> MtUsuarios { get; set; } = null!;
        public virtual DbSet<NomDefmov> NomDefmovs { get; set; } = null!;
        public virtual DbSet<NomDefmovdep> NomDefmovdeps { get; set; } = null!;
        public virtual DbSet<NomDepartamento> NomDepartamentos { get; set; } = null!;
        public virtual DbSet<NomDiasExtra> NomDiasExtras { get; set; } = null!;
        public virtual DbSet<NomLibroSalario> NomLibroSalarios { get; set; } = null!;
        public virtual DbSet<NomLibroSalariot> NomLibroSalariots { get; set; } = null!;
        public virtual DbSet<NomMovdesc> NomMovdescs { get; set; } = null!;
        public virtual DbSet<NomMoviper> NomMovipers { get; set; } = null!;
        public virtual DbSet<NomMoviperApli> NomMoviperAplis { get; set; } = null!;
        public virtual DbSet<NomMoviperAplit> NomMoviperAplits { get; set; } = null!;
        public virtual DbSet<NomPartidum> NomPartida { get; set; } = null!;
        public virtual DbSet<NomPersonal> NomPersonals { get; set; } = null!;
        public virtual DbSet<NomPersonal1> NomPersonal1s { get; set; } = null!;
        public virtual DbSet<NomPersonalExt1> NomPersonalExt1s { get; set; } = null!;
        public virtual DbSet<NomPersonalExt2> NomPersonalExt2s { get; set; } = null!;
        public virtual DbSet<NomPrestacione> NomPrestaciones { get; set; } = null!;
        public virtual DbSet<NomPresu> NomPresus { get; set; } = null!;
        public virtual DbSet<NomPuesto> NomPuestos { get; set; } = null!;
        public virtual DbSet<NomReversion> NomReversions { get; set; } = null!;
        public virtual DbSet<NomSuspension> NomSuspensions { get; set; } = null!;
        public virtual DbSet<NomTiposuspension> NomTiposuspensions { get; set; } = null!;
        public virtual DbSet<NompreHist> NompreHists { get; set; } = null!;
        public virtual DbSet<NotNotificacione> NotNotificaciones { get; set; } = null!;
        public virtual DbSet<Oferta> Ofertas { get; set; } = null!;
        public virtual DbSet<OfertasDetalle> OfertasDetalles { get; set; } = null!;
        public virtual DbSet<OtrosPrecio> OtrosPrecios { get; set; } = null!;
        public virtual DbSet<PagosH> PagosHes { get; set; } = null!;
        public virtual DbSet<PagosL> PagosLs { get; set; } = null!;
        public virtual DbSet<PartidaTempComp> PartidaTempComps { get; set; } = null!;
        public virtual DbSet<PartidaTempVent> PartidaTempVents { get; set; } = null!;
        public virtual DbSet<PartidaTempVentum> PartidaTempVenta { get; set; } = null!;
        public virtual DbSet<PartidahH> PartidahHs { get; set; } = null!;
        public virtual DbSet<PartidalH> PartidalHs { get; set; } = null!;
        public virtual DbSet<PdcCfgdium> PdcCfgdia { get; set; } = null!;
        public virtual DbSet<PdcEmpresa> PdcEmpresas { get; set; } = null!;
        public virtual DbSet<PdcProgdiariah> PdcProgdiariahs { get; set; } = null!;
        public virtual DbSet<PdcProgdiarial> PdcProgdiarials { get; set; } = null!;
        public virtual DbSet<PdcProgdiarialPag> PdcProgdiarialPags { get; set; } = null!;
        public virtual DbSet<PdcRegdepositosH> PdcRegdepositosHes { get; set; } = null!;
        public virtual DbSet<PdcRegpagosH> PdcRegpagosHes { get; set; } = null!;
        public virtual DbSet<PedCaractL> PedCaractLs { get; set; } = null!;
        public virtual DbSet<PedCaracterist> PedCaracterists { get; set; } = null!;
        public virtual DbSet<PedOpcCaract> PedOpcCaracts { get; set; } = null!;
        public virtual DbSet<PedPedidosH> PedPedidosHes { get; set; } = null!;
        public virtual DbSet<PedPedidosL> PedPedidosLs { get; set; } = null!;
        public virtual DbSet<PedidoSugerido> PedidoSugeridos { get; set; } = null!;
        public virtual DbSet<PosCorrelativo> PosCorrelativos { get; set; } = null!;
        public virtual DbSet<PosOfMayPct> PosOfMayPcts { get; set; } = null!;
        public virtual DbSet<PosOfertaDium> PosOfertaDia { get; set; } = null!;
        public virtual DbSet<PosOfertaMayor> PosOfertaMayors { get; set; } = null!;
        public virtual DbSet<PrAdminReporte> PrAdminReportes { get; set; } = null!;
        public virtual DbSet<PrAreaNegocio> PrAreaNegocios { get; set; } = null!;
        public virtual DbSet<PrCcxpp> PrCcxpps { get; set; } = null!;
        public virtual DbSet<PrConcepArea> PrConcepAreas { get; set; } = null!;
        public virtual DbSet<PrConcepPartidum> PrConcepPartida { get; set; } = null!;
        public virtual DbSet<PrConfigReporte> PrConfigReportes { get; set; } = null!;
        public virtual DbSet<PrConfigTipo> PrConfigTipos { get; set; } = null!;
        public virtual DbSet<PrCorrelativo> PrCorrelativos { get; set; } = null!;
        public virtual DbSet<PrDefReporte> PrDefReportes { get; set; } = null!;
        public virtual DbSet<PrDepartamento> PrDepartamentos { get; set; } = null!;
        public virtual DbSet<PrEjecPresup> PrEjecPresups { get; set; } = null!;
        public virtual DbSet<PrEmpresa> PrEmpresas { get; set; } = null!;
        public virtual DbSet<PrExplosion> PrExplosions { get; set; } = null!;
        public virtual DbSet<PrExplosionAnual> PrExplosionAnuals { get; set; } = null!;
        public virtual DbSet<PrFormulacionDetail> PrFormulacionDetails { get; set; } = null!;
        public virtual DbSet<PrFormulacionHeader> PrFormulacionHeaders { get; set; } = null!;
        public virtual DbSet<PrFunModulo> PrFunModulos { get; set; } = null!;
        public virtual DbSet<PrFuncionalidad> PrFuncionalidads { get; set; } = null!;
        public virtual DbSet<PrGrupo> PrGrupos { get; set; } = null!;
        public virtual DbSet<PrLineaProduc> PrLineaProducs { get; set; } = null!;
        public virtual DbSet<PrMbgrupo> PrMbgrupos { get; set; } = null!;
        public virtual DbSet<PrMoneda> PrMonedas { get; set; } = null!;
        public virtual DbSet<PrPartidaPresup> PrPartidaPresups { get; set; } = null!;
        public virtual DbSet<PrPartidaProy> PrPartidaProys { get; set; } = null!;
        public virtual DbSet<PrPartidaProyAnual> PrPartidaProyAnuals { get; set; } = null!;
        public virtual DbSet<PrPartidaTran> PrPartidaTrans { get; set; } = null!;
        public virtual DbSet<PrPartidaTransAnual> PrPartidaTransAnuals { get; set; } = null!;
        public virtual DbSet<PrPerfil> PrPerfils { get; set; } = null!;
        public virtual DbSet<PrPuesto> PrPuestos { get; set; } = null!;
        public virtual DbSet<PrReporteTmp> PrReporteTmps { get; set; } = null!;
        public virtual DbSet<PrTasaDiarium> PrTasaDiaria { get; set; } = null!;
        public virtual DbSet<PrTasaProm> PrTasaProms { get; set; } = null!;
        public virtual DbSet<PrTipoPresup> PrTipoPresups { get; set; } = null!;
        public virtual DbSet<PrUsuario> PrUsuarios { get; set; } = null!;
        public virtual DbSet<PrVersionPresup> PrVersionPresups { get; set; } = null!;
        public virtual DbSet<PreciosListaH> PreciosListaHs { get; set; } = null!;
        public virtual DbSet<PreciosListaL> PreciosListaLs { get; set; } = null!;
        public virtual DbSet<PreciosProvee> PreciosProvees { get; set; } = null!;
        public virtual DbSet<PrimerLune> PrimerLunes { get; set; } = null!;
        public virtual DbSet<ProdDepProduccion> ProdDepProduccions { get; set; } = null!;
        public virtual DbSet<ProdFormatH> ProdFormatHs { get; set; } = null!;
        public virtual DbSet<ProdFormatL> ProdFormatLs { get; set; } = null!;
        public virtual DbSet<ProdOrder> ProdOrders { get; set; } = null!;
        public virtual DbSet<ProdOrdersH> ProdOrdersHes { get; set; } = null!;
        public virtual DbSet<ProdOrdersL> ProdOrdersLs { get; set; } = null!;
        public virtual DbSet<Profile> Profiles { get; set; } = null!;
        public virtual DbSet<Prospecto> Prospectos { get; set; } = null!;
        public virtual DbSet<QsConfigTipo> QsConfigTipos { get; set; } = null!;
        public virtual DbSet<QsysContingencium> QsysContingencia { get; set; } = null!;
        public virtual DbSet<QsysDocumento> QsysDocumentos { get; set; } = null!;
        public virtual DbSet<QsysDocumentoAnula> QsysDocumentoAnulas { get; set; } = null!;
        public virtual DbSet<QsysFelFactAnuVw> QsysFelFactAnuVws { get; set; } = null!;
        public virtual DbSet<QsysFelHncredVw> QsysFelHncredVws { get; set; } = null!;
        public virtual DbSet<QsysFelHndebVw> QsysFelHndebVws { get; set; } = null!;
        public virtual DbSet<QsysFelNabnanuVw> QsysFelNabnanuVws { get; set; } = null!;
        public virtual DbSet<QsysFelNcreanuVw> QsysFelNcreanuVws { get; set; } = null!;
        public virtual DbSet<QsysFelNdebanuVw> QsysFelNdebanuVws { get; set; } = null!;
        public virtual DbSet<QsysfeldetalleVw> QsysfeldetalleVws { get; set; } = null!;
        public virtual DbSet<QsysfelheaderVw> QsysfelheaderVws { get; set; } = null!;
        public virtual DbSet<Qsysfmese> Qsysfmeses { get; set; } = null!;
        public virtual DbSet<Rechtar> Rechtars { get; set; } = null!;
        public virtual DbSet<RelUbicacion> RelUbicacions { get; set; } = null!;
        public virtual DbSet<RelojFisico> RelojFisicos { get; set; } = null!;
        public virtual DbSet<Responsable> Responsables { get; set; } = null!;
        public virtual DbSet<RolesUsuario> RolesUsuarios { get; set; } = null!;
        public virtual DbSet<RutasDia> RutasDias { get; set; } = null!;
        public virtual DbSet<RutasZonageografica> RutasZonageograficas { get; set; } = null!;
        public virtual DbSet<SegVarUsuario> SegVarUsuarios { get; set; } = null!;
        public virtual DbSet<SegVariable> SegVariables { get; set; } = null!;
        public virtual DbSet<SistemasVenta> SistemasVentas { get; set; } = null!;
        public virtual DbSet<SublineasVta> SublineasVtas { get; set; } = null!;
        public virtual DbSet<Sublineaspo> Sublineaspos { get; set; } = null!;
        public virtual DbSet<SumaFactura> SumaFacturas { get; set; } = null!;
        public virtual DbSet<TablaPorcentaje> TablaPorcentajes { get; set; } = null!;
        public virtual DbSet<Tartemp> Tartemps { get; set; } = null!;
        public virtual DbSet<TasaDolar> TasaDolars { get; set; } = null!;
        public virtual DbSet<TempCliente> TempClientes { get; set; } = null!;
        public virtual DbSet<TempClienteExtra> TempClienteExtras { get; set; } = null!;
        public virtual DbSet<TempClientePedido> TempClientePedidos { get; set; } = null!;
        public virtual DbSet<TempEstado> TempEstados { get; set; } = null!;
        public virtual DbSet<TempPartida> TempPartidas { get; set; } = null!;
        public virtual DbSet<Temphead> Tempheads { get; set; } = null!;
        public virtual DbSet<Templine> Templines { get; set; } = null!;
        public virtual DbSet<TmpCp2ClientesExtra> TmpCp2ClientesExtras { get; set; } = null!;
        public virtual DbSet<TmpCp2Moneda> TmpCp2Monedas { get; set; } = null!;
        public virtual DbSet<TmpCp2OtrosPrecio> TmpCp2OtrosPrecios { get; set; } = null!;
        public virtual DbSet<TmpCp2VendedorExtra> TmpCp2VendedorExtras { get; set; } = null!;
        public virtual DbSet<TmpCp3OtrosPrecio> TmpCp3OtrosPrecios { get; set; } = null!;
        public virtual DbSet<TmpCpClientesExtra> TmpCpClientesExtras { get; set; } = null!;
        public virtual DbSet<TmpCpInventario> TmpCpInventarios { get; set; } = null!;
        public virtual DbSet<TmpCpMoneda> TmpCpMonedas { get; set; } = null!;
        public virtual DbSet<TmpCpMonedas1> TmpCpMonedas1s { get; set; } = null!;
        public virtual DbSet<TmpCpOtrosPrecio> TmpCpOtrosPrecios { get; set; } = null!;
        public virtual DbSet<TmpCpVendedorExtra> TmpCpVendedorExtras { get; set; } = null!;
        public virtual DbSet<TmpVtadev> TmpVtadevs { get; set; } = null!;
        public virtual DbSet<TransConfig> TransConfigs { get; set; } = null!;
        public virtual DbSet<TransacInv> TransacInvs { get; set; } = null!;
        public virtual DbSet<TransacVentasH> TransacVentasHes { get; set; } = null!;
        public virtual DbSet<TransacVentasL> TransacVentasLs { get; set; } = null!;
        public virtual DbSet<TransaccionCompra> TransaccionCompras { get; set; } = null!;
        public virtual DbSet<TurnoSemana> TurnoSemanas { get; set; } = null!;
        public virtual DbSet<Ubicacion> Ubicacions { get; set; } = null!;
        public virtual DbSet<UniMedidum> UniMedida { get; set; } = null!;
        public virtual DbSet<Usuario> Usuarios { get; set; } = null!;
        public virtual DbSet<VenCanale> VenCanales { get; set; } = null!;
        public virtual DbSet<VenTipovendedor> VenTipovendedors { get; set; } = null!;
        public virtual DbSet<VendeMinmaxCamb> VendeMinmaxCambs { get; set; } = null!;
        public virtual DbSet<VendePorcBonbol> VendePorcBonbols { get; set; } = null!;
        public virtual DbSet<VendePorcVolum> VendePorcVolums { get; set; } = null!;
        public virtual DbSet<Vendedor> Vendedors { get; set; } = null!;
        public virtual DbSet<VendedorExtra> VendedorExtras { get; set; } = null!;
        public virtual DbSet<VensalPorcVolum> VensalPorcVolums { get; set; } = null!;
        public virtual DbSet<Venthpo> Venthpos { get; set; } = null!;
        public virtual DbSet<VenthposExt> VenthposExts { get; set; } = null!;
        public virtual DbSet<VenthposExtra> VenthposExtras { get; set; } = null!;
        public virtual DbSet<VenthposFecae> VenthposFecaes { get; set; } = null!;
        public virtual DbSet<VenthposProf> VenthposProfs { get; set; } = null!;
        public virtual DbSet<VenthposVw01> VenthposVw01s { get; set; } = null!;
        public virtual DbSet<Ventlpo> Ventlpos { get; set; } = null!;
        public virtual DbSet<VentlposDescrip> VentlposDescrips { get; set; } = null!;
        public virtual DbSet<VentlposExtra> VentlposExtras { get; set; } = null!;
        public virtual DbSet<VentlposProf> VentlposProfs { get; set; } = null!;
        public virtual DbSet<VerifFecha> VerifFechas { get; set; } = null!;
        public virtual DbSet<Visita> Visitas { get; set; } = null!;
        public virtual DbSet<Vitacven> Vitacvens { get; set; } = null!;
        public virtual DbSet<VprcBonoart> VprcBonoarts { get; set; } = null!;
        public virtual DbSet<Vtavendedor> Vtavendedors { get; set; } = null!;
        public virtual DbSet<XdistLiquidacH> XdistLiquidacHes { get; set; } = null!;
        public virtual DbSet<YdistLiquidacH> YdistLiquidacHes { get; set; } = null!;
        public virtual DbSet<Zonasgeografica> Zonasgeograficas { get; set; } = null!;

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
            //#warning To protect potentially sensitive information in your connection string, you should move it out of source code.
            //You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration -
            //see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, }
            //see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Server=10.34.1.5;Database=Qsystems;User ID=sa;Password=sql;MultipleActiveResultSets=true;");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Abrecajapo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ABRECAJAPOS");

                entity.HasIndex(e => new { e.CajEmpresa, e.CajTienda, e.CajTerminal, e.CajNumero }, "IDXABRE")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CajDescrip)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CAJ_DESCRIP");

                entity.Property(e => e.CajEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CAJ_EMPRESA");

                entity.Property(e => e.CajFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CAJ_FECHA");

                entity.Property(e => e.CajHora)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("CAJ_HORA");

                entity.Property(e => e.CajNombre)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CAJ_NOMBRE");

                entity.Property(e => e.CajNumero).HasColumnName("CAJ_NUMERO");

                entity.Property(e => e.CajTerminal).HasColumnName("CAJ_TERMINAL");

                entity.Property(e => e.CajTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CAJ_TIENDA");
            });

            modelBuilder.Entity<Actualiza>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ACTUALIZA");

                entity.HasIndex(e => new { e.ActEmpresa, e.ActFuncion }, "IDXACTUAL")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.ActEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACT_EMPRESA");

                entity.Property(e => e.ActFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ACT_FECHA");

                entity.Property(e => e.ActFuncion)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ACT_FUNCION");

                entity.Property(e => e.ActHora)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ACT_HORA");
            });

            modelBuilder.Entity<Actualizacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ACTUALIZACION");

                entity.HasIndex(e => new { e.ActgEmpresa, e.ActgFuncion, e.ActgDocumento }, "IDXACTUALIZA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.ActgBatch).HasColumnName("ACTG_BATCH");

                entity.Property(e => e.ActgDocumento)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ACTG_DOCUMENTO");

                entity.Property(e => e.ActgEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACTG_EMPRESA");

                entity.Property(e => e.ActgFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ACTG_FECHA");

                entity.Property(e => e.ActgFuncion)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("ACTG_FUNCION");

                entity.Property(e => e.ActgHora)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ACTG_HORA");

                entity.Property(e => e.ActgUsuario)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ACTG_USUARIO");
            });

            modelBuilder.Entity<AdmEmpProdH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ADM_EMP_PROD_H");

                entity.Property(e => e.PthEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PTH_EMPRESA");

                entity.Property(e => e.PthFechaEm)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PTH_FECHA_EM");

                entity.Property(e => e.PthGrupo).HasColumnName("PTH_GRUPO");

                entity.Property(e => e.PthJefeGrupo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PTH_JEFE_GRUPO");
            });

            modelBuilder.Entity<AdmEmpProdL>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ADM_EMP_PROD_L");

                entity.Property(e => e.PtlCantEmp)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PTL_CANT_EMP");

                entity.Property(e => e.PtlEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PTL_EMPRESA");

                entity.Property(e => e.PtlFechaEm)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PTL_FECHA_EM");

                entity.Property(e => e.PtlGrupo).HasColumnName("PTL_GRUPO");

                entity.Property(e => e.PtlInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("PTL_INVENTARIO");

                entity.Property(e => e.PtlProduccion)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PTL_PRODUCCION");

                entity.Property(e => e.PtlTipoPres)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PTL_TIPO_PRES");

                entity.Property(e => e.PtlTotDesp)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PTL_TOT_DESP");

                entity.Property(e => e.PtlTotPan)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PTL_TOT_PAN");
            });

            modelBuilder.Entity<AdmFormTipH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ADM_FORM_TIP_H");

                entity.Property(e => e.FrhEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("FRH_EMPRESA");

                entity.Property(e => e.FrhInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FRH_INVENTARIO");

                entity.Property(e => e.FrhUniTeo).HasColumnName("FRH_UNI_TEO");
            });

            modelBuilder.Entity<AdmFormTipL>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ADM_FORM_TIP_L");

                entity.Property(e => e.FrlCantidad).HasColumnName("FRL_CANTIDAD");

                entity.Property(e => e.FrlCodigoMp)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FRL_CODIGO_MP");

                entity.Property(e => e.FrlDescMp)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("FRL_DESC_MP");

                entity.Property(e => e.FrlEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("FRL_EMPRESA");

                entity.Property(e => e.FrlInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FRL_INVENTARIO");

                entity.Property(e => e.FrlUnMedida)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("FRL_UN_MEDIDA");
            });

            modelBuilder.Entity<AdmGrpProdH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ADM_GRP_PROD_H");

                entity.Property(e => e.GrhDescripcion)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("GRH_DESCRIPCION");

                entity.Property(e => e.GrhEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("GRH_EMPRESA");

                entity.Property(e => e.GrhFechaEm)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("GRH_FECHA_EM");

                entity.Property(e => e.GrhGrupo).HasColumnName("GRH_GRUPO");
            });

            modelBuilder.Entity<AdmGrpProdL>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ADM_GRP_PROD_L");

                entity.Property(e => e.GrlAyu1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("GRL_AYU_1");

                entity.Property(e => e.GrlAyu2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("GRL_AYU_2");

                entity.Property(e => e.GrlAyu3)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("GRL_AYU_3");

                entity.Property(e => e.GrlEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("GRL_EMPRESA");

                entity.Property(e => e.GrlGrupo).HasColumnName("GRL_GRUPO");

                entity.Property(e => e.GrlJefeGrupo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("GRL_JEFE_GRUPO");
            });

            modelBuilder.Entity<AdmProdDiaH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ADM_PROD_DIA_H");

                entity.Property(e => e.PdhAyu1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PDH_AYU_1");

                entity.Property(e => e.PdhAyu2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PDH_AYU_2");

                entity.Property(e => e.PdhAyu3)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PDH_AYU_3");

                entity.Property(e => e.PdhEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PDH_EMPRESA");

                entity.Property(e => e.PdhFechaEm)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PDH_FECHA_EM");

                entity.Property(e => e.PdhGrupo).HasColumnName("PDH_GRUPO");

                entity.Property(e => e.PdhJefeGrupo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PDH_JEFE_GRUPO");
            });

            modelBuilder.Entity<AdmProdDiaL>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ADM_PROD_DIA_L");

                entity.Property(e => e.PdlCantQq)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PDL_CANT_QQ");

                entity.Property(e => e.PdlEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PDL_EMPRESA");

                entity.Property(e => e.PdlFechaEm)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PDL_FECHA_EM");

                entity.Property(e => e.PdlGrupo).HasColumnName("PDL_GRUPO");

                entity.Property(e => e.PdlInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("PDL_INVENTARIO");

                entity.Property(e => e.PdlUniProd)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PDL_UNI_PROD");
            });

            modelBuilder.Entity<AdmProdTermH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ADM_PROD_TERM_H");

                entity.Property(e => e.PrhDescripcion)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("PRH_DESCRIPCION");

                entity.Property(e => e.PrhDomingo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PRH_DOMINGO");

                entity.Property(e => e.PrhEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PRH_EMPRESA");

                entity.Property(e => e.PrhInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("PRH_INVENTARIO");

                entity.Property(e => e.PrhJueves)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PRH_JUEVES");

                entity.Property(e => e.PrhLunes)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PRH_LUNES");

                entity.Property(e => e.PrhMartes)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PRH_MARTES");

                entity.Property(e => e.PrhMiercoles)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PRH_MIERCOLES");

                entity.Property(e => e.PrhSabado)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PRH_SABADO");

                entity.Property(e => e.PrhViernes)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PRH_VIERNES");
            });

            modelBuilder.Entity<AdmProdTermL>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ADM_PROD_TERM_L");

                entity.Property(e => e.PrlCodEmp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRL_COD_EMP");

                entity.Property(e => e.PrlEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PRL_EMPRESA");

                entity.Property(e => e.PrlInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("PRL_INVENTARIO");

                entity.Property(e => e.PrlUniEmp).HasColumnName("PRL_UNI_EMP");
            });

            modelBuilder.Entity<AjusExtraCxp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("AJUS_EXTRA_CXP");

                entity.HasIndex(e => new { e.AjuxEmpresa, e.AjuxNumero }, "AJUS_EXTRA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.AjuxBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("AJUX_BODEGA");

                entity.Property(e => e.AjuxClasificacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AJUX_CLASIFICACION");

                entity.Property(e => e.AjuxEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("AJUX_EMPRESA");

                entity.Property(e => e.AjuxFechar)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("AJUX_FECHAR");

                entity.Property(e => e.AjuxNumero).HasColumnName("AJUX_NUMERO");
            });

            modelBuilder.Entity<AjustesCxc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("AJUSTES_CXC");

                entity.HasIndex(e => new { e.AjucEmpresa, e.AjucTipo, e.AjucNumero }, "PK_AJUSTES_CXC")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.AjucEmpresa, e.AjucFecha }, "SK_AJUCFE")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.AjucEmpresa, e.AjucCliente, e.AjucTipo }, "SK_AJUCTIP")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.AjucEmpresa, e.AjucCliente, e.AjucFecha }, "SK_INCLI")
                    .HasFillFactor(90);

                entity.Property(e => e.AjucArea)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("AJUC_AREA");

                entity.Property(e => e.AjucCentro)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("AJUC_CENTRO");

                entity.Property(e => e.AjucCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("AJUC_CLIENTE");

                entity.Property(e => e.AjucCobrador)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("AJUC_COBRADOR");

                entity.Property(e => e.AjucDescripcion)
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasColumnName("AJUC_DESCRIPCION");

                entity.Property(e => e.AjucDocfisico)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("AJUC_DOCFISICO");

                entity.Property(e => e.AjucDocumento).HasColumnName("AJUC_DOCUMENTO");

                entity.Property(e => e.AjucEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("AJUC_EMPRESA");

                entity.Property(e => e.AjucFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("AJUC_FECHA");

                entity.Property(e => e.AjucFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("AJUC_FECHAC");

                entity.Property(e => e.AjucImpresion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AJUC_IMPRESION");

                entity.Property(e => e.AjucLibroiva)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AJUC_LIBROIVA");

                entity.Property(e => e.AjucMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("AJUC_MONEDA");

                entity.Property(e => e.AjucMonto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("AJUC_MONTO");

                entity.Property(e => e.AjucNumero).HasColumnName("AJUC_NUMERO");

                entity.Property(e => e.AjucReferencia)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("AJUC_REFERENCIA");

                entity.Property(e => e.AjucRuta)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("AJUC_RUTA");

                entity.Property(e => e.AjucSaldo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("AJUC_SALDO");

                entity.Property(e => e.AjucSerfisico)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("AJUC_SERFISICO");

                entity.Property(e => e.AjucSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("AJUC_SERIE");

                entity.Property(e => e.AjucStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AJUC_STATUS");

                entity.Property(e => e.AjucTasa)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("AJUC_TASA");

                entity.Property(e => e.AjucTerminal).HasColumnName("AJUC_TERMINAL");

                entity.Property(e => e.AjucTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("AJUC_TIENDA");

                entity.Property(e => e.AjucTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AJUC_TIPO");

                entity.Property(e => e.AjucTransaccion)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("AJUC_TRANSACCION");

                entity.Property(e => e.AjucUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("AJUC_USUARIOC");
            });

            modelBuilder.Entity<AjustesCxcDetalle>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("AJUSTES_CXC_DETALLE");

                entity.HasIndex(e => new { e.AjucdEmpresa, e.AjucdTipo, e.AjucdNumero, e.AjucdLinea }, "AJUS_DETALLE")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.AjucdEmpresa, e.AjucdTipo, e.AjucdTienda, e.AjucdTerminal, e.AjucdSerie, e.AjucdNumfac }, "ajustes_cxc_detalle_a")
                    .HasFillFactor(90);

                entity.Property(e => e.AjucdBodega)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("AJUCD_BODEGA");

                entity.Property(e => e.AjucdCostotal)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("AJUCD_COSTOTAL");

                entity.Property(e => e.AjucdDescuento)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("AJUCD_DESCUENTO");

                entity.Property(e => e.AjucdDescuenval)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("AJUCD_DESCUENVAL");

                entity.Property(e => e.AjucdEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("AJUCD_EMPRESA");

                entity.Property(e => e.AjucdInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("AJUCD_INVENTARIO");

                entity.Property(e => e.AjucdLinea).HasColumnName("AJUCD_LINEA");

                entity.Property(e => e.AjucdNumero).HasColumnName("AJUCD_NUMERO");

                entity.Property(e => e.AjucdNumfac).HasColumnName("AJUCD_NUMFAC");

                entity.Property(e => e.AjucdPctdescuento).HasColumnName("AJUCD_PCTDESCUENTO");

                entity.Property(e => e.AjucdPrecioun)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("AJUCD_PRECIOUN");

                entity.Property(e => e.AjucdSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("AJUCD_SERIE");

                entity.Property(e => e.AjucdTerminal).HasColumnName("AJUCD_TERMINAL");

                entity.Property(e => e.AjucdTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("AJUCD_TIENDA");

                entity.Property(e => e.AjucdTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AJUCD_TIPO");

                entity.Property(e => e.AjucdUnidades)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("AJUCD_UNIDADES");
            });

            modelBuilder.Entity<AjustesCxcL>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("AJUSTES_CXC_L");

                entity.HasIndex(e => new { e.AjclEmpresa, e.AjclTipo, e.AjclNumero, e.AjclLinea }, "PK_AJUSTES_CXC_L")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.AjclDocumento).HasColumnName("AJCL_DOCUMENTO");

                entity.Property(e => e.AjclEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("AJCL_EMPRESA");

                entity.Property(e => e.AjclLinea).HasColumnName("AJCL_LINEA");

                entity.Property(e => e.AjclMonto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("AJCL_MONTO");

                entity.Property(e => e.AjclNumero).HasColumnName("AJCL_NUMERO");

                entity.Property(e => e.AjclReferencia)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AJCL_REFERENCIA");

                entity.Property(e => e.AjclTerminal).HasColumnName("AJCL_TERMINAL");

                entity.Property(e => e.AjclTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("AJCL_TIENDA");

                entity.Property(e => e.AjclTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AJCL_TIPO");
            });

            modelBuilder.Entity<AjustesCxp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("AJUSTES_CXP");

                entity.HasIndex(e => new { e.AjupEmpresa, e.AjupNumero }, "PK_AJUSTES_CXP")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.AjupEmpresa, e.AjupFecha }, "SK_AJUPFECHA")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.AjupEmpresa, e.AjupProveedor, e.AjupFecha }, "SK_AJUPPROV")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.AjupEmpresa, e.AjupProveedor, e.AjupTipo, e.AjupSaldo }, "SK_AJUPPSAL")
                    .HasFillFactor(90);

                entity.Property(e => e.AjupDescripcion)
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasColumnName("AJUP_DESCRIPCION");

                entity.Property(e => e.AjupDocfisico)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("AJUP_DOCFISICO");

                entity.Property(e => e.AjupEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("AJUP_EMPRESA");

                entity.Property(e => e.AjupFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("AJUP_FECHA");

                entity.Property(e => e.AjupFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("AJUP_FECHAC");

                entity.Property(e => e.AjupImpresion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AJUP_IMPRESION");

                entity.Property(e => e.AjupLibroiva)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AJUP_LIBROIVA");

                entity.Property(e => e.AjupMonto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("AJUP_MONTO");

                entity.Property(e => e.AjupNumero).HasColumnName("AJUP_NUMERO");

                entity.Property(e => e.AjupProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("AJUP_PROVEEDOR");

                entity.Property(e => e.AjupReferencia)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("AJUP_REFERENCIA");

                entity.Property(e => e.AjupSaldo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("AJUP_SALDO");

                entity.Property(e => e.AjupStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AJUP_STATUS");

                entity.Property(e => e.AjupTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("AJUP_TIPO");

                entity.Property(e => e.AjupTransaccion)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("AJUP_TRANSACCION");

                entity.Property(e => e.AjupUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("AJUP_USUARIOC");
            });

            modelBuilder.Entity<ArtsBodega>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ARTS_BODEGA");

                entity.HasIndex(e => new { e.AboEmpresa, e.AboInventario }, "ABO_BODEGA")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.AboEmpresa, e.AboBodega, e.AboInventario }, "ABO_CODIGO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.AboBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ABO_BODEGA");

                entity.Property(e => e.AboEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ABO_EMPRESA");

                entity.Property(e => e.AboInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("ABO_INVENTARIO");

                entity.Property(e => e.AboLocaliza)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ABO_LOCALIZA");

                entity.Property(e => e.AboUltfis)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ABO_ULTFIS");

                entity.Property(e => e.AboUniexi)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ABO_UNIEXI");
            });

            modelBuilder.Entity<ArtsProveedor>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ARTS_PROVEEDOR");

                entity.HasIndex(e => new { e.ArpEmpresa, e.ArpProveedor, e.ArpInventario }, "ARPRO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.ArpEmpresa, e.ArpInventario, e.ArpProveedor }, "ARTPRO")
                    .HasFillFactor(90);

                entity.Property(e => e.ArpArtprov)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ARP_ARTPROV");

                entity.Property(e => e.ArpCatalogo)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("ARP_CATALOGO");

                entity.Property(e => e.ArpEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ARP_EMPRESA");

                entity.Property(e => e.ArpFigura)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ARP_FIGURA");

                entity.Property(e => e.ArpImagen)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("ARP_IMAGEN");

                entity.Property(e => e.ArpInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("ARP_INVENTARIO");

                entity.Property(e => e.ArpMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ARP_MONEDA");

                entity.Property(e => e.ArpPagina)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ARP_PAGINA");

                entity.Property(e => e.ArpProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ARP_PROVEEDOR");

                entity.Property(e => e.ArpUltcosto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ARP_ULTCOSTO");

                entity.Property(e => e.ArpUtlcompra)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ARP_UTLCOMPRA");
            });

            modelBuilder.Entity<AsignacionLista>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ASIGNACION_LISTAS");

                entity.Property(e => e.AsglCodLista).HasColumnName("ASGL_COD_LISTA");

                entity.Property(e => e.AsglCodTipoasigna)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ASGL_COD_TIPOASIGNA");

                entity.Property(e => e.AsglEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ASGL_EMPRESA");

                entity.Property(e => e.AsglTipoAsignacion)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ASGL_TIPO_ASIGNACION");
            });

            modelBuilder.Entity<AsignacionOferta>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ASIGNACION_OFERTAS");

                entity.Property(e => e.AsgoCodOferta).HasColumnName("ASGO_COD_OFERTA");

                entity.Property(e => e.AsgoCodTipoasigna)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ASGO_COD_TIPOASIGNA");

                entity.Property(e => e.AsgoEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ASGO_EMPRESA");

                entity.Property(e => e.AsgoTipoAsignacion)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ASGO_TIPO_ASIGNACION");
            });

            modelBuilder.Entity<Bancospo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BANCOSPOS");

                entity.HasIndex(e => new { e.BcopEmpresa, e.BcopCodcuenta }, "IDXBCO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.BcopCodcuenta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BCOP_CODCUENTA");

                entity.Property(e => e.BcopEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("BCOP_EMPRESA");

                entity.Property(e => e.BcopNombre)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("BCOP_NOMBRE");
            });

            modelBuilder.Entity<BcoMaestro>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BCO_MAESTRO");

                entity.HasIndex(e => new { e.BcoEmpresa, e.BcoCuentabco }, "BCO_CODIGO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.BcoCuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("BCO_CUENTA");

                entity.Property(e => e.BcoCuentabco)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BCO_CUENTABCO");

                entity.Property(e => e.BcoEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("BCO_EMPRESA");

                entity.Property(e => e.BcoFormato)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("BCO_FORMATO");

                entity.Property(e => e.BcoMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BCO_MONEDA");

                entity.Property(e => e.BcoNombre)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BCO_NOMBRE");

                entity.Property(e => e.BcoNumcuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("BCO_NUMCUENTA");

                entity.Property(e => e.BcoSaldo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("BCO_SALDO");
            });

            modelBuilder.Entity<BcoMovExtra>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BCO_MOV_EXTRA");

                entity.HasIndex(e => new { e.ChxEmpresa, e.ChxCuentabco, e.ChxNumero, e.ChxTipo }, "BCX_CODIGO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.ChxAutorizado)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CHX_AUTORIZADO");

                entity.Property(e => e.ChxCuentabco)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CHX_CUENTABCO");

                entity.Property(e => e.ChxDesc2)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CHX_DESC2");

                entity.Property(e => e.ChxDesc3)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CHX_DESC3");

                entity.Property(e => e.ChxElaborado)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CHX_ELABORADO");

                entity.Property(e => e.ChxEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CHX_EMPRESA");

                entity.Property(e => e.ChxExtra1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CHX_EXTRA1");

                entity.Property(e => e.ChxExtra2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CHX_EXTRA2");

                entity.Property(e => e.ChxExtra3)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CHX_EXTRA3");

                entity.Property(e => e.ChxExtra4)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CHX_EXTRA4");

                entity.Property(e => e.ChxNumero).HasColumnName("CHX_NUMERO");

                entity.Property(e => e.ChxRevisado)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CHX_REVISADO");

                entity.Property(e => e.ChxTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHX_TIPO");
            });

            modelBuilder.Entity<BcoMovimiento>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BCO_MOVIMIENTOS");

                entity.HasIndex(e => new { e.ChqEmpresa, e.ChqCuentabco, e.ChqFecha }, "MBO_FECHA")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.ChqEmpresa, e.ChqCuentabco, e.ChqNumero, e.ChqTipo }, "MOV_BCO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.ChqEmpresa, e.ChqCuentabco, e.ChqTipo }, "SK_BCOMOVCT")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.ChqEmpresa, e.ChqFecha, e.ChqStatus }, "SK_BCOMOVFS")
                    .HasFillFactor(90);

                entity.Property(e => e.ChqBenef)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CHQ_BENEF");

                entity.Property(e => e.ChqCuentabco)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CHQ_CUENTABCO");

                entity.Property(e => e.ChqDescrip)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CHQ_DESCRIP");

                entity.Property(e => e.ChqEmifec)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CHQ_EMIFEC");

                entity.Property(e => e.ChqEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CHQ_EMPRESA");

                entity.Property(e => e.ChqEntregado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHQ_ENTREGADO");

                entity.Property(e => e.ChqFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CHQ_FECHA");

                entity.Property(e => e.ChqFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CHQ_FECHAC");

                entity.Property(e => e.ChqFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CHQ_FECHAM");

                entity.Property(e => e.ChqFlagcxp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHQ_FLAGCXP");

                entity.Property(e => e.ChqImpreso)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHQ_IMPRESO");

                entity.Property(e => e.ChqNumero).HasColumnName("CHQ_NUMERO");

                entity.Property(e => e.ChqNumerochq).HasColumnName("CHQ_NUMEROCHQ");

                entity.Property(e => e.ChqNumerocontra)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CHQ_NUMEROCONTRA");

                entity.Property(e => e.ChqPartida).HasColumnName("CHQ_PARTIDA");

                entity.Property(e => e.ChqStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHQ_STATUS");

                entity.Property(e => e.ChqTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CHQ_TIPO");

                entity.Property(e => e.ChqUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CHQ_USUARIOC");

                entity.Property(e => e.ChqUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CHQ_USUARIOM");

                entity.Property(e => e.ChqValor)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CHQ_VALOR");
            });

            modelBuilder.Entity<BcoOrdena>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BCO_ORDENA");

                entity.HasIndex(e => new { e.OrdEmpresa, e.OrdRandom, e.OrdCorrel }, "PK_ORDEN")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.OrdCorrel).HasColumnName("ORD_CORREL");

                entity.Property(e => e.OrdCuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ORD_CUENTA");

                entity.Property(e => e.OrdDebe)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ORD_DEBE");

                entity.Property(e => e.OrdEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ORD_EMPRESA");

                entity.Property(e => e.OrdHaber)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ORD_HABER");

                entity.Property(e => e.OrdRandom).HasColumnName("ORD_RANDOM");
            });

            modelBuilder.Entity<BcoRechaza>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BCO_RECHAZA");

                entity.HasIndex(e => new { e.RechEmpresa, e.RechBanco, e.RechNotab }, "PK_RECHAZA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.RechBanco)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("RECH_BANCO");

                entity.Property(e => e.RechCheque)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RECH_CHEQUE");

                entity.Property(e => e.RechCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RECH_CLIENTE");

                entity.Property(e => e.RechCuentadepo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("RECH_CUENTADEPO");

                entity.Property(e => e.RechEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("RECH_EMPRESA");

                entity.Property(e => e.RechFactura)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RECH_FACTURA");

                entity.Property(e => e.RechFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("RECH_FECHA");

                entity.Property(e => e.RechFechar)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("RECH_FECHAR");

                entity.Property(e => e.RechFecharede)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("RECH_FECHAREDE");

                entity.Property(e => e.RechMonto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("RECH_MONTO");

                entity.Property(e => e.RechNotab)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RECH_NOTAB");

                entity.Property(e => e.RechRecargo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("RECH_RECARGO");

                entity.Property(e => e.RechStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("RECH_STATUS");
            });

            modelBuilder.Entity<BcoSaldo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BCO_SALDOS");

                entity.HasIndex(e => new { e.BsalEmpresa, e.BsalCuentabco, e.BsalAno, e.BsalMes }, "SALDO_BCO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.BsalEmpresa, e.BsalAno, e.BsalMes, e.BsalCuentabco }, "SK_BCOSALMC")
                    .HasFillFactor(90);

                entity.Property(e => e.BsalAbonos)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("BSAL_ABONOS");

                entity.Property(e => e.BsalAno).HasColumnName("BSAL_ANO");

                entity.Property(e => e.BsalCargos)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("BSAL_CARGOS");

                entity.Property(e => e.BsalCuentabco)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BSAL_CUENTABCO");

                entity.Property(e => e.BsalEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("BSAL_EMPRESA");

                entity.Property(e => e.BsalMes).HasColumnName("BSAL_MES");

                entity.Property(e => e.BsalSaldofin)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("BSAL_SALDOFIN");

                entity.Property(e => e.BsalSaldoini)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("BSAL_SALDOINI");
            });

            modelBuilder.Entity<BcoTransacH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BCO_TRANSAC_H");

                entity.HasIndex(e => new { e.TrachEmpresa, e.TrachTransaccion }, "PK_TRANSH")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.TrachDescripcion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("TRACH_DESCRIPCION");

                entity.Property(e => e.TrachEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TRACH_EMPRESA");

                entity.Property(e => e.TrachModulo)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TRACH_MODULO");

                entity.Property(e => e.TrachNombre)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("TRACH_NOMBRE");

                entity.Property(e => e.TrachTransaccion)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TRACH_TRANSACCION");
            });

            modelBuilder.Entity<BcoTransacL>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BCO_TRANSAC_L");

                entity.HasIndex(e => new { e.TraclEmpresa, e.TraclTransaccion, e.TraclLinea }, "PK_TRANSL")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.TraclCuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TRACL_CUENTA");

                entity.Property(e => e.TraclEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TRACL_EMPRESA");

                entity.Property(e => e.TraclLinea).HasColumnName("TRACL_LINEA");

                entity.Property(e => e.TraclPos)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TRACL_POS");

                entity.Property(e => e.TraclTransaccion)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TRACL_TRANSACCION");

                entity.Property(e => e.TraclValorg)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TRACL_VALORG");
            });

            modelBuilder.Entity<BcoVoucher>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BCO_VOUCHER");

                entity.HasIndex(e => new { e.ChlEmpresa, e.ChlCuentabco, e.ChlNumero, e.ChlLinea }, "LIN_VOUCHER")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.ChlEmpresa, e.ChlMes, e.ChlCuenta }, "SK_VOUCHER")
                    .HasFillFactor(90);

                entity.Property(e => e.ChlCuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CHL_CUENTA");

                entity.Property(e => e.ChlCuentabco)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CHL_CUENTABCO");

                entity.Property(e => e.ChlDebe)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CHL_DEBE");

                entity.Property(e => e.ChlEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CHL_EMPRESA");

                entity.Property(e => e.ChlHaber)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CHL_HABER");

                entity.Property(e => e.ChlLinea).HasColumnName("CHL_LINEA");

                entity.Property(e => e.ChlMes).HasColumnName("CHL_MES");

                entity.Property(e => e.ChlNumero).HasColumnName("CHL_NUMERO");
            });

            modelBuilder.Entity<BitActclientesextra>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BIT_ACTCLIENTESEXTRA");

                entity.Property(e => e.BitAplicacion)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasColumnName("BIT_APLICACION");

                entity.Property(e => e.BitCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("BIT_CLIENTE");

                entity.Property(e => e.BitEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("BIT_EMPRESA");

                entity.Property(e => e.BitFecha)
                    .HasColumnType("datetime")
                    .HasColumnName("BIT_FECHA");

                entity.Property(e => e.BitHost)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("BIT_HOST");

                entity.Property(e => e.BitNewConcred)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("BIT_NEW_CONCRED");

                entity.Property(e => e.BitNewDias).HasColumnName("BIT_NEW_DIAS");

                entity.Property(e => e.BitNewExtra6)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("BIT_NEW_EXTRA6");

                entity.Property(e => e.BitNewExtra7)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("BIT_NEW_EXTRA7");

                entity.Property(e => e.BitNewMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIT_NEW_MONEDA");

                entity.Property(e => e.BitNewNivprecio).HasColumnName("BIT_NEW_NIVPRECIO");

                entity.Property(e => e.BitNewNombrefac)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("BIT_NEW_NOMBREFAC");

                entity.Property(e => e.BitNewVendedor).HasColumnName("BIT_NEW_VENDEDOR");

                entity.Property(e => e.BitOldConcred)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("BIT_OLD_CONCRED");

                entity.Property(e => e.BitOldDias).HasColumnName("BIT_OLD_DIAS");

                entity.Property(e => e.BitOldExtra6)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("BIT_OLD_EXTRA6");

                entity.Property(e => e.BitOldExtra7)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("BIT_OLD_EXTRA7");

                entity.Property(e => e.BitOldMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIT_OLD_MONEDA");

                entity.Property(e => e.BitOldNivprecio).HasColumnName("BIT_OLD_NIVPRECIO");

                entity.Property(e => e.BitOldNombrefac)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("BIT_OLD_NOMBREFAC");

                entity.Property(e => e.BitOldVendedor).HasColumnName("BIT_OLD_VENDEDOR");

                entity.Property(e => e.BitUsuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BIT_USUARIO");
            });

            modelBuilder.Entity<BitActcosto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BIT_ACTCOSTOS");

                entity.Property(e => e.BitAplicacion)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasColumnName("BIT_APLICACION");

                entity.Property(e => e.BitEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("BIT_EMPRESA");

                entity.Property(e => e.BitFecha)
                    .HasColumnType("datetime")
                    .HasColumnName("BIT_FECHA");

                entity.Property(e => e.BitHost)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("BIT_HOST");

                entity.Property(e => e.BitInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("BIT_INVENTARIO");

                entity.Property(e => e.BitNewCantxumed)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("BIT_NEW_CANTXUMED");

                entity.Property(e => e.BitNewCosprom)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("BIT_NEW_COSPROM");

                entity.Property(e => e.BitNewCostoref)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("BIT_NEW_COSTOREF");

                entity.Property(e => e.BitNewPrecio1)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("BIT_NEW_PRECIO1");

                entity.Property(e => e.BitNewPrecio2)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("BIT_NEW_PRECIO2");

                entity.Property(e => e.BitNewPrecio3)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("BIT_NEW_PRECIO3");

                entity.Property(e => e.BitNewPrecio4)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("BIT_NEW_PRECIO4");

                entity.Property(e => e.BitNewPrecio5)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("BIT_NEW_PRECIO5");

                entity.Property(e => e.BitNewPrecio6)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("BIT_NEW_PRECIO6");

                entity.Property(e => e.BitNewUltcosto)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("BIT_NEW_ULTCOSTO");

                entity.Property(e => e.BitOldCantxumed)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("BIT_OLD_CANTXUMED");

                entity.Property(e => e.BitOldCosprom)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("BIT_OLD_COSPROM");

                entity.Property(e => e.BitOldCostoref)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("BIT_OLD_COSTOREF");

                entity.Property(e => e.BitOldPrecio1)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("BIT_OLD_PRECIO1");

                entity.Property(e => e.BitOldPrecio2)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("BIT_OLD_PRECIO2");

                entity.Property(e => e.BitOldPrecio3)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("BIT_OLD_PRECIO3");

                entity.Property(e => e.BitOldPrecio4)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("BIT_OLD_PRECIO4");

                entity.Property(e => e.BitOldPrecio5)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("BIT_OLD_PRECIO5");

                entity.Property(e => e.BitOldPrecio6)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("BIT_OLD_PRECIO6");

                entity.Property(e => e.BitOldUltcosto)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("BIT_OLD_ULTCOSTO");

                entity.Property(e => e.BitUsuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BIT_USUARIO");
            });

            modelBuilder.Entity<BitOpactprecio>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BIT_OPACTPRECIOS");

                entity.Property(e => e.BopAplicacion)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasColumnName("BOP_APLICACION");

                entity.Property(e => e.BopEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("BOP_EMPRESA");

                entity.Property(e => e.BopFecha)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("BOP_FECHA");

                entity.Property(e => e.BopHora)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("BOP_HORA");

                entity.Property(e => e.BopHost)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("BOP_HOST");

                entity.Property(e => e.BopInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("BOP_INVENTARIO");

                entity.Property(e => e.BopMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BOP_MONEDA");

                entity.Property(e => e.BopNewPrecio1)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("BOP_NEW_PRECIO1");

                entity.Property(e => e.BopNewPrecio2)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("BOP_NEW_PRECIO2");

                entity.Property(e => e.BopNewPrecio3)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("BOP_NEW_PRECIO3");

                entity.Property(e => e.BopNewPrecio4)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("BOP_NEW_PRECIO4");

                entity.Property(e => e.BopNewPrecio5)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("BOP_NEW_PRECIO5");

                entity.Property(e => e.BopNewPrecio6)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("BOP_NEW_PRECIO6");

                entity.Property(e => e.BopUsuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BOP_USUARIO");
            });

            modelBuilder.Entity<Bitacora>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BITACORA");

                entity.HasIndex(e => new { e.BitEmpresa, e.BitTienda, e.BitTerminal, e.BitNumero }, "IDXBITACORA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.BitEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("BIT_EMPRESA");

                entity.Property(e => e.BitFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BIT_FECHA");

                entity.Property(e => e.BitHora)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("BIT_HORA");

                entity.Property(e => e.BitInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("BIT_INVENTARIO");

                entity.Property(e => e.BitNumero).HasColumnName("BIT_NUMERO");

                entity.Property(e => e.BitRutina)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIT_RUTINA");

                entity.Property(e => e.BitTerminal).HasColumnName("BIT_TERMINAL");

                entity.Property(e => e.BitTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIT_TIENDA");

                entity.Property(e => e.BitUsuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BIT_USUARIO");

                entity.Property(e => e.BitValor1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("BIT_VALOR1");

                entity.Property(e => e.BitValor2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("BIT_VALOR2");
            });

            modelBuilder.Entity<Bitacora1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BITACORA_S");

                entity.HasIndex(e => new { e.BisEmpresa, e.BisTienda, e.BisTerminal, e.BisNumero }, "IDXBITACORA_S")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.BisEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("BIS_EMPRESA");

                entity.Property(e => e.BisFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BIS_FECHA");

                entity.Property(e => e.BisHora)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("BIS_HORA");

                entity.Property(e => e.BisNumero).HasColumnName("BIS_NUMERO");

                entity.Property(e => e.BisPanta).HasColumnName("BIS_PANTA");

                entity.Property(e => e.BisRutina)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIS_RUTINA");

                entity.Property(e => e.BisTerminal).HasColumnName("BIS_TERMINAL");

                entity.Property(e => e.BisTicket).HasColumnName("BIS_TICKET");

                entity.Property(e => e.BisTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BIS_TIENDA");

                entity.Property(e => e.BisUsuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BIS_USUARIO");

                entity.Property(e => e.BisValor)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("BIS_VALOR");
            });

            modelBuilder.Entity<BitacoraTraCompra>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BITACORA_TRA_COMPRAS");

                entity.HasIndex(e => new { e.BtrcEmpresa, e.BtrcProveedor, e.BtrcFactura }, "BITA_TRA_COMP")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.BtrcAnticipo).HasColumnName("BTRC_ANTICIPO");

                entity.Property(e => e.BtrcEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("BTRC_EMPRESA");

                entity.Property(e => e.BtrcFactura)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BTRC_FACTURA");

                entity.Property(e => e.BtrcFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BTRC_FECHA");

                entity.Property(e => e.BtrcHora)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BTRC_HORA");

                entity.Property(e => e.BtrcMes).HasColumnName("BTRC_MES");

                entity.Property(e => e.BtrcPartida).HasColumnName("BTRC_PARTIDA");

                entity.Property(e => e.BtrcProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("BTRC_PROVEEDOR");

                entity.Property(e => e.BtrcTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("BTRC_TIPO");

                entity.Property(e => e.BtrcTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("BTRC_TOTAL");

                entity.Property(e => e.BtrcUsuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BTRC_USUARIO");
            });

            modelBuilder.Entity<BitacoraVentaH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BITACORA_VENTA_H");

                entity.HasIndex(e => new { e.BvhEmpresa, e.BvhTienda, e.BvhTerminal, e.BvhSerie, e.BvhFactura, e.BvhMes, e.BvhAnio, e.BvhPartida }, "BITA_VENTA1")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.BvhAnio).HasColumnName("BVH_ANIO");

                entity.Property(e => e.BvhEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("BVH_EMPRESA");

                entity.Property(e => e.BvhFactura).HasColumnName("BVH_FACTURA");

                entity.Property(e => e.BvhFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BVH_FECHA");

                entity.Property(e => e.BvhMes).HasColumnName("BVH_MES");

                entity.Property(e => e.BvhPartida).HasColumnName("BVH_PARTIDA");

                entity.Property(e => e.BvhSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("BVH_SERIE");

                entity.Property(e => e.BvhTerminal).HasColumnName("BVH_TERMINAL");

                entity.Property(e => e.BvhTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BVH_TIENDA");

                entity.Property(e => e.BvhTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("BVH_TIPO");
            });

            modelBuilder.Entity<BitacoraVentaL>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BITACORA_VENTA_L");

                entity.HasIndex(e => new { e.BvlEmpresa, e.BvlTienda, e.BvlTerminal, e.BvlSerie, e.BvlFactura, e.BvlMes, e.BvlAnio, e.BvlPartida, e.BvlCorrelativo }, "BITA_VENTA2")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.BvlAnio).HasColumnName("BVL_ANIO");

                entity.Property(e => e.BvlCorrelativo).HasColumnName("BVL_CORRELATIVO");

                entity.Property(e => e.BvlCuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("BVL_CUENTA");

                entity.Property(e => e.BvlDebe)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("BVL_DEBE");

                entity.Property(e => e.BvlEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("BVL_EMPRESA");

                entity.Property(e => e.BvlFactura).HasColumnName("BVL_FACTURA");

                entity.Property(e => e.BvlHaber)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("BVL_HABER");

                entity.Property(e => e.BvlMes).HasColumnName("BVL_MES");

                entity.Property(e => e.BvlPartida).HasColumnName("BVL_PARTIDA");

                entity.Property(e => e.BvlSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("BVL_SERIE");

                entity.Property(e => e.BvlTerminal).HasColumnName("BVL_TERMINAL");

                entity.Property(e => e.BvlTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BVL_TIENDA");

                entity.Property(e => e.BvlTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("BVL_TIPO");
            });

            modelBuilder.Entity<Bodega>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BODEGAS");

                entity.HasIndex(e => new { e.BodEmpresa, e.BodBodega }, "IDX_BODEGA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.BodBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BOD_BODEGA");

                entity.Property(e => e.BodDireccion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BOD_DIRECCION");

                entity.Property(e => e.BodEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("BOD_EMPRESA");

                entity.Property(e => e.BodNombre)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BOD_NOMBRE");
            });

            modelBuilder.Entity<BodegaEsta1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BODEGA_ESTA1");

                entity.Property(e => e.EstbAno).HasColumnName("ESTB_ANO");

                entity.Property(e => e.EstbBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ESTB_BODEGA");

                entity.Property(e => e.EstbCompuni)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ESTB_COMPUNI");

                entity.Property(e => e.EstbCompval)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ESTB_COMPVAL");

                entity.Property(e => e.EstbEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ESTB_EMPRESA");

                entity.Property(e => e.EstbInicio)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ESTB_INICIO");

                entity.Property(e => e.EstbInicioval)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ESTB_INICIOVAL");

                entity.Property(e => e.EstbInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("ESTB_INVENTARIO");

                entity.Property(e => e.EstbMes).HasColumnName("ESTB_MES");

                entity.Property(e => e.EstbMoveuni)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ESTB_MOVEUNI");

                entity.Property(e => e.EstbMoveval)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ESTB_MOVEVAL");

                entity.Property(e => e.EstbMovsuni)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ESTB_MOVSUNI");

                entity.Property(e => e.EstbMovsval)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ESTB_MOVSVAL");

                entity.Property(e => e.EstbVentuni)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ESTB_VENTUNI");

                entity.Property(e => e.EstbVentval)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ESTB_VENTVAL");

                entity.Property(e => e.EstbVentval1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ESTB_VENTVAL1");
            });

            modelBuilder.Entity<BodegaEstum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("BODEGA_ESTA");

                entity.HasIndex(e => new { e.EstbEmpresa, e.EstbBodega, e.EstbInventario, e.EstbAno, e.EstbMes }, "ESTNDX")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.EstbEmpresa, e.EstbAno, e.EstbMes }, "SK_BODEMES")
                    .HasFillFactor(90);

                entity.Property(e => e.EstbAno).HasColumnName("ESTB_ANO");

                entity.Property(e => e.EstbBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ESTB_BODEGA");

                entity.Property(e => e.EstbCompuni)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ESTB_COMPUNI");

                entity.Property(e => e.EstbCompval)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ESTB_COMPVAL");

                entity.Property(e => e.EstbEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ESTB_EMPRESA");

                entity.Property(e => e.EstbInicio)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ESTB_INICIO");

                entity.Property(e => e.EstbInicioval)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ESTB_INICIOVAL");

                entity.Property(e => e.EstbInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("ESTB_INVENTARIO");

                entity.Property(e => e.EstbMes).HasColumnName("ESTB_MES");

                entity.Property(e => e.EstbMoveuni)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ESTB_MOVEUNI");

                entity.Property(e => e.EstbMoveval)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ESTB_MOVEVAL");

                entity.Property(e => e.EstbMovsuni)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ESTB_MOVSUNI");

                entity.Property(e => e.EstbMovsval)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ESTB_MOVSVAL");

                entity.Property(e => e.EstbVentuni)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ESTB_VENTUNI");

                entity.Property(e => e.EstbVentval)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ESTB_VENTVAL");
            });

            modelBuilder.Entity<BodegasCategorium>(entity =>
            {
                entity.HasKey(e => new { e.BcatEmpresa, e.BcatCategoria })
                    .HasName("PK_BODCATEG");

                entity.ToTable("BODEGAS_CATEGORIA");

                entity.Property(e => e.BcatEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("BCAT_EMPRESA");

                entity.Property(e => e.BcatCategoria).HasColumnName("BCAT_CATEGORIA");

                entity.Property(e => e.BcatDescripcion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BCAT_DESCRIPCION");

                entity.Property(e => e.BcatStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("BCAT_STATUS");
            });

            modelBuilder.Entity<BodegasExtra1>(entity =>
            {
                entity.HasKey(e => new { e.BdxEmpresa, e.BdxBodega })
                    .HasName("PK_BODEXT1");

                entity.ToTable("BODEGAS_EXTRA1");

                entity.Property(e => e.BdxEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("BDX_EMPRESA")
                    .IsFixedLength();

                entity.Property(e => e.BdxBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BDX_BODEGA")
                    .IsFixedLength();

                entity.Property(e => e.BdxBpt)
                    .HasColumnName("BDX_BPT")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.BdxInvestado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("BDX_INVESTADO")
                    .IsFixedLength();

                entity.Property(e => e.BdxLocacion).HasColumnName("BDX_LOCACION");

                entity.Property(e => e.BdxTipinven).HasColumnName("BDX_TIPINVEN");
            });

            modelBuilder.Entity<Cajerospo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CAJEROSPOS");

                entity.HasIndex(e => new { e.UsrcEmpresa, e.UsrcNombre, e.UsrcPassword }, "ADUSR_NOMBRE")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.UsrcAcceso)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("USRC_ACCESO");

                entity.Property(e => e.UsrcEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("USRC_EMPRESA");

                entity.Property(e => e.UsrcNombre)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("USRC_NOMBRE");

                entity.Property(e => e.UsrcPassword)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USRC_PASSWORD");

                entity.Property(e => e.UsrcSuperuser)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("USRC_SUPERUSER");
            });

            modelBuilder.Entity<CentroCosto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CENTRO_COSTO");

                entity.HasIndex(e => new { e.CenEmpresa, e.CenCentro }, "PK_CENTRO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CenCentro)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CEN_CENTRO");

                entity.Property(e => e.CenDescripcion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CEN_DESCRIPCION");

                entity.Property(e => e.CenEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CEN_EMPRESA");
            });

            modelBuilder.Entity<CentroHistorico>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CENTRO_HISTORICO");

                entity.HasIndex(e => new { e.CenhEmpresa, e.CenhAno, e.CenhCentro }, "PK_CEN_HIS")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CenhAno).HasColumnName("CENH_ANO");

                entity.Property(e => e.CenhCentro)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CENH_CENTRO");

                entity.Property(e => e.CenhDescripcion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CENH_DESCRIPCION");

                entity.Property(e => e.CenhEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CENH_EMPRESA");
            });

            modelBuilder.Entity<CentroHnom>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CENTRO_HNOM");

                entity.HasIndex(e => new { e.CchnEmpresa, e.CchnAno, e.CchnCentro, e.CchnCuenta }, "PK_CENHNOM")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CchnAno).HasColumnName("CCHN_ANO");

                entity.Property(e => e.CchnCentro)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CCHN_CENTRO");

                entity.Property(e => e.CchnCuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCHN_CUENTA");

                entity.Property(e => e.CchnEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CCHN_EMPRESA");
            });

            modelBuilder.Entity<CentroNoman>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CENTRO_NOMEN");

                entity.HasIndex(e => new { e.CnoEmpresa, e.CnoCentro, e.CnoCuenta }, "PK_CENTRO_NO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CnoCentro)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CNO_CENTRO");

                entity.Property(e => e.CnoCuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CNO_CUENTA");

                entity.Property(e => e.CnoEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CNO_EMPRESA");
            });

            modelBuilder.Entity<Clase>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CLASES");

                entity.HasIndex(e => new { e.ClaEmpresa, e.ClaClase }, "PK_CLASES")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.ClaClase)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CLA_CLASE");

                entity.Property(e => e.ClaDescrip)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CLA_DESCRIP");

                entity.Property(e => e.ClaEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CLA_EMPRESA");

                entity.Property(e => e.ClaPct)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CLA_PCT");
            });

            modelBuilder.Entity<ClasiCuentasCli>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CLASI_CUENTAS_CLI");

                entity.HasIndex(e => new { e.ClcEmpresa, e.ClcCodigo }, "PK_CLA_CUENTAS")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.ClcCodigo)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CLC_CODIGO");

                entity.Property(e => e.ClcDescripcion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CLC_DESCRIPCION");

                entity.Property(e => e.ClcEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CLC_EMPRESA");

                entity.Property(e => e.ClcUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CLC_USUARIOC");
            });

            modelBuilder.Entity<ClasificaCliente>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CLASIFICA_CLIENTES");

                entity.HasIndex(e => new { e.ClaEmpresa, e.ClaCodigo }, "PK_CLA_CLIENTES")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.ClaCodigo)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CLA_CODIGO");

                entity.Property(e => e.ClaDescripcion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CLA_DESCRIPCION");

                entity.Property(e => e.ClaEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CLA_EMPRESA");

                entity.Property(e => e.ClaUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CLA_USUARIOC");
            });

            modelBuilder.Entity<CliPagh>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CLI_PAGH");

                entity.HasIndex(e => new { e.CphEmpresa, e.CphSerie, e.CphRecibo }, "PK_CLI_PAGH")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.CphEmpresa, e.CphCliente }, "SK_CLIHCLI")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.CphEmpresa, e.CphFecha }, "SK_CLIHFECHA")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.CphEmpresa, e.CphRecibo, e.CphSerie, e.CphStatus }, "sk_cli_pagh_a")
                    .HasFillFactor(90);

                entity.Property(e => e.CphAnticipof)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPH_ANTICIPOF");

                entity.Property(e => e.CphBanco)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CPH_BANCO");

                entity.Property(e => e.CphCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CPH_CLIENTE");

                entity.Property(e => e.CphCobrador)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CPH_COBRADOR");

                entity.Property(e => e.CphDocumento)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CPH_DOCUMENTO");

                entity.Property(e => e.CphEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CPH_EMPRESA");

                entity.Property(e => e.CphFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CPH_FECHA");

                entity.Property(e => e.CphFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CPH_FECHAC");

                entity.Property(e => e.CphFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CPH_FECHAM");

                entity.Property(e => e.CphImpreso)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPH_IMPRESO");

                entity.Property(e => e.CphMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CPH_MONEDA");

                entity.Property(e => e.CphRecibo).HasColumnName("CPH_RECIBO");

                entity.Property(e => e.CphSaldo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CPH_SALDO");

                entity.Property(e => e.CphSerie)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CPH_SERIE");

                entity.Property(e => e.CphStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPH_STATUS");

                entity.Property(e => e.CphTasacam)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CPH_TASACAM");

                entity.Property(e => e.CphTidoc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPH_TIDOC");

                entity.Property(e => e.CphTipopago)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPH_TIPOPAGO");

                entity.Property(e => e.CphTransaccion)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CPH_TRANSACCION");

                entity.Property(e => e.CphUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CPH_USUARIOC");

                entity.Property(e => e.CphUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CPH_USUARIOM");

                entity.Property(e => e.CphValor)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CPH_VALOR");

                entity.Property(e => e.CphVendedor).HasColumnName("CPH_VENDEDOR");
            });

            modelBuilder.Entity<CliPaghExtra>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CLI_PAGH_EXTRA");

                entity.HasIndex(e => new { e.CphxEmpresa, e.CphxSerie, e.CphxRecibo }, "PK_CLI_PAGHX")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CphxDescripcion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("CPHX_DESCRIPCION");

                entity.Property(e => e.CphxEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CPHX_EMPRESA");

                entity.Property(e => e.CphxExtra1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CPHX_EXTRA1");

                entity.Property(e => e.CphxExtra2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CPHX_EXTRA2");

                entity.Property(e => e.CphxExtra3)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CPHX_EXTRA3");

                entity.Property(e => e.CphxExtra4)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CPHX_EXTRA4");

                entity.Property(e => e.CphxExtra5)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CPHX_EXTRA5");

                entity.Property(e => e.CphxExtra6)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CPHX_EXTRA6");

                entity.Property(e => e.CphxExtra7)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CPHX_EXTRA7");

                entity.Property(e => e.CphxExtra8)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CPHX_EXTRA8");

                entity.Property(e => e.CphxRecibo).HasColumnName("CPHX_RECIBO");

                entity.Property(e => e.CphxSerie)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CPHX_SERIE");
            });

            modelBuilder.Entity<CliPagl>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CLI_PAGL");

                entity.HasIndex(e => new { e.CplEmpresa, e.CplSerie, e.CplRecibo, e.CplCorrel, e.CplTienda, e.CplTerminal }, "PK_CLI_PAGL")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.CplEmpresa, e.CplTipo, e.CplTienda, e.CplTerminal, e.CplDocumento }, "sk_cli_pagl_a")
                    .HasFillFactor(90);

                entity.Property(e => e.CplCorrel).HasColumnName("CPL_CORREL");

                entity.Property(e => e.CplDocumento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CPL_DOCUMENTO");

                entity.Property(e => e.CplEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CPL_EMPRESA");

                entity.Property(e => e.CplPago).HasColumnName("CPL_PAGO");

                entity.Property(e => e.CplRecibo).HasColumnName("CPL_RECIBO");

                entity.Property(e => e.CplSerie)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CPL_SERIE");

                entity.Property(e => e.CplTerminal).HasColumnName("CPL_TERMINAL");

                entity.Property(e => e.CplTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CPL_TIENDA");

                entity.Property(e => e.CplTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CPL_TIPO");

                entity.Property(e => e.CplValor)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CPL_VALOR");
            });

            modelBuilder.Entity<ClientesAgen>(entity =>
            {
                entity.HasKey(e => new { e.CliagEmpresa, e.CliagCliente })
                    .HasName("PK_CLIENTESAGEN");

                entity.ToTable("CLIENTES_AGEN");

                entity.Property(e => e.CliagEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CLIAG_EMPRESA");

                entity.Property(e => e.CliagCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLIAG_CLIENTE");

                entity.Property(e => e.CliagAgenteret)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLIAG_AGENTERET");

                entity.Property(e => e.CliagTablaret)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLIAG_TABLARET");
            });

            modelBuilder.Entity<ClientesExtra>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CLIENTES_EXTRA");

                entity.HasIndex(e => new { e.ExtEmpresa, e.ExtCliente }, "CLI_EXTRA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.ExtAvisojornada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EXT_AVISOJORNADA");

                entity.Property(e => e.ExtAvisotel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EXT_AVISOTEL");

                entity.Property(e => e.ExtCelular)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("EXT_CELULAR");

                entity.Property(e => e.ExtCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("EXT_CLIENTE");

                entity.Property(e => e.ExtConcred)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EXT_CONCRED");

                entity.Property(e => e.ExtContacto1)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("EXT_CONTACTO1");

                entity.Property(e => e.ExtContacto2)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("EXT_CONTACTO2");

                entity.Property(e => e.ExtContacto3)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("EXT_CONTACTO3");

                entity.Property(e => e.ExtCorreoelec)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("EXT_CORREOELEC");

                entity.Property(e => e.ExtDias).HasColumnName("EXT_DIAS");

                entity.Property(e => e.ExtDocgenerar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EXT_DOCGENERAR");

                entity.Property(e => e.ExtEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("EXT_EMPRESA");

                entity.Property(e => e.ExtExtra1).HasColumnName("EXT_EXTRA1");

                entity.Property(e => e.ExtExtra2).HasColumnName("EXT_EXTRA2");

                entity.Property(e => e.ExtExtra3).HasColumnName("EXT_EXTRA3");

                entity.Property(e => e.ExtExtra4).HasColumnName("EXT_EXTRA4");

                entity.Property(e => e.ExtExtra5).HasColumnName("EXT_EXTRA5");

                entity.Property(e => e.ExtExtra6)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("EXT_EXTRA6");

                entity.Property(e => e.ExtExtra7)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("EXT_EXTRA7");

                entity.Property(e => e.ExtExtra8)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EXT_EXTRA8");

                entity.Property(e => e.ExtFaccontable)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EXT_FACCONTABLE");

                entity.Property(e => e.ExtFax)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXT_FAX");

                entity.Property(e => e.ExtFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EXT_FECHA");

                entity.Property(e => e.ExtGiro)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("EXT_GIRO");

                entity.Property(e => e.ExtLocal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EXT_LOCAL");

                entity.Property(e => e.ExtMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("EXT_MONEDA");

                entity.Property(e => e.ExtNivprecio).HasColumnName("EXT_NIVPRECIO");

                entity.Property(e => e.ExtNombrefac)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("EXT_NOMBREFAC");

                entity.Property(e => e.ExtPeriodofac).HasColumnName("EXT_PERIODOFAC");

                entity.Property(e => e.ExtRegistro)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("EXT_REGISTRO");

                entity.Property(e => e.ExtTelefonos)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("EXT_TELEFONOS");

                entity.Property(e => e.ExtTipfacturac)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EXT_TIPFACTURAC");

                entity.Property(e => e.ExtTipoind)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXT_TIPOIND");

                entity.Property(e => e.ExtUbicacion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("EXT_UBICACION");

                entity.Property(e => e.ExtVendedor).HasColumnName("EXT_VENDEDOR");
            });

            modelBuilder.Entity<ClientesExtra2>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CLIENTES_EXTRA2");

                entity.HasIndex(e => new { e.Ext2Empresa, e.Ext2Cliente }, "CLI_EXTRA2")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.Ext2Cliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("EXT2_CLIENTE");

                entity.Property(e => e.Ext2Empresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("EXT2_EMPRESA");

                entity.Property(e => e.Ext2Ultfecfac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EXT2_ULTFECFAC");
            });

            modelBuilder.Entity<ClientesGp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CLIENTES_GPS");

                entity.Property(e => e.CgpsAltitud)
                    .HasColumnType("decimal(20, 16)")
                    .HasColumnName("CGPS_ALTITUD");

                entity.Property(e => e.CgpsCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CGPS_CLIENTE");

                entity.Property(e => e.CgpsCod)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CGPS_COD");

                entity.Property(e => e.CgpsEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CGPS_EMPRESA");

                entity.Property(e => e.CgpsGln)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CGPS_GLN");

                entity.Property(e => e.CgpsLatitud)
                    .HasColumnType("decimal(20, 16)")
                    .HasColumnName("CGPS_LATITUD");

                entity.Property(e => e.CgpsLongitud)
                    .HasColumnType("decimal(20, 16)")
                    .HasColumnName("CGPS_LONGITUD");
            });

            modelBuilder.Entity<Clientesporvendedor>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CLIENTESPORVENDEDOR");

                entity.Property(e => e.CpvCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CPV_CLIENTE");

                entity.Property(e => e.CpvEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CPV_EMPRESA");

                entity.Property(e => e.CpvVendedor).HasColumnName("CPV_VENDEDOR");
            });

            modelBuilder.Entity<ComCotizapH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("COM_COTIZAP_H");

                entity.HasIndex(e => new { e.CtphEmpresa, e.CtphNumero }, "PK_COTIZA_CH")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CtphDiascred).HasColumnName("CTPH_DIASCRED");

                entity.Property(e => e.CtphEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CTPH_EMPRESA");

                entity.Property(e => e.CtphFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CTPH_FECHA");

                entity.Property(e => e.CtphFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CTPH_FECHAC");

                entity.Property(e => e.CtphFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CTPH_FECHAM");

                entity.Property(e => e.CtphFechaven)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CTPH_FECHAVEN");

                entity.Property(e => e.CtphImpresion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CTPH_IMPRESION");

                entity.Property(e => e.CtphMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CTPH_MONEDA");

                entity.Property(e => e.CtphNumCotiza)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CTPH_NUM_COTIZA");

                entity.Property(e => e.CtphNumero).HasColumnName("CTPH_NUMERO");

                entity.Property(e => e.CtphProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CTPH_PROVEEDOR");

                entity.Property(e => e.CtphStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CTPH_STATUS");

                entity.Property(e => e.CtphUsuarioCot)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CTPH_USUARIO_COT");

                entity.Property(e => e.CtphUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CTPH_USUARIOC");

                entity.Property(e => e.CtphUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CTPH_USUARIOM");
            });

            modelBuilder.Entity<ComCotizapL>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("COM_COTIZAP_L");

                entity.HasIndex(e => new { e.CtplEmpresa, e.CtplNumero, e.CtplLinea }, "PK_COTIZA_L")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CtplAprobada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CTPL_APROBADA");

                entity.Property(e => e.CtplArtProv)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CTPL_ART_PROV");

                entity.Property(e => e.CtplCantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CTPL_CANTIDAD");

                entity.Property(e => e.CtplDescripcion)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("CTPL_DESCRIPCION");

                entity.Property(e => e.CtplEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CTPL_EMPRESA");

                entity.Property(e => e.CtplInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CTPL_INVENTARIO");

                entity.Property(e => e.CtplLinea).HasColumnName("CTPL_LINEA");

                entity.Property(e => e.CtplLineaReq).HasColumnName("CTPL_LINEA_REQ");

                entity.Property(e => e.CtplNumero).HasColumnName("CTPL_NUMERO");

                entity.Property(e => e.CtplPreciouE)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CTPL_PRECIOU_E");

                entity.Property(e => e.CtplPreciouN)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CTPL_PRECIOU_N");

                entity.Property(e => e.CtplRequisicion).HasColumnName("CTPL_REQUISICION");

                entity.Property(e => e.CtplUnidad)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("CTPL_UNIDAD");
            });

            modelBuilder.Entity<ComOrdencH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("COM_ORDENC_H");

                entity.HasIndex(e => new { e.OrdchEmpresa, e.OrdchNumero }, "PK_OCOMPRA_H")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.OrdchCerrada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ORDCH_CERRADA");

                entity.Property(e => e.OrdchCotizacion).HasColumnName("ORDCH_COTIZACION");

                entity.Property(e => e.OrdchCotizaprov)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDCH_COTIZAPROV");

                entity.Property(e => e.OrdchDescuento)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ORDCH_DESCUENTO");

                entity.Property(e => e.OrdchEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ORDCH_EMPRESA");

                entity.Property(e => e.OrdchEnviada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ORDCH_ENVIADA");

                entity.Property(e => e.OrdchFactura)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDCH_FACTURA");

                entity.Property(e => e.OrdchFdespacho)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDCH_FDESPACHO");

                entity.Property(e => e.OrdchFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDCH_FECHA");

                entity.Property(e => e.OrdchFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDCH_FECHAC");

                entity.Property(e => e.OrdchFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDCH_FECHAM");

                entity.Property(e => e.OrdchFllegada)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDCH_FLLEGADA");

                entity.Property(e => e.OrdchImpresion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ORDCH_IMPRESION");

                entity.Property(e => e.OrdchLiquidacion).HasColumnName("ORDCH_LIQUIDACION");

                entity.Property(e => e.OrdchMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ORDCH_MONEDA");

                entity.Property(e => e.OrdchNumero).HasColumnName("ORDCH_NUMERO");

                entity.Property(e => e.OrdchProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ORDCH_PROVEEDOR");

                entity.Property(e => e.OrdchTasa)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ORDCH_TASA");

                entity.Property(e => e.OrdchUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDCH_USUARIOC");

                entity.Property(e => e.OrdchUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDCH_USUARIOM");

                entity.Property(e => e.OrdchValor)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ORDCH_VALOR");
            });

            modelBuilder.Entity<ComOrdencHext1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("COM_ORDENC_HEXT1");

                entity.HasIndex(e => new { e.OcxtEmpresa, e.OcxtNumero }, "PK_NUMEROORDEN")
                    .HasFillFactor(90);

                entity.Property(e => e.OcxtAutorizado)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("OCXT_AUTORIZADO");

                entity.Property(e => e.OcxtDiascredito).HasColumnName("OCXT_DIASCREDITO");

                entity.Property(e => e.OcxtElaborado)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("OCXT_ELABORADO");

                entity.Property(e => e.OcxtEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("OCXT_EMPRESA");

                entity.Property(e => e.OcxtEntDireccion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("OCXT_ENT_DIRECCION");

                entity.Property(e => e.OcxtEntEntregar)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("OCXT_ENT_ENTREGAR");

                entity.Property(e => e.OcxtEntTelefono)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("OCXT_ENT_TELEFONO");

                entity.Property(e => e.OcxtFactdireccion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("OCXT_FACTDIRECCION");

                entity.Property(e => e.OcxtFactnit)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("OCXT_FACTNIT");

                entity.Property(e => e.OcxtFactnombre)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("OCXT_FACTNOMBRE");

                entity.Property(e => e.OcxtFacttelefono)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("OCXT_FACTTELEFONO");

                entity.Property(e => e.OcxtFormapago)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("OCXT_FORMAPAGO");

                entity.Property(e => e.OcxtInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("OCXT_INVENTARIO");

                entity.Property(e => e.OcxtNumero).HasColumnName("OCXT_NUMERO");

                entity.Property(e => e.OcxtObservac1)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("OCXT_OBSERVAC1");

                entity.Property(e => e.OcxtObservac2)
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasColumnName("OCXT_OBSERVAC2");

                entity.Property(e => e.OcxtRevisado)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("OCXT_REVISADO");

                entity.Property(e => e.OcxtSolicitado)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("OCXT_SOLICITADO");
            });

            modelBuilder.Entity<ComOrdencL>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("COM_ORDENC_L");

                entity.HasIndex(e => new { e.OrdclEmpresa, e.OrdclNumero, e.OrdclLinea }, "PK_OCOMPRA_L")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.OrdclArtProv)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORDCL_ART_PROV");

                entity.Property(e => e.OrdclCantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ORDCL_CANTIDAD");

                entity.Property(e => e.OrdclDescripcion)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("ORDCL_DESCRIPCION");

                entity.Property(e => e.OrdclEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ORDCL_EMPRESA");

                entity.Property(e => e.OrdclInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("ORDCL_INVENTARIO");

                entity.Property(e => e.OrdclLinea).HasColumnName("ORDCL_LINEA");

                entity.Property(e => e.OrdclLineaReq).HasColumnName("ORDCL_LINEA_REQ");

                entity.Property(e => e.OrdclNumero).HasColumnName("ORDCL_NUMERO");

                entity.Property(e => e.OrdclPreciouE)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ORDCL_PRECIOU_E");

                entity.Property(e => e.OrdclPreciouN)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ORDCL_PRECIOU_N");

                entity.Property(e => e.OrdclRequisicion).HasColumnName("ORDCL_REQUISICION");

                entity.Property(e => e.OrdclUnidad)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("ORDCL_UNIDAD");
            });

            modelBuilder.Entity<ComReqCotiza>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("COM_REQ_COTIZA");

                entity.HasIndex(e => new { e.RqctEmpresa, e.RqctCotizacion, e.RqctRequisicion }, "PK_REQCOTIZA_L")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.RqctCotizacion).HasColumnName("RQCT_COTIZACION");

                entity.Property(e => e.RqctEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("RQCT_EMPRESA");

                entity.Property(e => e.RqctRequisicion).HasColumnName("RQCT_REQUISICION");
            });

            modelBuilder.Entity<ComReqcompraH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("COM_REQCOMPRA_H");

                entity.HasIndex(e => new { e.ReqchEmpresa, e.ReqchNumero }, "PK_REQCOMPRA_H")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.ReqchAutoriz)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("REQCH_AUTORIZ");

                entity.Property(e => e.ReqchClasif)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("REQCH_CLASIF");

                entity.Property(e => e.ReqchDepto)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("REQCH_DEPTO");

                entity.Property(e => e.ReqchEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("REQCH_EMPRESA");

                entity.Property(e => e.ReqchFecEnt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("REQCH_FEC_ENT");

                entity.Property(e => e.ReqchFecNec)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("REQCH_FEC_NEC");

                entity.Property(e => e.ReqchFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("REQCH_FECHA");

                entity.Property(e => e.ReqchFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("REQCH_FECHAC");

                entity.Property(e => e.ReqchFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("REQCH_FECHAM");

                entity.Property(e => e.ReqchLugaru)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REQCH_LUGARU");

                entity.Property(e => e.ReqchNumero).HasColumnName("REQCH_NUMERO");

                entity.Property(e => e.ReqchObserv1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REQCH_OBSERV1");

                entity.Property(e => e.ReqchObserv2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REQCH_OBSERV2");

                entity.Property(e => e.ReqchPersonal)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("REQCH_PERSONAL");

                entity.Property(e => e.ReqchUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("REQCH_USUARIOC");

                entity.Property(e => e.ReqchUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("REQCH_USUARIOM");
            });

            modelBuilder.Entity<ComReqcompraL>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("COM_REQCOMPRA_L");

                entity.HasIndex(e => new { e.ReqclEmpresa, e.ReqclNumero, e.ReqclLinea }, "PK_REQCOMPRA_L")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.ReqclCantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("REQCL_CANTIDAD");

                entity.Property(e => e.ReqclCcosto)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("REQCL_CCOSTO");

                entity.Property(e => e.ReqclDescripcion)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("REQCL_DESCRIPCION");

                entity.Property(e => e.ReqclEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("REQCL_EMPRESA");

                entity.Property(e => e.ReqclInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("REQCL_INVENTARIO");

                entity.Property(e => e.ReqclLinea).HasColumnName("REQCL_LINEA");

                entity.Property(e => e.ReqclNumero).HasColumnName("REQCL_NUMERO");

                entity.Property(e => e.ReqclOrdenc1).HasColumnName("REQCL_ORDENC1");

                entity.Property(e => e.ReqclOrdenc2).HasColumnName("REQCL_ORDENC2");

                entity.Property(e => e.ReqclUnidad)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("REQCL_UNIDAD");
            });

            modelBuilder.Entity<Comphead>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("COMPHEAD");

                entity.HasIndex(e => new { e.CohEmpresa, e.CohProveedor, e.CohFactura }, "P_C_FACTURA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.CohEmpresa, e.CohFecha }, "SK_COMPFECHA")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.CohEmpresa, e.CohProveedor, e.CohFecha }, "SK_COMPPROV")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.CohEmpresa, e.CohStatus, e.CohSaldo }, "SK_COMPSAL")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.CohEmpresa, e.CohAutorizado, e.CohFpago }, "SK_PAGO")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.CohEmpresa, e.CohProveedor, e.CohContrasena }, "S_C_FACTURA")
                    .HasFillFactor(90);

                entity.Property(e => e.CohAutorizado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COH_AUTORIZADO");

                entity.Property(e => e.CohBanco)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("COH_BANCO");

                entity.Property(e => e.CohBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("COH_BODEGA");

                entity.Property(e => e.CohCheque).HasColumnName("COH_CHEQUE");

                entity.Property(e => e.CohComp)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("COH_COMP");

                entity.Property(e => e.CohConcred)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COH_CONCRED");

                entity.Property(e => e.CohContrasena).HasColumnName("COH_CONTRASENA");

                entity.Property(e => e.CohDescrip)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("COH_DESCRIP");

                entity.Property(e => e.CohDescuen)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("COH_DESCUEN");

                entity.Property(e => e.CohEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("COH_EMPRESA");

                entity.Property(e => e.CohEnvioprov)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("COH_ENVIOPROV");

                entity.Property(e => e.CohFactura)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COH_FACTURA");

                entity.Property(e => e.CohFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COH_FECHA");

                entity.Property(e => e.CohFechaVenc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("coh_fecha_venc");

                entity.Property(e => e.CohFpago)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COH_FPAGO");

                entity.Property(e => e.CohFrecep)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COH_FRECEP");

                entity.Property(e => e.CohImpuesto1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("COH_IMPUESTO1");

                entity.Property(e => e.CohImpuesto2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("COH_IMPUESTO2");

                entity.Property(e => e.CohImpuesto3)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("COH_IMPUESTO3");

                entity.Property(e => e.CohImpuesto4)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("COH_IMPUESTO4");

                entity.Property(e => e.CohImpuesto5)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("COH_IMPUESTO5");

                entity.Property(e => e.CohIva)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("COH_IVA");

                entity.Property(e => e.CohLiquidacion).HasColumnName("COH_LIQUIDACION");

                entity.Property(e => e.CohNocomp)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("COH_NOCOMP");

                entity.Property(e => e.CohNoserv)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("COH_NOSERV");

                entity.Property(e => e.CohOrdenc).HasColumnName("COH_ORDENC");

                entity.Property(e => e.CohOtros)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("COH_OTROS");

                entity.Property(e => e.CohProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("COH_PROVEEDOR");

                entity.Property(e => e.CohSaldo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("COH_SALDO");

                entity.Property(e => e.CohServ)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("COH_SERV");

                entity.Property(e => e.CohStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COH_STATUS");

                entity.Property(e => e.CohTasa)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("COH_TASA");

                entity.Property(e => e.CohTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("COH_TOTAL");

                entity.Property(e => e.CohTransaccion)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("COH_TRANSACCION");

                entity.Property(e => e.CohValor)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("COH_VALOR");
            });

            modelBuilder.Entity<Compline>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("COMPLINE");

                entity.HasIndex(e => new { e.ColEmpresa, e.ColProveedor, e.ColSeriefactura, e.ColFactura, e.ColLinea }, "PK_FACTURALINEA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.ColEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("COL_EMPRESA");

                entity.Property(e => e.ColFactura)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COL_FACTURA");

                entity.Property(e => e.ColFechalote)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COL_FECHALOTE");

                entity.Property(e => e.ColInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("COL_INVENTARIO");

                entity.Property(e => e.ColLinea).HasColumnName("COL_LINEA");

                entity.Property(e => e.ColPreciou)
                    .HasColumnType("decimal(20, 6)")
                    .HasColumnName("COL_PRECIOU");

                entity.Property(e => e.ColProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("COL_PROVEEDOR");

                entity.Property(e => e.ColSerie)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("COL_SERIE");

                entity.Property(e => e.ColSeriefactura)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("COL_SERIEFACTURA");

                entity.Property(e => e.ColSerieflag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COL_SERIEFLAG");

                entity.Property(e => e.ColUnidades)
                    .HasColumnType("decimal(20, 6)")
                    .HasColumnName("COL_UNIDADES");
            });

            modelBuilder.Entity<ConHistActivo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CON_HIST_ACTIVOS");

                entity.HasIndex(e => new { e.ActhEmpresa, e.ActhCorrelativo }, "PK_HISACTIV")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.ActhEmpresa, e.ActhUbicaA }, "SK_HIST2")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.ActhEmpresa, e.ActhPersonaA }, "SK_HIST3")
                    .HasFillFactor(90);

                entity.Property(e => e.ActhActivo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ACTH_ACTIVO");

                entity.Property(e => e.ActhApellAn)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ACTH_APELL_AN");

                entity.Property(e => e.ActhCorrelativo).HasColumnName("ACTH_CORRELATIVO");

                entity.Property(e => e.ActhEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACTH_EMPRESA");

                entity.Property(e => e.ActhFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ACTH_FECHA");

                entity.Property(e => e.ActhFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ACTH_FECHAC");

                entity.Property(e => e.ActhFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ACTH_FECHAM");

                entity.Property(e => e.ActhNomAn)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ACTH_NOM_AN");

                entity.Property(e => e.ActhNomubiAn)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ACTH_NOMUBI_AN");

                entity.Property(e => e.ActhNomubicaA)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ACTH_NOMUBICA_A");

                entity.Property(e => e.ActhPersonaA)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ACTH_PERSONA_A");

                entity.Property(e => e.ActhPersonaAn)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ACTH_PERSONA_AN");

                entity.Property(e => e.ActhUbicaA)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ACTH_UBICA_A");

                entity.Property(e => e.ActhUbicaAn)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ACTH_UBICA_AN");

                entity.Property(e => e.ActhUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ACTH_USUARIOC");

                entity.Property(e => e.ActhUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ACTH_USUARIOM");
            });

            modelBuilder.Entity<ConResper>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CON_RESPER");

                entity.HasIndex(e => new { e.RespEmpresa, e.RespPersona }, "PK_RESPER")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.RespApellidos)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("RESP_APELLIDOS");

                entity.Property(e => e.RespCedula)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("RESP_CEDULA");

                entity.Property(e => e.RespEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("RESP_EMPRESA");

                entity.Property(e => e.RespNombres)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("RESP_NOMBRES");

                entity.Property(e => e.RespNomina)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("RESP_NOMINA");

                entity.Property(e => e.RespPersona)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("RESP_PERSONA");

                entity.Property(e => e.RespTelefono)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RESP_TELEFONO");
            });

            modelBuilder.Entity<Conano>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONANOS");

                entity.HasIndex(e => new { e.CanEmpresa, e.CanAno, e.CanCuenta }, "PK_CAN")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.CanEmpresa, e.CanAlterno }, "SK_ALTERNO")
                    .HasFillFactor(90);

                entity.Property(e => e.CanAcepta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CAN_ACEPTA");

                entity.Property(e => e.CanAlterno)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CAN_ALTERNO");

                entity.Property(e => e.CanAno).HasColumnName("CAN_ANO");

                entity.Property(e => e.CanCuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CAN_CUENTA");

                entity.Property(e => e.CanDebe)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CAN_DEBE");

                entity.Property(e => e.CanDebe1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CAN_DEBE1");

                entity.Property(e => e.CanDebe10)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CAN_DEBE10");

                entity.Property(e => e.CanDebe11)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CAN_DEBE11");

                entity.Property(e => e.CanDebe12)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CAN_DEBE12");

                entity.Property(e => e.CanDebe2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CAN_DEBE2");

                entity.Property(e => e.CanDebe3)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CAN_DEBE3");

                entity.Property(e => e.CanDebe4)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CAN_DEBE4");

                entity.Property(e => e.CanDebe5)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CAN_DEBE5");

                entity.Property(e => e.CanDebe6)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CAN_DEBE6");

                entity.Property(e => e.CanDebe7)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CAN_DEBE7");

                entity.Property(e => e.CanDebe8)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CAN_DEBE8");

                entity.Property(e => e.CanDebe9)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CAN_DEBE9");

                entity.Property(e => e.CanDebeini)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CAN_DEBEINI");

                entity.Property(e => e.CanDescrip)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CAN_DESCRIP");

                entity.Property(e => e.CanEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CAN_EMPRESA");

                entity.Property(e => e.CanHaber)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CAN_HABER");

                entity.Property(e => e.CanHaber1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CAN_HABER1");

                entity.Property(e => e.CanHaber10)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CAN_HABER10");

                entity.Property(e => e.CanHaber11)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CAN_HABER11");

                entity.Property(e => e.CanHaber12)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CAN_HABER12");

                entity.Property(e => e.CanHaber2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CAN_HABER2");

                entity.Property(e => e.CanHaber3)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CAN_HABER3");

                entity.Property(e => e.CanHaber4)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CAN_HABER4");

                entity.Property(e => e.CanHaber5)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CAN_HABER5");

                entity.Property(e => e.CanHaber6)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CAN_HABER6");

                entity.Property(e => e.CanHaber7)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CAN_HABER7");

                entity.Property(e => e.CanHaber8)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CAN_HABER8");

                entity.Property(e => e.CanHaber9)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CAN_HABER9");

                entity.Property(e => e.CanHaberini)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CAN_HABERINI");

                entity.Property(e => e.CanSaldo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CAN_SALDO");
            });

            modelBuilder.Entity<Conparh>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONPARH");

                entity.HasIndex(e => new { e.PahEmpresa, e.PahMes, e.PahNumero }, "PK_PAH_HEADER")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.PahDebe)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PAH_DEBE");

                entity.Property(e => e.PahDescrip1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PAH_DESCRIP1");

                entity.Property(e => e.PahDescrip2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PAH_DESCRIP2");

                entity.Property(e => e.PahDescrip3)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PAH_DESCRIP3");

                entity.Property(e => e.PahEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PAH_EMPRESA");

                entity.Property(e => e.PahFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PAH_FECHA");

                entity.Property(e => e.PahFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PAH_FECHAC");

                entity.Property(e => e.PahFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PAH_FECHAM");

                entity.Property(e => e.PahHaber)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PAH_HABER");

                entity.Property(e => e.PahMes).HasColumnName("PAH_MES");

                entity.Property(e => e.PahMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAH_MONEDA");

                entity.Property(e => e.PahNumero).HasColumnName("PAH_NUMERO");

                entity.Property(e => e.PahTasa)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PAH_TASA");

                entity.Property(e => e.PahUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PAH_USUARIOC");

                entity.Property(e => e.PahUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PAH_USUARIOM");
            });

            modelBuilder.Entity<Conparht>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONPARHT");

                entity.HasIndex(e => new { e.PahtEmpresa, e.PahtMes, e.PahtNumero }, "PK_CONPARHT")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.PahtDebe)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PAHT_DEBE");

                entity.Property(e => e.PahtDescrip1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PAHT_DESCRIP1");

                entity.Property(e => e.PahtDescrip2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PAHT_DESCRIP2");

                entity.Property(e => e.PahtDescrip3)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PAHT_DESCRIP3");

                entity.Property(e => e.PahtEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PAHT_EMPRESA");

                entity.Property(e => e.PahtFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PAHT_FECHA");

                entity.Property(e => e.PahtFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PAHT_FECHAC");

                entity.Property(e => e.PahtFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PAHT_FECHAM");

                entity.Property(e => e.PahtHaber)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PAHT_HABER");

                entity.Property(e => e.PahtMes).HasColumnName("PAHT_MES");

                entity.Property(e => e.PahtMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAHT_MONEDA");

                entity.Property(e => e.PahtNumero).HasColumnName("PAHT_NUMERO");

                entity.Property(e => e.PahtTasa)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PAHT_TASA");

                entity.Property(e => e.PahtUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PAHT_USUARIOC");

                entity.Property(e => e.PahtUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PAHT_USUARIOM");
            });

            modelBuilder.Entity<Conparl>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONPARL");

                entity.HasIndex(e => new { e.PalEmpresa, e.PalMes, e.PalCuenta }, "PD_PAL_EXTRA")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.PalEmpresa, e.PalMes, e.PalNumero, e.PalLinea }, "PK_PAL_DETA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.PalCuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PAL_CUENTA");

                entity.Property(e => e.PalDebe)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PAL_DEBE");

                entity.Property(e => e.PalEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PAL_EMPRESA");

                entity.Property(e => e.PalHaber)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PAL_HABER");

                entity.Property(e => e.PalLinea).HasColumnName("PAL_LINEA");

                entity.Property(e => e.PalMes).HasColumnName("PAL_MES");

                entity.Property(e => e.PalNumero).HasColumnName("PAL_NUMERO");
            });

            modelBuilder.Entity<Conparlt>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONPARLT");

                entity.HasIndex(e => new { e.PaltEmpresa, e.PaltMes, e.PaltNumero, e.PaltLinea }, "PK_CONPARLT")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.PaltCuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PALT_CUENTA");

                entity.Property(e => e.PaltDebe)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PALT_DEBE");

                entity.Property(e => e.PaltEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PALT_EMPRESA");

                entity.Property(e => e.PaltHaber)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PALT_HABER");

                entity.Property(e => e.PaltLinea).HasColumnName("PALT_LINEA");

                entity.Property(e => e.PaltMes).HasColumnName("PALT_MES");

                entity.Property(e => e.PaltNumero).HasColumnName("PALT_NUMERO");
            });

            modelBuilder.Entity<Contraco>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONTRACO");

                entity.HasIndex(e => new { e.ContEmpresa, e.ContCliente, e.ContContrasena }, "PK_CONTACO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.ContEmpresa, e.ContFeRecep }, "SK_CONTRREP")
                    .HasFillFactor(90);

                entity.Property(e => e.ContCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONT_CLIENTE");

                entity.Property(e => e.ContContrasena)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONT_CONTRASENA");

                entity.Property(e => e.ContEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CONT_EMPRESA");

                entity.Property(e => e.ContFePago)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CONT_FE_PAGO");

                entity.Property(e => e.ContFeRecep)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CONT_FE_RECEP");

                entity.Property(e => e.ContMonto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CONT_MONTO");
            });

            modelBuilder.Entity<Contradet>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONTRADET");

                entity.HasIndex(e => new { e.CodEmpresa, e.CodCliente, e.CodContrasena, e.CodCorrelativo }, "PK_CONTRA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CodCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("COD_CLIENTE");

                entity.Property(e => e.CodContrasena)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("COD_CONTRASENA");

                entity.Property(e => e.CodCorrelativo).HasColumnName("COD_CORRELATIVO");

                entity.Property(e => e.CodEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("COD_EMPRESA");

                entity.Property(e => e.CodFactura)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("COD_FACTURA");

                entity.Property(e => e.CodMonto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("COD_MONTO");

                entity.Property(e => e.CodTerminal).HasColumnName("COD_TERMINAL");

                entity.Property(e => e.CodTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("COD_TIENDA");
            });

            modelBuilder.Entity<Contrasena>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CONTRASENA");

                entity.HasIndex(e => new { e.ContEmpresa, e.ContContrasena }, "PK_CONTRASENA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.ContEmpresa, e.ContProveedor, e.ContFecha, e.ContContrasena }, "SK_CONTPFC")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.ContEmpresa, e.ContFecha }, "SK_CONTRFECHA")
                    .HasFillFactor(90);

                entity.Property(e => e.ContContrasena).HasColumnName("CONT_CONTRASENA");

                entity.Property(e => e.ContEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CONT_EMPRESA");

                entity.Property(e => e.ContFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CONT_FECHA");

                entity.Property(e => e.ContMonto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CONT_MONTO");

                entity.Property(e => e.ContProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CONT_PROVEEDOR");
            });

            modelBuilder.Entity<Correlativo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CORRELATIVO");

                entity.HasIndex(e => new { e.CorrEmpresa, e.CorrTipo }, "PK_CORRELA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CorrEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CORR_EMPRESA");

                entity.Property(e => e.CorrNumero).HasColumnName("CORR_NUMERO");

                entity.Property(e => e.CorrTipo)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CORR_TIPO");
            });

            modelBuilder.Entity<CorrelativoEspecial>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CORRELATIVO_ESPECIAL");

                entity.HasIndex(e => new { e.CoreEmpresa, e.CoreTipo }, "PK_CORRELA_ESP")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CoreActual).HasColumnName("CORE_ACTUAL");

                entity.Property(e => e.CoreEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CORE_EMPRESA");

                entity.Property(e => e.CoreFechaMod)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CORE_FECHA_MOD");

                entity.Property(e => e.CoreFinal).HasColumnName("CORE_FINAL");

                entity.Property(e => e.CoreInicial).HasColumnName("CORE_INICIAL");

                entity.Property(e => e.CoreTipo)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CORE_TIPO");

                entity.Property(e => e.CoreUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CORE_USUARIOM");
            });

            modelBuilder.Entity<Correlpo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CORRELPOS");

                entity.HasIndex(e => new { e.CorrpCodigo, e.CorrpTienda, e.CorrpTerminal }, "AD_CORRNUMERO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CorrpBitacora).HasColumnName("CORRP_BITACORA");

                entity.Property(e => e.CorrpBitacoraS).HasColumnName("CORRP_BITACORA_S");

                entity.Property(e => e.CorrpCaja).HasColumnName("CORRP_CAJA");

                entity.Property(e => e.CorrpCodigo)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CORRP_CODIGO");

                entity.Property(e => e.CorrpCorte).HasColumnName("CORRP_CORTE");

                entity.Property(e => e.CorrpCortex).HasColumnName("CORRP_CORTEX");

                entity.Property(e => e.CorrpCortez).HasColumnName("CORRP_CORTEZ");

                entity.Property(e => e.CorrpGrantotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CORRP_GRANTOTAL");

                entity.Property(e => e.CorrpHold).HasColumnName("CORRP_HOLD");

                entity.Property(e => e.CorrpMovscaja).HasColumnName("CORRP_MOVSCAJA");

                entity.Property(e => e.CorrpPagos).HasColumnName("CORRP_PAGOS");

                entity.Property(e => e.CorrpTerminal).HasColumnName("CORRP_TERMINAL");

                entity.Property(e => e.CorrpTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CORRP_TIENDA");

                entity.Property(e => e.CorrpVehfactura).HasColumnName("CORRP_VEHFACTURA");

                entity.Property(e => e.CorrpVehnumero).HasColumnName("CORRP_VEHNUMERO");
            });

            modelBuilder.Entity<CotAutopedido>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("COT_AUTOPEDIDOS");

                entity.HasIndex(e => new { e.CotapEmpresa, e.CotapPedido, e.CotapUsuario }, "COTAUTOPED")
                    .HasFillFactor(90);

                entity.Property(e => e.CotapEmpresa)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("COTAP_EMPRESA");

                entity.Property(e => e.CotapFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COTAP_FECHA");

                entity.Property(e => e.CotapHora)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COTAP_HORA");

                entity.Property(e => e.CotapObservaciones)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("COTAP_OBSERVACIONES");

                entity.Property(e => e.CotapPedido).HasColumnName("COTAP_PEDIDO");

                entity.Property(e => e.CotapTipusuario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("COTAP_TIPUSUARIO");

                entity.Property(e => e.CotapUsuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COTAP_USUARIO");
            });

            modelBuilder.Entity<CreditosCliente>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CREDITOS_CLIENTES");

                entity.HasIndex(e => new { e.CreEmpresa, e.CreCliente }, "IDXCREDITO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CreCedVec)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CRE_CED_VEC");

                entity.Property(e => e.CreClasif)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CRE_CLASIF");

                entity.Property(e => e.CreCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CRE_CLIENTE");

                entity.Property(e => e.CreComent1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CRE_COMENT1");

                entity.Property(e => e.CreComent2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CRE_COMENT2");

                entity.Property(e => e.CreCompra1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CRE_COMPRA1");

                entity.Property(e => e.CreCompra2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CRE_COMPRA2");

                entity.Property(e => e.CreCompra3)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CRE_COMPRA3");

                entity.Property(e => e.CreDirEmp)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CRE_DIR_EMP");

                entity.Property(e => e.CreDirRef1)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CRE_DIR_REF1");

                entity.Property(e => e.CreDirRef2)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CRE_DIR_REF2");

                entity.Property(e => e.CreDirRef3)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CRE_DIR_REF3");

                entity.Property(e => e.CreEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CRE_EMPRESA");

                entity.Property(e => e.CreEmpresaTrabaja)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CRE_EMPRESA_TRABAJA");

                entity.Property(e => e.CreEstadoCivil)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CRE_ESTADO_CIVIL");

                entity.Property(e => e.CreFeNac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CRE_FE_NAC");

                entity.Property(e => e.CreFeccomp1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CRE_FECCOMP1");

                entity.Property(e => e.CreFeccomp2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CRE_FECCOMP2");

                entity.Property(e => e.CreFeccomp3)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CRE_FECCOMP3");

                entity.Property(e => e.CreRef1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CRE_REF1");

                entity.Property(e => e.CreRef2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CRE_REF2");

                entity.Property(e => e.CreRef3)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CRE_REF3");

                entity.Property(e => e.CreSueldo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CRE_SUELDO");

                entity.Property(e => e.CreTelEmp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CRE_TEL_EMP");

                entity.Property(e => e.CreTelRef1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CRE_TEL_REF1");

                entity.Property(e => e.CreTelRef2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CRE_TEL_REF2");

                entity.Property(e => e.CreTelRef3)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CRE_TEL_REF3");

                entity.Property(e => e.CreTelcomp1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CRE_TELCOMP1");

                entity.Property(e => e.CreTelcomp2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CRE_TELCOMP2");

                entity.Property(e => e.CreTelcomp3)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CRE_TELCOMP3");

                entity.Property(e => e.CreValcomp1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CRE_VALCOMP1");

                entity.Property(e => e.CreValcomp2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CRE_VALCOMP2");

                entity.Property(e => e.CreValcomp3)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CRE_VALCOMP3");
            });

            modelBuilder.Entity<CtaContTiendum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CTA_CONT_TIENDA");

                entity.HasIndex(e => new { e.CctEmpresa, e.CctTienda, e.CctSublinea }, "CTA_TIENDA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CctCtaEgre)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCT_CTA_EGRE");

                entity.Property(e => e.CctCtaIngr)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CCT_CTA_INGR");

                entity.Property(e => e.CctEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CCT_EMPRESA");

                entity.Property(e => e.CctSublinea)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CCT_SUBLINEA");

                entity.Property(e => e.CctTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CCT_TIENDA");
            });

            modelBuilder.Entity<CxcAntigLinea>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CXC_ANTIG_LINEA");

                entity.HasIndex(e => new { e.CxlEmpresa, e.CxlRandom, e.CxlCorrelativo }, "PK_ANTI_LIN")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CxlAno).HasColumnName("CXL_ANO");

                entity.Property(e => e.CxlArticulo)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CXL_ARTICULO");

                entity.Property(e => e.CxlCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CXL_CLIENTE");

                entity.Property(e => e.CxlCorrelativo).HasColumnName("CXL_CORRELATIVO");

                entity.Property(e => e.CxlCorriente)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXL_CORRIENTE");

                entity.Property(e => e.CxlEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CXL_EMPRESA");

                entity.Property(e => e.CxlFecfac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CXL_FECFAC");

                entity.Property(e => e.CxlFecrec)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CXL_FECREC");

                entity.Property(e => e.CxlLinea)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CXL_LINEA");

                entity.Property(e => e.CxlMes).HasColumnName("CXL_MES");

                entity.Property(e => e.CxlNumfac).HasColumnName("CXL_NUMFAC");

                entity.Property(e => e.CxlNumrec).HasColumnName("CXL_NUMREC");

                entity.Property(e => e.CxlRandom).HasColumnName("CXL_RANDOM");

                entity.Property(e => e.CxlSal120)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXL_SAL120");

                entity.Property(e => e.CxlSal150)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXL_SAL150");

                entity.Property(e => e.CxlSal30)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXL_SAL30");

                entity.Property(e => e.CxlSal60)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXL_SAL60");

                entity.Property(e => e.CxlSal90)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXL_SAL90");

                entity.Property(e => e.CxlSaldo)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXL_SALDO");

                entity.Property(e => e.CxlSalm150)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXL_SALM150");

                entity.Property(e => e.CxlSerfac)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CXL_SERFAC");

                entity.Property(e => e.CxlSerrec)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CXL_SERREC");

                entity.Property(e => e.CxlSublinea)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CXL_SUBLINEA");

                entity.Property(e => e.CxlTdafac)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CXL_TDAFAC");

                entity.Property(e => e.CxlTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CXL_TIPO");

                entity.Property(e => e.CxlTrmfac).HasColumnName("CXL_TRMFAC");

                entity.Property(e => e.CxlValor)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXL_VALOR");

                entity.Property(e => e.CxlVendedor).HasColumnName("CXL_VENDEDOR");
            });

            modelBuilder.Entity<CxcAntigRecibo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CXC_ANTIG_RECIBOS");

                entity.HasIndex(e => new { e.CxrEmpresa, e.CxrRandom, e.CxrCorrelativo }, "PK_ANTI_REC")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CxrAno).HasColumnName("CXR_ANO");

                entity.Property(e => e.CxrArticulo)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CXR_ARTICULO");

                entity.Property(e => e.CxrCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CXR_CLIENTE");

                entity.Property(e => e.CxrCorrelativo).HasColumnName("CXR_CORRELATIVO");

                entity.Property(e => e.CxrEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CXR_EMPRESA");

                entity.Property(e => e.CxrFecfac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CXR_FECFAC");

                entity.Property(e => e.CxrFecrec)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CXR_FECREC");

                entity.Property(e => e.CxrLinea)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CXR_LINEA");

                entity.Property(e => e.CxrMes).HasColumnName("CXR_MES");

                entity.Property(e => e.CxrNumfac).HasColumnName("CXR_NUMFAC");

                entity.Property(e => e.CxrNumrec).HasColumnName("CXR_NUMREC");

                entity.Property(e => e.CxrRandom).HasColumnName("CXR_RANDOM");

                entity.Property(e => e.CxrSaldo)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXR_SALDO");

                entity.Property(e => e.CxrSerfac)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CXR_SERFAC");

                entity.Property(e => e.CxrSerrec)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CXR_SERREC");

                entity.Property(e => e.CxrSublinea)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CXR_SUBLINEA");

                entity.Property(e => e.CxrTdafac)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CXR_TDAFAC");

                entity.Property(e => e.CxrTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CXR_TIPO");

                entity.Property(e => e.CxrTotal)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXR_TOTAL");

                entity.Property(e => e.CxrTrmfac).HasColumnName("CXR_TRMFAC");

                entity.Property(e => e.CxrValor)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXR_VALOR");

                entity.Property(e => e.CxrVendedor).HasColumnName("CXR_VENDEDOR");
            });

            modelBuilder.Entity<CxcAntigmontasa>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CXC_ANTIGMONTASA");

                entity.HasIndex(e => new { e.AntmEmpresa, e.AntmRandom, e.AntmCorrelativo }, "PK_ANITGUEDAD12")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.AntmEmpresa, e.AntmRandom, e.AntmCliente }, "PK_ANITGUEDAD22")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.AntmEmpresa, e.AntmRandom, e.AntmVendedor, e.AntmCliente }, "PK_ANITGUEDAD32")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.AntmEmpresa, e.AntmRandom, e.AntmRuta, e.AntmCliente }, "PK_ANITGUEDAD42")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.AntmEmpresa, e.AntmRandom, e.AntmArea, e.AntmCliente }, "PK_ANITGUEDAD52")
                    .HasFillFactor(90);

                entity.Property(e => e.AntmArea)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ANTM_AREA");

                entity.Property(e => e.AntmCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ANTM_CLIENTE");

                entity.Property(e => e.AntmCorrelativo).HasColumnName("ANTM_CORRELATIVO");

                entity.Property(e => e.AntmDocumento).HasColumnName("ANTM_DOCUMENTO");

                entity.Property(e => e.AntmEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ANTM_EMPRESA");

                entity.Property(e => e.AntmExtra1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ANTM_EXTRA1");

                entity.Property(e => e.AntmExtra2).HasColumnName("ANTM_EXTRA2");

                entity.Property(e => e.AntmFechafact)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANTM_FECHAFACT");

                entity.Property(e => e.AntmFechaupag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANTM_FECHAUPAG");

                entity.Property(e => e.AntmFechavenc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANTM_FECHAVENC");

                entity.Property(e => e.AntmMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ANTM_MONEDA");

                entity.Property(e => e.AntmPago).HasColumnName("ANTM_PAGO");

                entity.Property(e => e.AntmRandom).HasColumnName("ANTM_RANDOM");

                entity.Property(e => e.AntmRuta)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ANTM_RUTA");

                entity.Property(e => e.AntmSaldo120)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("ANTM_SALDO_120");

                entity.Property(e => e.AntmSaldo30)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("ANTM_SALDO_30");

                entity.Property(e => e.AntmSaldo60)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("ANTM_SALDO_60");

                entity.Property(e => e.AntmSaldo90)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("ANTM_SALDO_90");

                entity.Property(e => e.AntmSaldoCor)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("ANTM_SALDO_COR");

                entity.Property(e => e.AntmSaldoM120)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("ANTM_SALDO_M120");

                entity.Property(e => e.AntmSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ANTM_SERIE");

                entity.Property(e => e.AntmTasacam)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("ANTM_TASACAM");

                entity.Property(e => e.AntmTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANTM_TIPO");

                entity.Property(e => e.AntmVendedor).HasColumnName("ANTM_VENDEDOR");
            });

            modelBuilder.Entity<CxcAntiguedad>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CXC_ANTIGUEDAD");

                entity.HasIndex(e => new { e.AntEmpresa, e.AntRandom, e.AntCorrelativo }, "PK_ANITGUEDAD1")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.AntEmpresa, e.AntRandom, e.AntCliente }, "PK_ANITGUEDAD2")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.AntEmpresa, e.AntRandom, e.AntVendedor, e.AntCliente }, "PK_ANITGUEDAD3")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.AntEmpresa, e.AntRandom, e.AntRuta, e.AntCliente }, "PK_ANITGUEDAD4")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.AntEmpresa, e.AntRandom, e.AntArea, e.AntCliente }, "PK_ANITGUEDAD5")
                    .HasFillFactor(90);

                entity.Property(e => e.AntArea)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ANT_AREA");

                entity.Property(e => e.AntCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ANT_CLIENTE");

                entity.Property(e => e.AntCorrelativo).HasColumnName("ANT_CORRELATIVO");

                entity.Property(e => e.AntDocumento).HasColumnName("ANT_DOCUMENTO");

                entity.Property(e => e.AntEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ANT_EMPRESA");

                entity.Property(e => e.AntExtra1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ANT_EXTRA1");

                entity.Property(e => e.AntExtra2).HasColumnName("ANT_EXTRA2");

                entity.Property(e => e.AntFechafact)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANT_FECHAFACT");

                entity.Property(e => e.AntFechaupag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANT_FECHAUPAG");

                entity.Property(e => e.AntFechavenc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANT_FECHAVENC");

                entity.Property(e => e.AntPago).HasColumnName("ANT_PAGO");

                entity.Property(e => e.AntRandom).HasColumnName("ANT_RANDOM");

                entity.Property(e => e.AntRuta)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ANT_RUTA");

                entity.Property(e => e.AntSaldo120)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ANT_SALDO_120");

                entity.Property(e => e.AntSaldo30)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ANT_SALDO_30");

                entity.Property(e => e.AntSaldo60)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ANT_SALDO_60");

                entity.Property(e => e.AntSaldo90)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ANT_SALDO_90");

                entity.Property(e => e.AntSaldoCor)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ANT_SALDO_COR");

                entity.Property(e => e.AntSaldoM120)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ANT_SALDO_M120");

                entity.Property(e => e.AntSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ANT_SERIE");

                entity.Property(e => e.AntTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANT_TIPO");

                entity.Property(e => e.AntVendedor).HasColumnName("ANT_VENDEDOR");
            });

            modelBuilder.Entity<CxcAntiguedad1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CXC_ANTIGUEDAD_1");

                entity.HasIndex(e => new { e.AntiEmpresa, e.AntiRandom, e.AntiCorrelativo }, "PK_ANITGUEDAD_1")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.AntiEmpresa, e.AntiRandom, e.AntiCliente }, "PK_ANITGUEDAD_2")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.AntiEmpresa, e.AntiRandom, e.AntiVendedor, e.AntiCliente }, "PK_ANITGUEDAD_3")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.AntiEmpresa, e.AntiRandom, e.AntiRuta, e.AntiCliente }, "PK_ANITGUEDAD_4")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.AntiEmpresa, e.AntiRandom, e.AntiArea, e.AntiCliente }, "PK_ANITGUEDAD_5")
                    .HasFillFactor(90);

                entity.Property(e => e.AntiArea)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ANTI_AREA");

                entity.Property(e => e.AntiCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ANTI_CLIENTE");

                entity.Property(e => e.AntiCorrelativo).HasColumnName("ANTI_CORRELATIVO");

                entity.Property(e => e.AntiDocumento).HasColumnName("ANTI_DOCUMENTO");

                entity.Property(e => e.AntiEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ANTI_EMPRESA");

                entity.Property(e => e.AntiExtra1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ANTI_EXTRA1");

                entity.Property(e => e.AntiExtra2).HasColumnName("ANTI_EXTRA2");

                entity.Property(e => e.AntiFechafact)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANTI_FECHAFACT");

                entity.Property(e => e.AntiFechaupag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANTI_FECHAUPAG");

                entity.Property(e => e.AntiFechavenc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANTI_FECHAVENC");

                entity.Property(e => e.AntiPago).HasColumnName("ANTI_PAGO");

                entity.Property(e => e.AntiRandom).HasColumnName("ANTI_RANDOM");

                entity.Property(e => e.AntiRuta)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ANTI_RUTA");

                entity.Property(e => e.AntiSaldo14)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("ANTI_SALDO_14");

                entity.Property(e => e.AntiSaldo21)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("ANTI_SALDO_21");

                entity.Property(e => e.AntiSaldo30)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("ANTI_SALDO_30");

                entity.Property(e => e.AntiSaldo7)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("ANTI_SALDO_7");

                entity.Property(e => e.AntiSaldoCor)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("ANTI_SALDO_COR");

                entity.Property(e => e.AntiSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ANTI_SERIE");

                entity.Property(e => e.AntiTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANTI_TIPO");

                entity.Property(e => e.AntiVendedor).HasColumnName("ANTI_VENDEDOR");
            });

            modelBuilder.Entity<CxcAntiguedad2>(entity =>
            {
                entity.HasKey(e => new { e.AntEmpresa, e.AntRandom, e.AntCorrelativo })
                    .HasName("PK_CXCANTIGSALFEL");

                entity.ToTable("CXC_ANTIGUEDAD_2");

                entity.Property(e => e.AntEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ANT_EMPRESA");

                entity.Property(e => e.AntRandom).HasColumnName("ANT_RANDOM");

                entity.Property(e => e.AntCorrelativo).HasColumnName("ANT_CORRELATIVO");

                entity.Property(e => e.AntArea)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ANT_AREA");

                entity.Property(e => e.AntCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ANT_CLIENTE");

                entity.Property(e => e.AntDocumento).HasColumnName("ANT_DOCUMENTO");

                entity.Property(e => e.AntExtra1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ANT_EXTRA1");

                entity.Property(e => e.AntExtra2).HasColumnName("ANT_EXTRA2");

                entity.Property(e => e.AntFechafact)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANT_FECHAFACT");

                entity.Property(e => e.AntFechaupag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANT_FECHAUPAG");

                entity.Property(e => e.AntFechavenc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANT_FECHAVENC");

                entity.Property(e => e.AntFelnumero)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("ANT_FELNUMERO");

                entity.Property(e => e.AntFelserie)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("ANT_FELSERIE");

                entity.Property(e => e.AntPago).HasColumnName("ANT_PAGO");

                entity.Property(e => e.AntRuta)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ANT_RUTA");

                entity.Property(e => e.AntSaldo120)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ANT_SALDO_120");

                entity.Property(e => e.AntSaldo30)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ANT_SALDO_30");

                entity.Property(e => e.AntSaldo60)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ANT_SALDO_60");

                entity.Property(e => e.AntSaldo90)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ANT_SALDO_90");

                entity.Property(e => e.AntSaldoCor)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ANT_SALDO_COR");

                entity.Property(e => e.AntSaldoM120)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ANT_SALDO_M120");

                entity.Property(e => e.AntSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ANT_SERIE");

                entity.Property(e => e.AntTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANT_TIPO");

                entity.Property(e => e.AntVendedor).HasColumnName("ANT_VENDEDOR");
            });

            modelBuilder.Entity<CxcCobCentro>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CXC_COB_CENTRO");

                entity.HasIndex(e => new { e.CbaEmpresa, e.CbaRandom, e.CbaCorrelativo }, "PK_COB_CENTRO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CbaAno).HasColumnName("CBA_ANO");

                entity.Property(e => e.CbaArticulo)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CBA_ARTICULO");

                entity.Property(e => e.CbaCentro)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CBA_CENTRO");

                entity.Property(e => e.CbaCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CBA_CLIENTE");

                entity.Property(e => e.CbaCorrelativo).HasColumnName("CBA_CORRELATIVO");

                entity.Property(e => e.CbaEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CBA_EMPRESA");

                entity.Property(e => e.CbaFecfac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CBA_FECFAC");

                entity.Property(e => e.CbaFecrec)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CBA_FECREC");

                entity.Property(e => e.CbaLinea)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CBA_LINEA");

                entity.Property(e => e.CbaMes).HasColumnName("CBA_MES");

                entity.Property(e => e.CbaNumfac).HasColumnName("CBA_NUMFAC");

                entity.Property(e => e.CbaNumrec).HasColumnName("CBA_NUMREC");

                entity.Property(e => e.CbaRandom).HasColumnName("CBA_RANDOM");

                entity.Property(e => e.CbaSerfac)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CBA_SERFAC");

                entity.Property(e => e.CbaSerrec)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CBA_SERREC");

                entity.Property(e => e.CbaSublinea)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CBA_SUBLINEA");

                entity.Property(e => e.CbaTdafac)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CBA_TDAFAC");

                entity.Property(e => e.CbaTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CBA_TIPO");

                entity.Property(e => e.CbaTrmfac).HasColumnName("CBA_TRMFAC");

                entity.Property(e => e.CbaUnidades)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CBA_UNIDADES");

                entity.Property(e => e.CbaValor)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CBA_VALOR");

                entity.Property(e => e.CbaVendedor).HasColumnName("CBA_VENDEDOR");
            });

            modelBuilder.Entity<CxcCobranza>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CXC_COBRANZA");

                entity.HasIndex(e => new { e.CbaEmpresa, e.CbaRandom, e.CbaCorrelativo }, "PK_COBRANZA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CbaArticulo)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CBA_ARTICULO");

                entity.Property(e => e.CbaCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CBA_CLIENTE");

                entity.Property(e => e.CbaCorrelativo).HasColumnName("CBA_CORRELATIVO");

                entity.Property(e => e.CbaEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CBA_EMPRESA");

                entity.Property(e => e.CbaFecfac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CBA_FECFAC");

                entity.Property(e => e.CbaFecrec)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CBA_FECREC");

                entity.Property(e => e.CbaLinea)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CBA_LINEA");

                entity.Property(e => e.CbaNumfac).HasColumnName("CBA_NUMFAC");

                entity.Property(e => e.CbaNumrec).HasColumnName("CBA_NUMREC");

                entity.Property(e => e.CbaRandom).HasColumnName("CBA_RANDOM");

                entity.Property(e => e.CbaSerfac)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CBA_SERFAC");

                entity.Property(e => e.CbaSerrec)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CBA_SERREC");

                entity.Property(e => e.CbaSublinea)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CBA_SUBLINEA");

                entity.Property(e => e.CbaTdafac)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CBA_TDAFAC");

                entity.Property(e => e.CbaTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CBA_TIPO");

                entity.Property(e => e.CbaTrmfac).HasColumnName("CBA_TRMFAC");

                entity.Property(e => e.CbaUnidades)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CBA_UNIDADES");

                entity.Property(e => e.CbaValor)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CBA_VALOR");

                entity.Property(e => e.CbaVendedor).HasColumnName("CBA_VENDEDOR");
            });

            modelBuilder.Entity<CxcCobranza1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CXC_COBRANZA1");

                entity.HasIndex(e => new { e.CbaEmpresa, e.CbaRandom, e.CbaCorrelativo }, "PK_COBRANZA1")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CbaAno).HasColumnName("CBA_ANO");

                entity.Property(e => e.CbaArticulo)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CBA_ARTICULO");

                entity.Property(e => e.CbaCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CBA_CLIENTE");

                entity.Property(e => e.CbaCorrelativo).HasColumnName("CBA_CORRELATIVO");

                entity.Property(e => e.CbaEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CBA_EMPRESA");

                entity.Property(e => e.CbaFecfac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CBA_FECFAC");

                entity.Property(e => e.CbaFecrec)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CBA_FECREC");

                entity.Property(e => e.CbaLinea)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CBA_LINEA");

                entity.Property(e => e.CbaMes).HasColumnName("CBA_MES");

                entity.Property(e => e.CbaNumfac).HasColumnName("CBA_NUMFAC");

                entity.Property(e => e.CbaNumrec).HasColumnName("CBA_NUMREC");

                entity.Property(e => e.CbaRandom).HasColumnName("CBA_RANDOM");

                entity.Property(e => e.CbaSerfac)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CBA_SERFAC");

                entity.Property(e => e.CbaSerrec)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CBA_SERREC");

                entity.Property(e => e.CbaSublinea)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CBA_SUBLINEA");

                entity.Property(e => e.CbaTdafac)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CBA_TDAFAC");

                entity.Property(e => e.CbaTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CBA_TIPO");

                entity.Property(e => e.CbaTrmfac).HasColumnName("CBA_TRMFAC");

                entity.Property(e => e.CbaUnidades)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CBA_UNIDADES");

                entity.Property(e => e.CbaValor)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CBA_VALOR");

                entity.Property(e => e.CbaVendedor).HasColumnName("CBA_VENDEDOR");
            });

            modelBuilder.Entity<CxcCobranzaClasifica>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CXC_COBRANZA_CLASIFICA");

                entity.HasIndex(e => new { e.CbaEmpresa, e.CbaRandom, e.CbaCorrelativo }, "PK_COBRANZA_CLA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CbaAno).HasColumnName("CBA_ANO");

                entity.Property(e => e.CbaArticulo)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CBA_ARTICULO");

                entity.Property(e => e.CbaClasific)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CBA_CLASIFIC");

                entity.Property(e => e.CbaCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CBA_CLIENTE");

                entity.Property(e => e.CbaCorrelativo).HasColumnName("CBA_CORRELATIVO");

                entity.Property(e => e.CbaEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CBA_EMPRESA");

                entity.Property(e => e.CbaFecfac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CBA_FECFAC");

                entity.Property(e => e.CbaFecrec)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CBA_FECREC");

                entity.Property(e => e.CbaLinea)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CBA_LINEA");

                entity.Property(e => e.CbaMes).HasColumnName("CBA_MES");

                entity.Property(e => e.CbaNumfac).HasColumnName("CBA_NUMFAC");

                entity.Property(e => e.CbaNumrec).HasColumnName("CBA_NUMREC");

                entity.Property(e => e.CbaRandom).HasColumnName("CBA_RANDOM");

                entity.Property(e => e.CbaSerfac)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CBA_SERFAC");

                entity.Property(e => e.CbaSerrec)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CBA_SERREC");

                entity.Property(e => e.CbaSublinea)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CBA_SUBLINEA");

                entity.Property(e => e.CbaTdafac)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CBA_TDAFAC");

                entity.Property(e => e.CbaTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CBA_TIPO");

                entity.Property(e => e.CbaTrmfac).HasColumnName("CBA_TRMFAC");

                entity.Property(e => e.CbaUnidades)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CBA_UNIDADES");

                entity.Property(e => e.CbaValor)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CBA_VALOR");

                entity.Property(e => e.CbaVendedor).HasColumnName("CBA_VENDEDOR");
            });

            modelBuilder.Entity<CxcGlobalLinea>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CXC_GLOBAL_LINEA");

                entity.HasIndex(e => new { e.CxgEmpresa, e.CxgMesAct, e.CxgAnoAct, e.CxgCorrelativo }, "PK_GLOBAL_LIN")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CxgAno).HasColumnName("CXG_ANO");

                entity.Property(e => e.CxgAnoAct).HasColumnName("CXG_ANO_ACT");

                entity.Property(e => e.CxgArticulo)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CXG_ARTICULO");

                entity.Property(e => e.CxgCentro)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CXG_CENTRO");

                entity.Property(e => e.CxgCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CXG_CLIENTE");

                entity.Property(e => e.CxgCorrelativo).HasColumnName("CXG_CORRELATIVO");

                entity.Property(e => e.CxgCorriente)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXG_CORRIENTE");

                entity.Property(e => e.CxgCorriente1)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXG_CORRIENTE1");

                entity.Property(e => e.CxgEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CXG_EMPRESA");

                entity.Property(e => e.CxgFecfac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CXG_FECFAC");

                entity.Property(e => e.CxgLinea)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CXG_LINEA");

                entity.Property(e => e.CxgMes).HasColumnName("CXG_MES");

                entity.Property(e => e.CxgMesAct).HasColumnName("CXG_MES_ACT");

                entity.Property(e => e.CxgNumfac).HasColumnName("CXG_NUMFAC");

                entity.Property(e => e.CxgSal120)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXG_SAL120");

                entity.Property(e => e.CxgSal1201)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXG_SAL1201");

                entity.Property(e => e.CxgSal150)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXG_SAL150");

                entity.Property(e => e.CxgSal1501)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXG_SAL1501");

                entity.Property(e => e.CxgSal30)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXG_SAL30");

                entity.Property(e => e.CxgSal301)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXG_SAL301");

                entity.Property(e => e.CxgSal60)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXG_SAL60");

                entity.Property(e => e.CxgSal601)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXG_SAL601");

                entity.Property(e => e.CxgSal90)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXG_SAL90");

                entity.Property(e => e.CxgSal901)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXG_SAL901");

                entity.Property(e => e.CxgSaldo)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXG_SALDO");

                entity.Property(e => e.CxgSalm150)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXG_SALM150");

                entity.Property(e => e.CxgSalm1501)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXG_SALM1501");

                entity.Property(e => e.CxgSerfac)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CXG_SERFAC");

                entity.Property(e => e.CxgSublinea)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CXG_SUBLINEA");

                entity.Property(e => e.CxgTdafac)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CXG_TDAFAC");

                entity.Property(e => e.CxgTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CXG_TIPO");

                entity.Property(e => e.CxgTotcredi)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXG_TOTCREDI");

                entity.Property(e => e.CxgTotfactu)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXG_TOTFACTU");

                entity.Property(e => e.CxgTotrec)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("CXG_TOTREC");

                entity.Property(e => e.CxgTotrecib)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXG_TOTRECIB");

                entity.Property(e => e.CxgTrmfac).HasColumnName("CXG_TRMFAC");

                entity.Property(e => e.CxgValor)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXG_VALOR");

                entity.Property(e => e.CxgVendedor).HasColumnName("CXG_VENDEDOR");
            });

            modelBuilder.Entity<CxcHistoLinea>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CXC_HISTO_LINEA");

                entity.HasIndex(e => new { e.CxhEmpresa, e.CxhMesAct, e.CxhAnoAct, e.CxhCorrelativo }, "PK_HISTO_LIN")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CxhAno).HasColumnName("CXH_ANO");

                entity.Property(e => e.CxhAnoAct).HasColumnName("CXH_ANO_ACT");

                entity.Property(e => e.CxhArticulo)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CXH_ARTICULO");

                entity.Property(e => e.CxhCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CXH_CLIENTE");

                entity.Property(e => e.CxhCorrelativo).HasColumnName("CXH_CORRELATIVO");

                entity.Property(e => e.CxhCorriente)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXH_CORRIENTE");

                entity.Property(e => e.CxhCorriente1)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXH_CORRIENTE1");

                entity.Property(e => e.CxhEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CXH_EMPRESA");

                entity.Property(e => e.CxhFecfac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CXH_FECFAC");

                entity.Property(e => e.CxhLinea)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CXH_LINEA");

                entity.Property(e => e.CxhMes).HasColumnName("CXH_MES");

                entity.Property(e => e.CxhMesAct).HasColumnName("CXH_MES_ACT");

                entity.Property(e => e.CxhNumfac).HasColumnName("CXH_NUMFAC");

                entity.Property(e => e.CxhSal120)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXH_SAL120");

                entity.Property(e => e.CxhSal1201)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXH_SAL1201");

                entity.Property(e => e.CxhSal150)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXH_SAL150");

                entity.Property(e => e.CxhSal1501)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXH_SAL1501");

                entity.Property(e => e.CxhSal30)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXH_SAL30");

                entity.Property(e => e.CxhSal301)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXH_SAL301");

                entity.Property(e => e.CxhSal60)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXH_SAL60");

                entity.Property(e => e.CxhSal601)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXH_SAL601");

                entity.Property(e => e.CxhSal90)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXH_SAL90");

                entity.Property(e => e.CxhSal901)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXH_SAL901");

                entity.Property(e => e.CxhSaldo)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXH_SALDO");

                entity.Property(e => e.CxhSalm150)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXH_SALM150");

                entity.Property(e => e.CxhSalm1501)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXH_SALM1501");

                entity.Property(e => e.CxhSerfac)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CXH_SERFAC");

                entity.Property(e => e.CxhSublinea)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CXH_SUBLINEA");

                entity.Property(e => e.CxhTdafac)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CXH_TDAFAC");

                entity.Property(e => e.CxhTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CXH_TIPO");

                entity.Property(e => e.CxhTotrec)
                    .HasColumnType("numeric(18, 2)")
                    .HasColumnName("CXH_TOTREC");

                entity.Property(e => e.CxhTrmfac).HasColumnName("CXH_TRMFAC");

                entity.Property(e => e.CxhValor)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("CXH_VALOR");

                entity.Property(e => e.CxhVendedor).HasColumnName("CXH_VENDEDOR");
            });

            modelBuilder.Entity<CxcPagosbatchH>(entity =>
            {
                entity.HasKey(e => new { e.CxcphEmpresa, e.CxcphTipo, e.CxcphNumero })
                    .HasName("PK_CXCPAGBATCHH");

                entity.ToTable("CXC_PAGOSBATCH_H");

                entity.Property(e => e.CxcphEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CXCPH_EMPRESA");

                entity.Property(e => e.CxcphTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CXCPH_TIPO");

                entity.Property(e => e.CxcphNumero).HasColumnName("CXCPH_NUMERO");

                entity.Property(e => e.CxcphArchivo)
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasColumnName("CXCPH_ARCHIVO");

                entity.Property(e => e.CxcphBasereten)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPH_BASERETEN");

                entity.Property(e => e.CxcphChar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CXCPH_CHAR");

                entity.Property(e => e.CxcphCremonto)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPH_CREMONTO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CxcphCterminal).HasColumnName("CXCPH_CTERMINAL");

                entity.Property(e => e.CxcphCtienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CXCPH_CTIENDA");

                entity.Property(e => e.CxcphDevmonto)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPH_DEVMONTO");

                entity.Property(e => e.CxcphDif)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPH_DIF");

                entity.Property(e => e.CxcphDif2)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPH_DIF2");

                entity.Property(e => e.CxcphFacinexis).HasColumnName("CXCPH_FACINEXIS");

                entity.Property(e => e.CxcphFacmonto)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPH_FACMONTO");

                entity.Property(e => e.CxcphFacsinsaldo).HasColumnName("CXCPH_FACSINSALDO");

                entity.Property(e => e.CxcphFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CXCPH_FECHA");

                entity.Property(e => e.CxcphFechaa)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CXCPH_FECHAA");

                entity.Property(e => e.CxcphFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CXCPH_FECHAC");

                entity.Property(e => e.CxcphFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CXCPH_FECHAM");

                entity.Property(e => e.CxcphLiquido)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPH_LIQUIDO");

                entity.Property(e => e.CxcphMonto)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPH_MONTO");

                entity.Property(e => e.CxcphNcre)
                    .HasColumnName("CXCPH_NCRE")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CxcphNdev).HasColumnName("CXCPH_NDEV");

                entity.Property(e => e.CxcphNfac).HasColumnName("CXCPH_NFAC");

                entity.Property(e => e.CxcphNnotapli)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPH_NNOTAPLI");

                entity.Property(e => e.CxcphNrecapli)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPH_NRECAPLI");

                entity.Property(e => e.CxcphNret)
                    .HasColumnName("CXCPH_NRET")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CxcphObserva)
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasColumnName("CXCPH_OBSERVA");

                entity.Property(e => e.CxcphPagos)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPH_PAGOS");

                entity.Property(e => e.CxcphRetmonto)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPH_RETMONTO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CxcphSaldo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPH_SALDO");

                entity.Property(e => e.CxcphStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CXCPH_STATUS");

                entity.Property(e => e.CxcphTotapli)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPH_TOTAPLI");

                entity.Property(e => e.CxcphTotaplidif)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPH_TOTAPLIDIF");

                entity.Property(e => e.CxcphTotnotapli)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPH_TOTNOTAPLI");

                entity.Property(e => e.CxcphTotnotxapli)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPH_TOTNOTXAPLI");

                entity.Property(e => e.CxcphTotrecapli)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPH_TOTRECAPLI");

                entity.Property(e => e.CxcphTotrecxapli)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPH_TOTRECXAPLI");

                entity.Property(e => e.CxcphTotxapli)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPH_TOTXAPLI");

                entity.Property(e => e.CxcphUsuarioa)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CXCPH_USUARIOA");

                entity.Property(e => e.CxcphUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CXCPH_USUARIOC");

                entity.Property(e => e.CxcphUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CXCPH_USUARIOM");
            });

            modelBuilder.Entity<CxcPagosbatchL>(entity =>
            {
                entity.HasKey(e => new { e.CxcplEmpresa, e.CxcplTipo, e.CxcplNumero, e.CxcplLinea })
                    .HasName("PK_CXCPAGBATCHL");

                entity.ToTable("CXC_PAGOSBATCH_L");

                entity.Property(e => e.CxcplEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CXCPL_EMPRESA");

                entity.Property(e => e.CxcplTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CXCPL_TIPO");

                entity.Property(e => e.CxcplNumero).HasColumnName("CXCPL_NUMERO");

                entity.Property(e => e.CxcplLinea).HasColumnName("CXCPL_LINEA");

                entity.Property(e => e.CxcplCdebito)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPL_CDEBITO")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CxcplCdocnum1)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CXCPL_CDOCNUM1");

                entity.Property(e => e.CxcplCdocumento)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CXCPL_CDOCUMENTO");

                entity.Property(e => e.CxcplCfecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CXCPL_CFECHA");

                entity.Property(e => e.CxcplCfila)
                    .HasColumnName("CXCPL_CFILA")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CxcplClicodigo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CXCPL_CLICODIGO");

                entity.Property(e => e.CxcplCmonto)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPL_CMONTO");

                entity.Property(e => e.CxcplCtipdoc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CXCPL_CTIPDOC");

                entity.Property(e => e.CxcplCvalor)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPL_CVALOR")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CxcplErr)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CXCPL_ERR");

                entity.Property(e => e.CxcplFactura).HasColumnName("CXCPL_FACTURA");

                entity.Property(e => e.CxcplFelnumero)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CXCPL_FELNUMERO");

                entity.Property(e => e.CxcplFelserie)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("CXCPL_FELSERIE");

                entity.Property(e => e.CxcplFfecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CXCPL_FFECHA");

                entity.Property(e => e.CxcplFmonto)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPL_FMONTO");

                entity.Property(e => e.CxcplFpago)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPL_FPAGO");

                entity.Property(e => e.CxcplFsaldo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPL_FSALDO");

                entity.Property(e => e.CxcplFsaldopago)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPL_FSALDOPAGO");

                entity.Property(e => e.CxcplFserie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CXCPL_FSERIE");

                entity.Property(e => e.CxcplFsfinal)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPL_FSFINAL");

                entity.Property(e => e.CxcplFterminal).HasColumnName("CXCPL_FTERMINAL");

                entity.Property(e => e.CxcplFtienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CXCPL_FTIENDA");

                entity.Property(e => e.CxcplMonton)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPL_MONTON");

                entity.Property(e => e.CxcplMontor)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPL_MONTOR");

                entity.Property(e => e.CxcplNfecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CXCPL_NFECHA");

                entity.Property(e => e.CxcplNmonto)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPL_NMONTO");

                entity.Property(e => e.CxcplNnota).HasColumnName("CXCPL_NNOTA");

                entity.Property(e => e.CxcplNtipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CXCPL_NTIPO");

                entity.Property(e => e.CxcplRecibo).HasColumnName("CXCPL_RECIBO");

                entity.Property(e => e.CxcplRetcalc)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPL_RETCALC");

                entity.Property(e => e.CxcplRetfisica)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPL_RETFISICA");

                entity.Property(e => e.CxcplRfecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CXCPL_RFECHA");

                entity.Property(e => e.CxcplRmonto)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPL_RMONTO");

                entity.Property(e => e.CxcplRserie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CXCPL_RSERIE");
            });

            modelBuilder.Entity<CxcPagosbatchLd>(entity =>
            {
                entity.HasKey(e => new { e.CxcpldEmpresa, e.CxcpldTipo, e.CxcpldNumero, e.CxcpldLinea })
                    .HasName("PK_CXCPAGBATCHLD");

                entity.ToTable("CXC_PAGOSBATCH_LD");

                entity.Property(e => e.CxcpldEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CXCPLD_EMPRESA");

                entity.Property(e => e.CxcpldTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CXCPLD_TIPO");

                entity.Property(e => e.CxcpldNumero).HasColumnName("CXCPLD_NUMERO");

                entity.Property(e => e.CxcpldLinea).HasColumnName("CXCPLD_LINEA");

                entity.Property(e => e.CxcpldCodbco)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CXCPLD_CODBCO");

                entity.Property(e => e.CxcpldDocnum)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CXCPLD_DOCNUM");

                entity.Property(e => e.CxcpldFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CXCPLD_FECHA");

                entity.Property(e => e.CxcpldMonto)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("CXCPLD_MONTO");

                entity.Property(e => e.CxcpldTpago)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CXCPLD_TPAGO");
            });

            modelBuilder.Entity<CxcTablaret>(entity =>
            {
                entity.HasKey(e => new { e.CxcrEmpresa, e.CxcrTabla })
                    .HasName("PK_CXCTABLARET");

                entity.ToTable("CXC_TABLARET");

                entity.Property(e => e.CxcrEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CXCR_EMPRESA");

                entity.Property(e => e.CxcrTabla)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CXCR_TABLA");

                entity.Property(e => e.CxcrBase)
                    .HasColumnType("decimal(18, 3)")
                    .HasColumnName("CXCR_BASE");

                entity.Property(e => e.CxcrDescrip)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CXCR_DESCRIP");

                entity.Property(e => e.CxcrPorcen)
                    .HasColumnType("decimal(18, 3)")
                    .HasColumnName("CXCR_PORCEN");
            });

            modelBuilder.Entity<CxpAnticiposH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CXP_ANTICIPOS_H");

                entity.HasIndex(e => new { e.AnthEmpresa, e.AnthNumero }, "PK_ANTICIPOS_H")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.AnthBanco)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ANTH_BANCO");

                entity.Property(e => e.AnthCheque)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ANTH_CHEQUE");

                entity.Property(e => e.AnthEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ANTH_EMPRESA");

                entity.Property(e => e.AnthFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANTH_FECHA");

                entity.Property(e => e.AnthMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ANTH_MONEDA");

                entity.Property(e => e.AnthMonto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ANTH_MONTO");

                entity.Property(e => e.AnthNumero).HasColumnName("ANTH_NUMERO");

                entity.Property(e => e.AnthProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ANTH_PROVEEDOR");

                entity.Property(e => e.AnthSaldo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ANTH_SALDO");

                entity.Property(e => e.AnthStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANTH_STATUS");

                entity.Property(e => e.AnthTasacam)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ANTH_TASACAM");

                entity.Property(e => e.AnthUsuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANTH_USUARIO");

                entity.Property(e => e.AntlFechaa)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANTL_FECHAA");
            });

            modelBuilder.Entity<CxpAnticiposL>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CXP_ANTICIPOS_L");

                entity.HasIndex(e => new { e.AntlEmpresa, e.AntlNumero, e.AntlCorrel }, "PK_ANTICIPOS_L")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.AntlCorrel).HasColumnName("ANTL_CORREL");

                entity.Property(e => e.AntlDocumento)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ANTL_DOCUMENTO");

                entity.Property(e => e.AntlEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ANTL_EMPRESA");

                entity.Property(e => e.AntlFechaa)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANTL_FECHAA");

                entity.Property(e => e.AntlMonto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ANTL_MONTO");

                entity.Property(e => e.AntlNumero).HasColumnName("ANTL_NUMERO");

                entity.Property(e => e.AntlTdoc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANTL_TDOC");

                entity.Property(e => e.AntlUsuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANTL_USUARIO");
            });

            modelBuilder.Entity<CxpAntiguedad>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CXP_ANTIGUEDAD");

                entity.HasIndex(e => new { e.AnpEmpresa, e.AnpRandom, e.AnpCorrelativo }, "PK_ANTIGUEDADP1")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.AnpEmpresa, e.AnpRandom, e.AnpProveedor }, "PK_ANTIGUEDADP2")
                    .HasFillFactor(90);

                entity.Property(e => e.AnpCorrelativo).HasColumnName("ANP_CORRELATIVO");

                entity.Property(e => e.AnpDocumento)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ANP_DOCUMENTO");

                entity.Property(e => e.AnpEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ANP_EMPRESA");

                entity.Property(e => e.AnpExtra1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ANP_EXTRA1");

                entity.Property(e => e.AnpExtra2).HasColumnName("ANP_EXTRA2");

                entity.Property(e => e.AnpFechafact)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANP_FECHAFACT");

                entity.Property(e => e.AnpFechaupag)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANP_FECHAUPAG");

                entity.Property(e => e.AnpOrdenpago).HasColumnName("ANP_ORDENPAGO");

                entity.Property(e => e.AnpProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ANP_PROVEEDOR");

                entity.Property(e => e.AnpRandom).HasColumnName("ANP_RANDOM");

                entity.Property(e => e.AnpSaldo120)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("ANP_SALDO_120");

                entity.Property(e => e.AnpSaldo30)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("ANP_SALDO_30");

                entity.Property(e => e.AnpSaldo60)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("ANP_SALDO_60");

                entity.Property(e => e.AnpSaldo90)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("ANP_SALDO_90");

                entity.Property(e => e.AnpSaldoCor)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("ANP_SALDO_COR");

                entity.Property(e => e.AnpSaldoM120)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("ANP_SALDO_M120");

                entity.Property(e => e.AnpTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ANP_TIPO");
            });

            modelBuilder.Entity<CxpAutofactura>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CXP_AUTOFACTURAS");

                entity.HasIndex(e => new { e.CxpafEmpresa, e.CxpafProveedor, e.CxpafFactura, e.CxpafUsuario }, "PK_CXPAFAUTOFACTURAS")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CxpafEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CXPAF_EMPRESA");

                entity.Property(e => e.CxpafFactura)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CXPAF_FACTURA");

                entity.Property(e => e.CxpafFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CXPAF_FECHA");

                entity.Property(e => e.CxpafHora)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CXPAF_HORA");

                entity.Property(e => e.CxpafObservaciones)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CXPAF_OBSERVACIONES");

                entity.Property(e => e.CxpafProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CXPAF_PROVEEDOR");

                entity.Property(e => e.CxpafSeriefactura)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CXPAF_SERIEFACTURA");

                entity.Property(e => e.CxpafUsuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CXPAF_USUARIO");
            });

            modelBuilder.Entity<CxpContrasena>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CXP_CONTRASENAS");

                entity.HasIndex(e => new { e.CtrEmpresa, e.CtrRandom, e.CtrContrasena }, "CXP_CONTRASENA1")
                    .HasFillFactor(90);

                entity.Property(e => e.CtrContrasena).HasColumnName("CTR_CONTRASENA");

                entity.Property(e => e.CtrEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CTR_EMPRESA");

                entity.Property(e => e.CtrFactura)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CTR_FACTURA");

                entity.Property(e => e.CtrFechaf)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CTR_FECHAF");

                entity.Property(e => e.CtrFechap)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CTR_FECHAP");

                entity.Property(e => e.CtrFpago)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CTR_FPAGO");

                entity.Property(e => e.CtrFrecep)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CTR_FRECEP");

                entity.Property(e => e.CtrPago).HasColumnName("CTR_PAGO");

                entity.Property(e => e.CtrProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CTR_PROVEEDOR");

                entity.Property(e => e.CtrRandom).HasColumnName("CTR_RANDOM");

                entity.Property(e => e.CtrSaldo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CTR_SALDO");
            });

            modelBuilder.Entity<CxpFacCuentum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CXP_FAC_CUENTA");

                entity.HasIndex(e => new { e.FxcEmpresa, e.FxcRandom, e.FxcCorrelativo }, "FAC_CUENTA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.FxcEmpresa, e.FxcCuenta, e.FxcFecha, e.FxcProveedor, e.FxcFactura }, "FAC_CUENTA1")
                    .HasFillFactor(90);

                entity.Property(e => e.FxcCorrelativo).HasColumnName("FXC_CORRELATIVO");

                entity.Property(e => e.FxcCuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FXC_CUENTA");

                entity.Property(e => e.FxcDebe)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("FXC_DEBE");

                entity.Property(e => e.FxcEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("FXC_EMPRESA");

                entity.Property(e => e.FxcFactura)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FXC_FACTURA");

                entity.Property(e => e.FxcFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FXC_FECHA");

                entity.Property(e => e.FxcFpago)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FXC_FPAGO");

                entity.Property(e => e.FxcHaber)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("FXC_HABER");

                entity.Property(e => e.FxcMes).HasColumnName("FXC_MES");

                entity.Property(e => e.FxcPartida).HasColumnName("FXC_PARTIDA");

                entity.Property(e => e.FxcProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FXC_PROVEEDOR");

                entity.Property(e => e.FxcRandom).HasColumnName("FXC_RANDOM");
            });

            modelBuilder.Entity<CxpLibroiva>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CXP_LIBROIVA");

                entity.HasIndex(e => new { e.LicEmpresa, e.LicFechaDoc, e.LicFechaRec }, "PK_LIBROIVACXP")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.LicEmpresa, e.LicRandom, e.LicCorrelativo }, "PK_LIBROIVACXP1")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.LicCafecto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIC_CAFECTO");

                entity.Property(e => e.LicCnoafecto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIC_CNOAFECTO");

                entity.Property(e => e.LicCorrelativo).HasColumnName("LIC_CORRELATIVO");

                entity.Property(e => e.LicDocumento)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LIC_DOCUMENTO");

                entity.Property(e => e.LicEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("LIC_EMPRESA");

                entity.Property(e => e.LicExtra1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LIC_EXTRA1");

                entity.Property(e => e.LicExtra2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIC_EXTRA2");

                entity.Property(e => e.LicFechaDoc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("LIC_FECHA_DOC");

                entity.Property(e => e.LicFechaRec)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("LIC_FECHA_REC");

                entity.Property(e => e.LicProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("LIC_PROVEEDOR");

                entity.Property(e => e.LicRandom).HasColumnName("LIC_RANDOM");

                entity.Property(e => e.LicSafecto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIC_SAFECTO");

                entity.Property(e => e.LicSnoafecto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIC_SNOAFECTO");

                entity.Property(e => e.LicTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("LIC_TIPO");

                entity.Property(e => e.LicTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIC_TOTAL");
            });

            modelBuilder.Entity<CxpPagRealizar>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CXP_PAG_REALIZAR");

                entity.HasIndex(e => new { e.PxrEmpresa, e.PxrRandom, e.PxrCorrelativo }, "PAG_REALIZAR1")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.PxrEmpresa, e.PxrFpago, e.PxrProveedor, e.PxrFactura }, "PAG_REALIZAR2")
                    .HasFillFactor(90);

                entity.Property(e => e.PxrBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PXR_BODEGA");

                entity.Property(e => e.PxrContrasena).HasColumnName("PXR_CONTRASENA");

                entity.Property(e => e.PxrCorrelativo).HasColumnName("PXR_CORRELATIVO");

                entity.Property(e => e.PxrEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PXR_EMPRESA");

                entity.Property(e => e.PxrFactura)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PXR_FACTURA");

                entity.Property(e => e.PxrFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PXR_FECHA");

                entity.Property(e => e.PxrFpago)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PXR_FPAGO");

                entity.Property(e => e.PxrPago).HasColumnName("PXR_PAGO");

                entity.Property(e => e.PxrProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PXR_PROVEEDOR");

                entity.Property(e => e.PxrRandom).HasColumnName("PXR_RANDOM");

                entity.Property(e => e.PxrValor)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PXR_VALOR");
            });

            modelBuilder.Entity<CxpPago>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("CXP_PAGOS");

                entity.HasIndex(e => new { e.PagpEmpresa, e.PagpProveedor, e.PagpFactura, e.PagpPago }, "PK_PPAGOS")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.PagpBanco)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAGP_BANCO");

                entity.Property(e => e.PagpCheque).HasColumnName("PAGP_CHEQUE");

                entity.Property(e => e.PagpEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PAGP_EMPRESA");

                entity.Property(e => e.PagpFactura)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PAGP_FACTURA");

                entity.Property(e => e.PagpFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PAGP_FECHA");

                entity.Property(e => e.PagpFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PAGP_FECHAC");

                entity.Property(e => e.PagpFechach)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PAGP_FECHACH");

                entity.Property(e => e.PagpFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PAGP_FECHAM");

                entity.Property(e => e.PagpFlag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PAGP_FLAG");

                entity.Property(e => e.PagpPago).HasColumnName("PAGP_PAGO");

                entity.Property(e => e.PagpProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PAGP_PROVEEDOR");

                entity.Property(e => e.PagpRecibo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PAGP_RECIBO");

                entity.Property(e => e.PagpSaldo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PAGP_SALDO");

                entity.Property(e => e.PagpUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PAGP_USUARIOC");

                entity.Property(e => e.PagpUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PAGP_USUARIOM");

                entity.Property(e => e.PagpValor)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PAGP_VALOR");
            });

            modelBuilder.Entity<Depreciacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DEPRECIACION");

                entity.HasIndex(e => new { e.DepEmpresa, e.DepAno, e.DepMes, e.DepStatus }, "SK_DEPMAS")
                    .HasFillFactor(90);

                entity.Property(e => e.DepActivo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DEP_ACTIVO");

                entity.Property(e => e.DepAno).HasColumnName("DEP_ANO");

                entity.Property(e => e.DepEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DEP_EMPRESA");

                entity.Property(e => e.DepMes).HasColumnName("DEP_MES");

                entity.Property(e => e.DepMonto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DEP_MONTO");

                entity.Property(e => e.DepStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DEP_STATUS");
            });

            modelBuilder.Entity<Descuento>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DESCUENTOS");

                entity.Property(e => e.Desc2).HasColumnType("decimal(23, 8)");

                entity.Property(e => e.Desc3).HasColumnType("decimal(23, 8)");

                entity.Property(e => e.Desc4).HasColumnType("decimal(23, 8)");

                entity.Property(e => e.Desc5).HasColumnType("decimal(23, 8)");

                entity.Property(e => e.Desc6).HasColumnType("decimal(23, 8)");

                entity.Property(e => e.Empresa)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Inventario)
                    .HasMaxLength(15)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Dethold>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DETHOLD");

                entity.HasIndex(e => new { e.DethEmpresa, e.DethTienda, e.DethTerminal, e.DethNumero, e.DethLinea }, "DETHOLD1")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.DethBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("DETH_BODEGA");

                entity.Property(e => e.DethCodigoNombre)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DETH_CODIGO_NOMBRE");

                entity.Property(e => e.DethCodigoNuevo).HasColumnName("DETH_CODIGO_NUEVO");

                entity.Property(e => e.DethComision)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DETH_COMISION");

                entity.Property(e => e.DethCosto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DETH_COSTO");

                entity.Property(e => e.DethCototal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DETH_COTOTAL");

                entity.Property(e => e.DethDesc)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DETH_DESC");

                entity.Property(e => e.DethDescuen)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DETH_DESCUEN");

                entity.Property(e => e.DethEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DETH_EMPRESA");

                entity.Property(e => e.DethFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DETH_FECHA");

                entity.Property(e => e.DethGarantia)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DETH_GARANTIA");

                entity.Property(e => e.DethInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DETH_INVENTARIO");

                entity.Property(e => e.DethLinea).HasColumnName("DETH_LINEA");

                entity.Property(e => e.DethNumero).HasColumnName("DETH_NUMERO");

                entity.Property(e => e.DethPctdescuento).HasColumnName("DETH_PCTDESCUENTO");

                entity.Property(e => e.DethPresioun)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DETH_PRESIOUN");

                entity.Property(e => e.DethSerie)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("DETH_SERIE");

                entity.Property(e => e.DethSerieflag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DETH_SERIEFLAG");

                entity.Property(e => e.DethSublineainv)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("DETH_SUBLINEAINV");

                entity.Property(e => e.DethTerminal).HasColumnName("DETH_TERMINAL");

                entity.Property(e => e.DethTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("DETH_TIENDA");

                entity.Property(e => e.DethUnidad)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("DETH_UNIDAD");

                entity.Property(e => e.DethUnidades)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DETH_UNIDADES");
            });

            modelBuilder.Entity<Dificultade>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.DifCorrelativo).HasColumnName("dif_correlativo");

                entity.Property(e => e.DifDificultad)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("dif_dificultad");

                entity.Property(e => e.DifEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("dif_empresa");

                entity.Property(e => e.DifFactura).HasColumnName("dif_factura");

                entity.Property(e => e.DifFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("dif_fecha");

                entity.Property(e => e.DifObservacion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dif_observacion");

                entity.Property(e => e.DifPago).HasColumnName("dif_pago");

                entity.Property(e => e.DifSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("dif_serie");

                entity.Property(e => e.DifTerminal).HasColumnName("dif_terminal");

                entity.Property(e => e.DifTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("dif_tienda");
            });

            modelBuilder.Entity<DisValeH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DIS_VALE_H");

                entity.HasIndex(e => new { e.DvhEmpresa, e.DvhNumero }, "DIS_VALE1")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.DvhBodegaD)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("DVH_BODEGA_D");

                entity.Property(e => e.DvhBodegaO)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("DVH_BODEGA_O");

                entity.Property(e => e.DvhCentro)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("DVH_CENTRO");

                entity.Property(e => e.DvhCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DVH_CLIENTE");

                entity.Property(e => e.DvhDocumento)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DVH_DOCUMENTO");

                entity.Property(e => e.DvhEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DVH_EMPRESA");

                entity.Property(e => e.DvhFactura)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DVH_FACTURA");

                entity.Property(e => e.DvhFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DVH_FECHA");

                entity.Property(e => e.DvhFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DVH_FECHAC");

                entity.Property(e => e.DvhFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DVH_FECHAM");

                entity.Property(e => e.DvhImpresion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DVH_IMPRESION");

                entity.Property(e => e.DvhInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DVH_INVENTARIO");

                entity.Property(e => e.DvhNumero).HasColumnName("DVH_NUMERO");

                entity.Property(e => e.DvhObservacion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("DVH_OBSERVACION");

                entity.Property(e => e.DvhRequi)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DVH_REQUI");

                entity.Property(e => e.DvhSerie)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("DVH_SERIE");

                entity.Property(e => e.DvhStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DVH_STATUS");

                entity.Property(e => e.DvhTasa)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DVH_TASA");

                entity.Property(e => e.DvhUsuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DVH_USUARIO");

                entity.Property(e => e.DvhUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DVH_USUARIOC");

                entity.Property(e => e.DvhUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DVH_USUARIOM");
            });

            modelBuilder.Entity<DisValeL>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DIS_VALE_L");

                entity.HasIndex(e => new { e.DvlEmpresa, e.DvlNumero, e.DvlLinea }, "DIS_VALE2")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.DvlCantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DVL_CANTIDAD");

                entity.Property(e => e.DvlCosto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DVL_COSTO");

                entity.Property(e => e.DvlEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DVL_EMPRESA");

                entity.Property(e => e.DvlFechat)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DVL_FECHAT");

                entity.Property(e => e.DvlFechav)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DVL_FECHAV");

                entity.Property(e => e.DvlInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DVL_INVENTARIO");

                entity.Property(e => e.DvlLinea).HasColumnName("DVL_LINEA");

                entity.Property(e => e.DvlNumero).HasColumnName("DVL_NUMERO");

                entity.Property(e => e.DvlSerie)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("DVL_SERIE");

                entity.Property(e => e.DvlSerieflag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DVL_SERIEFLAG");
            });

            modelBuilder.Entity<DistArtsvenbonbol>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DIST_ARTSVENBONBOL");

                entity.HasIndex(e => new { e.BbartEmpresa, e.BbartVendedor, e.BbartLinea }, "PK_DARTSVENBONBOL")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.BbartEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("BBART_EMPRESA");

                entity.Property(e => e.BbartInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("BBART_INVENTARIO");

                entity.Property(e => e.BbartLinea).HasColumnName("BBART_LINEA");

                entity.Property(e => e.BbartVendedor).HasColumnName("BBART_VENDEDOR");
            });

            modelBuilder.Entity<DistArtsvenotrbon>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DIST_ARTSVENOTRBON");

                entity.HasIndex(e => new { e.BoartEmpresa, e.BoartVendedor }, "PK_DOTRSBONVEN")
                    .HasFillFactor(90);

                entity.Property(e => e.BoartEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("BOART_EMPRESA");

                entity.Property(e => e.BoartInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("BOART_INVENTARIO");

                entity.Property(e => e.BoartLinea).HasColumnName("BOART_LINEA");

                entity.Property(e => e.BoartVendedor).HasColumnName("BOART_VENDEDOR");
            });

            modelBuilder.Entity<DistDevolclihVw01>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("DIST_DEVOLCLIH_vw01");

                entity.Property(e => e.CliCadena)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CLI_CADENA");

                entity.Property(e => e.CliSubcadena)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CLI_SUBCADENA");

                entity.Property(e => e.DevCostotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DEV_COSTOTAL");

                entity.Property(e => e.DevUnidades)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DEV_UNIDADES");

                entity.Property(e => e.VehAniomes)
                    .HasMaxLength(6)
                    .HasColumnName("VEH_ANIOMES");

                entity.Property(e => e.VehCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("VEH_CLIENTE");

                entity.Property(e => e.VelCostotal).HasColumnName("VEL_COSTOTAL");

                entity.Property(e => e.VelInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("VEL_INVENTARIO");

                entity.Property(e => e.VelUnidades).HasColumnName("VEL_UNIDADES");
            });

            modelBuilder.Entity<DistInvartsven>(entity =>
            {
                entity.HasKey(e => new { e.DinavEmpresa, e.DinavVendedor, e.DinavLinea });

                entity.ToTable("DIST_INVARTSVEN");

                entity.Property(e => e.DinavEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DINAV_EMPRESA");

                entity.Property(e => e.DinavVendedor).HasColumnName("DINAV_VENDEDOR");

                entity.Property(e => e.DinavLinea).HasColumnName("DINAV_LINEA");

                entity.Property(e => e.DinavInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DINAV_INVENTARIO");
            });

            modelBuilder.Entity<DistInvcfg>(entity =>
            {
                entity.HasKey(e => new { e.DicfEmpresa, e.DicfUsuario });

                entity.ToTable("DIST_INVCFG");

                entity.Property(e => e.DicfEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DICF_EMPRESA");

                entity.Property(e => e.DicfUsuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DICF_USUARIO");

                entity.Property(e => e.DicfNumsemcal).HasColumnName("DICF_NUMSEMCAL");

                entity.Property(e => e.DicfPronostico)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DICF_PRONOSTICO");
            });

            modelBuilder.Entity<DistInvclicla>(entity =>
            {
                entity.HasKey(e => new { e.DclclaEmpresa, e.DclclaCodigo });

                entity.ToTable("DIST_INVCLICLA");

                entity.Property(e => e.DclclaEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DCLCLA_EMPRESA");

                entity.Property(e => e.DclclaCodigo)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DCLCLA_CODIGO");

                entity.Property(e => e.DclclaDescripcion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DCLCLA_DESCRIPCION");

                entity.Property(e => e.DclclaTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DCLCLA_TIPO");

                entity.Property(e => e.DclclaUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DCLCLA_USUARIOC");
            });

            modelBuilder.Entity<DistInvclivend>(entity =>
            {
                entity.HasKey(e => new { e.DincvEmpresa, e.DincvVendedor, e.DincvLinea });

                entity.ToTable("DIST_INVCLIVEND");

                entity.Property(e => e.DincvEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DINCV_EMPRESA");

                entity.Property(e => e.DincvVendedor).HasColumnName("DINCV_VENDEDOR");

                entity.Property(e => e.DincvLinea).HasColumnName("DINCV_LINEA");

                entity.Property(e => e.DincvClicodigo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DINCV_CLICODIGO");

                entity.Property(e => e.DincvEntdom)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DINCV_ENTDOM");

                entity.Property(e => e.DincvEntfrec)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DINCV_ENTFREC");

                entity.Property(e => e.DincvEntjue)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DINCV_ENTJUE");

                entity.Property(e => e.DincvEntlun)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DINCV_ENTLUN");

                entity.Property(e => e.DincvEntmar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DINCV_ENTMAR");

                entity.Property(e => e.DincvEntmie)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DINCV_ENTMIE");

                entity.Property(e => e.DincvEntsab)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DINCV_ENTSAB");

                entity.Property(e => e.DincvEntvie)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DINCV_ENTVIE");

                entity.Property(e => e.DincvEtiqueta)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DINCV_ETIQUETA");

                entity.Property(e => e.DincvFisicoref)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DINCV_FISICOREF");

                entity.Property(e => e.DincvMesentd1).HasColumnName("DINCV_MESENTD1");

                entity.Property(e => e.DincvMesentd2).HasColumnName("DINCV_MESENTD2");

                entity.Property(e => e.DincvMesentd3).HasColumnName("DINCV_MESENTD3");

                entity.Property(e => e.DincvMesvisd1).HasColumnName("DINCV_MESVISD1");

                entity.Property(e => e.DincvMesvisd2).HasColumnName("DINCV_MESVISD2");

                entity.Property(e => e.DincvMesvisd3).HasColumnName("DINCV_MESVISD3");

                entity.Property(e => e.DincvVisdom)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DINCV_VISDOM");

                entity.Property(e => e.DincvVisfrec)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DINCV_VISFREC");

                entity.Property(e => e.DincvVisjue)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DINCV_VISJUE");

                entity.Property(e => e.DincvVislun)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DINCV_VISLUN");

                entity.Property(e => e.DincvVismar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DINCV_VISMAR");

                entity.Property(e => e.DincvVismie)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DINCV_VISMIE");

                entity.Property(e => e.DincvVissab)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DINCV_VISSAB");

                entity.Property(e => e.DincvVisvie)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DINCV_VISVIE");
            });

            modelBuilder.Entity<DistInvclivendl>(entity =>
            {
                entity.HasKey(e => new { e.DicvlEmpresa, e.DicvlVendedor, e.DicvlClicodigo, e.DicvlFecha, e.DicvlInventario });

                entity.ToTable("DIST_INVCLIVENDL");

                entity.Property(e => e.DicvlEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DICVL_EMPRESA");

                entity.Property(e => e.DicvlVendedor).HasColumnName("DICVL_VENDEDOR");

                entity.Property(e => e.DicvlClicodigo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DICVL_CLICODIGO");

                entity.Property(e => e.DicvlFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DICVL_FECHA");

                entity.Property(e => e.DicvlInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DICVL_INVENTARIO");

                entity.Property(e => e.DicvlAutant)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DICVL_AUTANT");

                entity.Property(e => e.DicvlCamant)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DICVL_CAMANT");

                entity.Property(e => e.DicvlEntant)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DICVL_ENTANT");

                entity.Property(e => e.DicvlEntsant)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DICVL_ENTSANT");

                entity.Property(e => e.DicvlExiant)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DICVL_EXIANT");

                entity.Property(e => e.DicvlFacant)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DICVL_FACANT");

                entity.Property(e => e.DicvlHora)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DICVL_HORA");

                entity.Property(e => e.DicvlInvant)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DICVL_INVANT");

                entity.Property(e => e.DicvlInvtot)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DICVL_INVTOT");

                entity.Property(e => e.DicvlLinea).HasColumnName("DICVL_LINEA");

                entity.Property(e => e.DicvlOrdant)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DICVL_ORDANT");

                entity.Property(e => e.DicvlPedespant)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DICVL_PEDESPANT");

                entity.Property(e => e.DicvlPedrelant)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DICVL_PEDRELANT");

                entity.Property(e => e.DicvlProant)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DICVL_PROANT");

                entity.Property(e => e.DicvlSugant)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DICVL_SUGANT");

                entity.Property(e => e.DicvlUefecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DICVL_UEFECHA");

                entity.Property(e => e.DicvlUniaut)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DICVL_UNIAUT");

                entity.Property(e => e.DicvlUnibod)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DICVL_UNIBOD");

                entity.Property(e => e.DicvlUnicamdev)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DICVL_UNICAMDEV");

                entity.Property(e => e.DicvlUnient)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DICVL_UNIENT");

                entity.Property(e => e.DicvlUniexi)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DICVL_UNIEXI");

                entity.Property(e => e.DicvlUnifac)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DICVL_UNIFAC");

                entity.Property(e => e.DicvlUnigon)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DICVL_UNIGON");

                entity.Property(e => e.DicvlUniordenc)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DICVL_UNIORDENC");

                entity.Property(e => e.DicvlUnipedesp)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DICVL_UNIPEDESP");

                entity.Property(e => e.DicvlUnipedrel)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DICVL_UNIPEDREL");

                entity.Property(e => e.DicvlUniproment)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DICVL_UNIPROMENT");

                entity.Property(e => e.DicvlUnisug)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DICVL_UNISUG");

                entity.Property(e => e.DicvlUnisument)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DICVL_UNISUMENT");

                entity.Property(e => e.DicvlVenpronsem)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DICVL_VENPRONSEM");

                entity.Property(e => e.DicvlVenreal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DICVL_VENREAL");

                entity.Property(e => e.DicvlVenultsem)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DICVL_VENULTSEM");
            });

            modelBuilder.Entity<DistInvdevolclih>(entity =>
            {
                entity.HasKey(e => new { e.DindchEmpresa, e.DindchDevnumero });

                entity.ToTable("DIST_INVDEVOLCLIH");

                entity.Property(e => e.DindchEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DINDCH_EMPRESA");

                entity.Property(e => e.DindchDevnumero).HasColumnName("DINDCH_DEVNUMERO");

                entity.Property(e => e.DindchClicodigo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DINDCH_CLICODIGO");

                entity.Property(e => e.DindchFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DINDCH_FECHA");

                entity.Property(e => e.DindchFecharecla)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DINDCH_FECHARECLA");

                entity.Property(e => e.DindchHora)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DINDCH_HORA");

                entity.Property(e => e.DindchLoterecl)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DINDCH_LOTERECL");

                entity.Property(e => e.DindchNuminven).HasColumnName("DINDCH_NUMINVEN");

                entity.Property(e => e.DindchNumrecl)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("DINDCH_NUMRECL");

                entity.Property(e => e.DindchStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DINDCH_STATUS");

                entity.Property(e => e.DindchTipdev)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DINDCH_TIPDEV");

                entity.Property(e => e.DindchTipestado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DINDCH_TIPESTADO");

                entity.Property(e => e.DindchTipingreso)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DINDCH_TIPINGRESO");

                entity.Property(e => e.DindchTotal)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("DINDCH_TOTAL");

                entity.Property(e => e.DindchVendedor).HasColumnName("DINDCH_VENDEDOR");
            });

            modelBuilder.Entity<DistInvdevolclil>(entity =>
            {
                entity.HasKey(e => new { e.DindclEmpresa, e.DindclDevnumero, e.DindclLinea });

                entity.ToTable("DIST_INVDEVOLCLIL");

                entity.Property(e => e.DindclEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DINDCL_EMPRESA");

                entity.Property(e => e.DindclDevnumero).HasColumnName("DINDCL_DEVNUMERO");

                entity.Property(e => e.DindclLinea).HasColumnName("DINDCL_LINEA");

                entity.Property(e => e.DindclCantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DINDCL_CANTIDAD");

                entity.Property(e => e.DindclCosto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DINDCL_COSTO");

                entity.Property(e => e.DindclCostotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DINDCL_COSTOTAL");

                entity.Property(e => e.DindclInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DINDCL_INVENTARIO");

                entity.Property(e => e.DindclPrecioucli)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DINDCL_PRECIOUCLI");

                entity.Property(e => e.DindclPreciouven)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DINDCL_PRECIOUVEN");
            });

            modelBuilder.Entity<DistInvfiscli>(entity =>
            {
                entity.HasKey(e => new { e.DinftEmpresa, e.DinftVendedor, e.DinftClicodigo, e.DinftTipoper, e.DinftFecha, e.DinftInventario });

                entity.ToTable("DIST_INVFISCLI");

                entity.Property(e => e.DinftEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DINFT_EMPRESA");

                entity.Property(e => e.DinftVendedor).HasColumnName("DINFT_VENDEDOR");

                entity.Property(e => e.DinftClicodigo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DINFT_CLICODIGO");

                entity.Property(e => e.DinftTipoper)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DINFT_TIPOPER");

                entity.Property(e => e.DinftFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DINFT_FECHA");

                entity.Property(e => e.DinftInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DINFT_INVENTARIO");

                entity.Property(e => e.DinftBodexi)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DINFT_BODEXI");

                entity.Property(e => e.DinftGonexi)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DINFT_GONEXI");

                entity.Property(e => e.DinftHora)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DINFT_HORA");

                entity.Property(e => e.DinftPersonal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DINFT_PERSONAL");

                entity.Property(e => e.DinftTotexi)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DINFT_TOTEXI");
            });

            modelBuilder.Entity<DistInvocomclih>(entity =>
            {
                entity.HasKey(e => new { e.DinochEmpresa, e.DinochOcnumero });

                entity.ToTable("DIST_INVOCOMCLIH");

                entity.Property(e => e.DinochEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DINOCH_EMPRESA");

                entity.Property(e => e.DinochOcnumero).HasColumnName("DINOCH_OCNUMERO");

                entity.Property(e => e.DinochClicodigo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DINOCH_CLICODIGO");

                entity.Property(e => e.DinochFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DINOCH_FECHA");

                entity.Property(e => e.DinochFechaoc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DINOCH_FECHAOC");

                entity.Property(e => e.DinochHora)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DINOCH_HORA");

                entity.Property(e => e.DinochNotas)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("DINOCH_NOTAS");

                entity.Property(e => e.DinochNumoc)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("DINOCH_NUMOC");

                entity.Property(e => e.DinochStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DINOCH_STATUS");

                entity.Property(e => e.DinochTipoc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DINOCH_TIPOC");

                entity.Property(e => e.DinochTotal)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("DINOCH_TOTAL");

                entity.Property(e => e.DinochVendedor).HasColumnName("DINOCH_VENDEDOR");
            });

            modelBuilder.Entity<DistInvocomclil>(entity =>
            {
                entity.HasKey(e => new { e.DinoclEmpresa, e.DinoclOcnumero, e.DinoclLinea });

                entity.ToTable("DIST_INVOCOMCLIL");

                entity.Property(e => e.DinoclEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DINOCL_EMPRESA");

                entity.Property(e => e.DinoclOcnumero).HasColumnName("DINOCL_OCNUMERO");

                entity.Property(e => e.DinoclLinea).HasColumnName("DINOCL_LINEA");

                entity.Property(e => e.DinoclCantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DINOCL_CANTIDAD");

                entity.Property(e => e.DinoclCosto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DINOCL_COSTO");

                entity.Property(e => e.DinoclInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DINOCL_INVENTARIO");

                entity.Property(e => e.DinoclPrecioucli)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DINOCL_PRECIOUCLI");

                entity.Property(e => e.DinoclPreciouven)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DINOCL_PRECIOUVEN");
            });

            modelBuilder.Entity<DistInvpersonal>(entity =>
            {
                entity.HasKey(e => new { e.DinpEmpresa, e.DinpPersonal });

                entity.ToTable("DIST_INVPERSONAL");

                entity.Property(e => e.DinpEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DINP_EMPRESA");

                entity.Property(e => e.DinpPersonal)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DINP_PERSONAL");

                entity.Property(e => e.DinpApellidos)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("DINP_APELLIDOS");

                entity.Property(e => e.DinpNombres)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("DINP_NOMBRES");

                entity.Property(e => e.DinpTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DINP_TIPO");
            });

            modelBuilder.Entity<DistInvtabpron>(entity =>
            {
                entity.HasKey(e => new { e.DitpEmpresa, e.DitpCodigo });

                entity.ToTable("DIST_INVTABPRON");

                entity.Property(e => e.DitpEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DITP_EMPRESA");

                entity.Property(e => e.DitpCodigo)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DITP_CODIGO");

                entity.Property(e => e.DitpDescripcion)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DITP_DESCRIPCION");

                entity.Property(e => e.DitpPorc)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DITP_PORC");

                entity.Property(e => e.DitpUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DITP_USUARIOC");
            });

            modelBuilder.Entity<DistInvvend>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DIST_INVVEND");

                entity.Property(e => e.DinvEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DINV_EMPRESA");

                entity.Property(e => e.DinvLinea).HasColumnName("DINV_LINEA");

                entity.Property(e => e.DinvVendedor).HasColumnName("DINV_VENDEDOR");
            });

            modelBuilder.Entity<DistLiqcierreh>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DIST_LIQCIERREH");

                entity.HasIndex(e => new { e.DchEmpresa, e.DchLiquidac, e.DchTipoliquidac }, "PK_DCH_LIQUIDACION")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.DchDcontadogen)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_DCONTADOGEN");

                entity.Property(e => e.DchDcredito)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_DCREDITO");

                entity.Property(e => e.DchDcreditogen)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_DCREDITOGEN");

                entity.Property(e => e.DchDefectivo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_DEFECTIVO");

                entity.Property(e => e.DchDefectivogen)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_DEFECTIVOGEN");

                entity.Property(e => e.DchDfaltante)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_DFALTANTE");

                entity.Property(e => e.DchDmultas)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_DMULTAS");

                entity.Property(e => e.DchDsalacum)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_DSALACUM");

                entity.Property(e => e.DchDsalregul)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_DSALREGUL");

                entity.Property(e => e.DchDtotalventa)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_DTOTALVENTA");

                entity.Property(e => e.DchEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DCH_EMPRESA");

                entity.Property(e => e.DchLiquidac).HasColumnName("DCH_LIQUIDAC");

                entity.Property(e => e.DchSbonbolsa)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_SBONBOLSA");

                entity.Property(e => e.DchSbonbolvta)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_SBONBOLVTA");

                entity.Property(e => e.DchSboncambios)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_SBONCAMBIOS");

                entity.Property(e => e.DchSbonific)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_SBONIFIC");

                entity.Property(e => e.DchScreditos)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_SCREDITOS");

                entity.Property(e => e.DchSefectivos)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_SEFECTIVOS");

                entity.Property(e => e.DchSmultas)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_SMULTAS");

                entity.Property(e => e.DchSpbonbolsa)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_SPBONBOLSA");

                entity.Property(e => e.DchSpbonvolvta)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_SPBONVOLVTA");

                entity.Property(e => e.DchSpsuelvolvta)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_SPSUELVOLVTA");

                entity.Property(e => e.DchSsaldant)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_SSALDANT");

                entity.Property(e => e.DchSsuelvolvta)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_SSUELVOLVTA");

                entity.Property(e => e.DchStotalsemana)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_STOTALSEMANA");

                entity.Property(e => e.DchSventasgen)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_SVENTASGEN");

                entity.Property(e => e.DchTipoliquidac)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DCH_TIPOLIQUIDAC");

                entity.Property(e => e.DchUbonific)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_UBONIFIC");

                entity.Property(e => e.DchUefectivo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_UEFECTIVO");

                entity.Property(e => e.DchUmultas)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_UMULTAS");

                entity.Property(e => e.DchUremesas)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_UREMESAS");

                entity.Property(e => e.DchUsaldoant)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_USALDOANT");

                entity.Property(e => e.DchUtotalsemana)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_UTOTALSEMANA");

                entity.Property(e => e.DchUtotprecpan)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_UTOTPRECPAN");

                entity.Property(e => e.DchUtotprecpub)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCH_UTOTPRECPUB");
            });

            modelBuilder.Entity<DistLiqcierrel>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DIST_LIQCIERREL");

                entity.HasIndex(e => new { e.DclEmpresa, e.DclLiquidac, e.DclLinea }, "PK_DCL_LIQUIDACION")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.DclEmpresa, e.DclLiquidac, e.DclInventario }, "SK_DCLINVENT")
                    .HasFillFactor(90);

                entity.Property(e => e.DclDcambios)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_DCAMBIOS");

                entity.Property(e => e.DclDlleva)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_DLLEVA");

                entity.Property(e => e.DclDomingo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_DOMINGO");

                entity.Property(e => e.DclDstockact)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_DSTOCKACT");

                entity.Property(e => e.DclDstockant)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_DSTOCKANT");

                entity.Property(e => e.DclDtotcontado)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_DTOTCONTADO");

                entity.Property(e => e.DclDtotcredito)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_DTOTCREDITO");

                entity.Property(e => e.DclDvalcontado)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_DVALCONTADO");

                entity.Property(e => e.DclDvalcredito)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_DVALCREDITO");

                entity.Property(e => e.DclDventabruta)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_DVENTABRUTA");

                entity.Property(e => e.DclDvtatotefec)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_DVTATOTEFEC");

                entity.Property(e => e.DclDvtavalefec)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_DVTAVALEFEC");

                entity.Property(e => e.DclEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DCL_EMPRESA");

                entity.Property(e => e.DclInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DCL_INVENTARIO");

                entity.Property(e => e.DclInvnombre)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("DCL_INVNOMBRE");

                entity.Property(e => e.DclJueves)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_JUEVES");

                entity.Property(e => e.DclLinea).HasColumnName("DCL_LINEA");

                entity.Property(e => e.DclLiquidac).HasColumnName("DCL_LIQUIDAC");

                entity.Property(e => e.DclLunes)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_LUNES");

                entity.Property(e => e.DclMartes)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_MARTES");

                entity.Property(e => e.DclMiercoles)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_MIERCOLES");

                entity.Property(e => e.DclPreciou)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_PRECIOU");

                entity.Property(e => e.DclSabado)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_SABADO");

                entity.Property(e => e.DclSbalcamb)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_SBALCAMB");

                entity.Property(e => e.DclScambios)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_SCAMBIOS");

                entity.Property(e => e.DclSdiferencia)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_SDIFERENCIA");

                entity.Property(e => e.DclSporcamb)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_SPORCAMB");

                entity.Property(e => e.DclSstockact)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_SSTOCKACT");

                entity.Property(e => e.DclSstockant)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_SSTOCKANT");

                entity.Property(e => e.DclSvalordif)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_SVALORDIF");

                entity.Property(e => e.DclUcambios)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_UCAMBIOS");

                entity.Property(e => e.DclUprepanad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_UPREPANAD");

                entity.Property(e => e.DclUvalor)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_UVALOR");

                entity.Property(e => e.DclUvalpanad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_UVALPANAD");

                entity.Property(e => e.DclUventa)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_UVENTA");

                entity.Property(e => e.DclViernes)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DCL_VIERNES");
            });

            modelBuilder.Entity<DistLiqenvio>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DIST_LIQENVIOS");

                entity.HasIndex(e => new { e.DenvEmpresa, e.DenvLiquidac, e.DenvLinea }, "PK_DENVIOS")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.DenvEmision)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DENV_EMISION");

                entity.Property(e => e.DenvEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DENV_EMPRESA");

                entity.Property(e => e.DenvEnvio).HasColumnName("DENV_ENVIO");

                entity.Property(e => e.DenvLinea).HasColumnName("DENV_LINEA");

                entity.Property(e => e.DenvLiquidac).HasColumnName("DENV_LIQUIDAC");

                entity.Property(e => e.DenvSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DENV_SERIE");

                entity.Property(e => e.DenvTerminal).HasColumnName("DENV_TERMINAL");

                entity.Property(e => e.DenvTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("DENV_TIENDA");

                entity.Property(e => e.DenvTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DENV_TIPO");

                entity.Property(e => e.DenvTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DENV_TOTAL");
            });

            modelBuilder.Entity<DistLiqmulta>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DIST_LIQMULTAS");

                entity.HasIndex(e => new { e.DmulEmpresa, e.DmulLiquidac, e.DmulLinea }, "PK_LIQMULTAS")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.DmulConcepto)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("DMUL_CONCEPTO");

                entity.Property(e => e.DmulEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DMUL_EMPRESA");

                entity.Property(e => e.DmulLinea).HasColumnName("DMUL_LINEA");

                entity.Property(e => e.DmulLiquidac).HasColumnName("DMUL_LIQUIDAC");

                entity.Property(e => e.DmulValor)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DMUL_VALOR");
            });

            modelBuilder.Entity<DistLiqpago>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DIST_LIQPAGOS");

                entity.HasIndex(e => new { e.DpagEmpresa, e.DpagLiquidac, e.DpagLinea }, "PK_LIQPAGOS")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.DpagEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DPAG_EMPRESA");

                entity.Property(e => e.DpagFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DPAG_FECHA");

                entity.Property(e => e.DpagLinea).HasColumnName("DPAG_LINEA");

                entity.Property(e => e.DpagLiquidac).HasColumnName("DPAG_LIQUIDAC");

                entity.Property(e => e.DpagRecibo).HasColumnName("DPAG_RECIBO");

                entity.Property(e => e.DpagSerie)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("DPAG_SERIE");

                entity.Property(e => e.DpagValor)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DPAG_VALOR");
            });

            modelBuilder.Entity<DistLiqprecio>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DIST_LIQPRECIOS");

                entity.HasIndex(e => new { e.DpreEmpresa, e.DpreLiquidac, e.DpreLinea, e.DpreInventario }, "PK_LIQPRECIOS")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.DpreEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DPRE_EMPRESA");

                entity.Property(e => e.DpreInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DPRE_INVENTARIO");

                entity.Property(e => e.DpreLinea).HasColumnName("DPRE_LINEA");

                entity.Property(e => e.DpreLiquidac).HasColumnName("DPRE_LIQUIDAC");

                entity.Property(e => e.DprePrecio1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DPRE_PRECIO1");

                entity.Property(e => e.DprePrecio2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DPRE_PRECIO2");

                entity.Property(e => e.DprePrecio3)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DPRE_PRECIO3");

                entity.Property(e => e.DprePrecio4)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DPRE_PRECIO4");

                entity.Property(e => e.DprePrecio5)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DPRE_PRECIO5");

                entity.Property(e => e.DprePrecio6)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DPRE_PRECIO6");
            });

            modelBuilder.Entity<DistLiqregreso>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DIST_LIQREGRESO");

                entity.HasIndex(e => new { e.DrelEmpresa, e.DrelLiquidac, e.DrelLinea }, "PK_LIQREGRESO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.DrelCambios)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DREL_CAMBIOS");

                entity.Property(e => e.DrelEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DREL_EMPRESA");

                entity.Property(e => e.DrelInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DREL_INVENTARIO");

                entity.Property(e => e.DrelLinea).HasColumnName("DREL_LINEA");

                entity.Property(e => e.DrelLiquidac).HasColumnName("DREL_LIQUIDAC");

                entity.Property(e => e.DrelPreciou)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DREL_PRECIOU");

                entity.Property(e => e.DrelTipdev)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DREL_TIPDEV");

                entity.Property(e => e.DrelTipestado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DREL_TIPESTADO");

                entity.Property(e => e.DrelUnidades)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DREL_UNIDADES");
            });

            modelBuilder.Entity<DistLiquidacH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DIST_LIQUIDAC_H");

                entity.HasIndex(e => new { e.DlqhEmpresa, e.DlqhLiquidac }, "PK_LIQUIDH")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.DlqhCobrTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DLQH_COBR_TOTAL");

                entity.Property(e => e.DlqhCredTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DLQH_CRED_TOTAL");

                entity.Property(e => e.DlqhEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DLQH_EMPRESA");

                entity.Property(e => e.DlqhExisCamb)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DLQH_EXIS_CAMB");

                entity.Property(e => e.DlqhExisCant)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DLQH_EXIS_CANT");

                entity.Property(e => e.DlqhFcierre)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DLQH_FCIERRE");

                entity.Property(e => e.DlqhFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DLQH_FECHA");

                entity.Property(e => e.DlqhFecmaxvales)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DLQH_FECMAXVALES");

                entity.Property(e => e.DlqhLiquidac).HasColumnName("DLQH_LIQUIDAC");

                entity.Property(e => e.DlqhMultas)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DLQH_MULTAS");

                entity.Property(e => e.DlqhObservac1)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("DLQH_OBSERVAC1");

                entity.Property(e => e.DlqhObservac2)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("DLQH_OBSERVAC2");

                entity.Property(e => e.DlqhSaldo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DLQH_SALDO");

                entity.Property(e => e.DlqhSaldoant)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DLQH_SALDOANT");

                entity.Property(e => e.DlqhStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DLQH_STATUS");

                entity.Property(e => e.DlqhTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DLQH_TOTAL");

                entity.Property(e => e.DlqhUltliquidac).HasColumnName("DLQH_ULTLIQUIDAC");

                entity.Property(e => e.DlqhVendedor).HasColumnName("DLQH_VENDEDOR");
            });

            modelBuilder.Entity<DistLiqvalesh>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DIST_LIQVALESH");

                entity.HasIndex(e => new { e.DvhEmpresa, e.DvhNumero, e.DvhVendedor }, "DLIQVALEH")
                    .IsUnique()
                    .IsClustered()
                    .HasFillFactor(90);

                entity.Property(e => e.DvhBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("DVH_BODEGA");

                entity.Property(e => e.DvhDocserie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DVH_DOCSERIE");

                entity.Property(e => e.DvhDocumento).HasColumnName("DVH_DOCUMENTO");

                entity.Property(e => e.DvhEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DVH_EMPRESA");

                entity.Property(e => e.DvhFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DVH_FECHA");

                entity.Property(e => e.DvhImpresion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DVH_IMPRESION");

                entity.Property(e => e.DvhLiquidac).HasColumnName("DVH_LIQUIDAC");

                entity.Property(e => e.DvhNumero).HasColumnName("DVH_NUMERO");

                entity.Property(e => e.DvhObservacion)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("DVH_OBSERVACION");

                entity.Property(e => e.DvhStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DVH_STATUS");

                entity.Property(e => e.DvhTipodoc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DVH_TIPODOC");

                entity.Property(e => e.DvhVendedor).HasColumnName("DVH_VENDEDOR");
            });

            modelBuilder.Entity<DistLiqvaleshExtra1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DIST_LIQVALESH_EXTRA1");

                entity.Property(e => e.DvhxEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DVHX_EMPRESA");

                entity.Property(e => e.DvhxFactura).HasColumnName("DVHX_FACTURA");

                entity.Property(e => e.DvhxFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DVHX_FECHA");

                entity.Property(e => e.DvhxNumero).HasColumnName("DVHX_NUMERO");

                entity.Property(e => e.DvhxTerminal).HasColumnName("DVHX_TERMINAL");

                entity.Property(e => e.DvhxTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("DVHX_TIENDA");

                entity.Property(e => e.DvhxTotal)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("DVHX_TOTAL");
            });

            modelBuilder.Entity<DistLiqvalesl>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DIST_LIQVALESL");

                entity.HasIndex(e => new { e.DvlEmpresa, e.DvlNumero, e.DvlLinea }, "DLIQVALEL")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.DvlCantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DVL_CANTIDAD");

                entity.Property(e => e.DvlEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DVL_EMPRESA");

                entity.Property(e => e.DvlInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DVL_INVENTARIO");

                entity.Property(e => e.DvlLinea).HasColumnName("DVL_LINEA");

                entity.Property(e => e.DvlNombre)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("DVL_NOMBRE");

                entity.Property(e => e.DvlNumero).HasColumnName("DVL_NUMERO");

                entity.Property(e => e.DvlPreciou)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DVL_PRECIOU");
            });

            modelBuilder.Entity<DistReportesg>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DIST_REPORTESG");

                entity.Property(e => e.RpgCambios)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("RPG_CAMBIOS");

                entity.Property(e => e.RpgCorrelLiq).HasColumnName("RPG_CORREL_LIQ");

                entity.Property(e => e.RpgEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("RPG_EMPRESA");

                entity.Property(e => e.RpgFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("RPG_FECHA");

                entity.Property(e => e.RpgInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("RPG_INVENTARIO");

                entity.Property(e => e.RpgLiquidacion).HasColumnName("RPG_LIQUIDACION");

                entity.Property(e => e.RpgSistema)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("RPG_SISTEMA");

                entity.Property(e => e.RpgTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("RPG_TIPO");

                entity.Property(e => e.RpgUnidades)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("RPG_UNIDADES");

                entity.Property(e => e.RpgValor)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("RPG_VALOR");

                entity.Property(e => e.RpgVendedor).HasColumnName("RPG_VENDEDOR");
            });

            modelBuilder.Entity<DistTemporal>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DIST_TEMPORAL");

                entity.Property(e => e.DtpCorrelativo).HasColumnName("DTP_CORRELATIVO");

                entity.Property(e => e.DtpInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DTP_INVENTARIO");

                entity.Property(e => e.DtpRegreso)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DTP_REGRESO");

                entity.Property(e => e.DtpSalida)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DTP_SALIDA");
            });

            modelBuilder.Entity<DoccontableFecae>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("DOCCONTABLE_FECAE");

                entity.Property(e => e.DfeCae)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("DFE_CAE");

                entity.Property(e => e.DfeEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DFE_EMPRESA");

                entity.Property(e => e.DfeFactura)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DFE_FACTURA");

                entity.Property(e => e.DfeFechacfe)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DFE_FECHACFE");

                entity.Property(e => e.DfeFechaemi)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DFE_FECHAEMI");

                entity.Property(e => e.DfeGeneraiva)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DFE_GENERAIVA");

                entity.Property(e => e.DfeHoracfe)
                    .HasColumnType("datetime")
                    .HasColumnName("DFE_HORACFE");

                entity.Property(e => e.DfeHoraemi)
                    .HasColumnType("datetime")
                    .HasColumnName("DFE_HORAEMI");

                entity.Property(e => e.DfeNumero).HasColumnName("DFE_NUMERO");

                entity.Property(e => e.DfePrec5dec)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DFE_PREC5DEC");

                entity.Property(e => e.DfeProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("DFE_PROVEEDOR");

                entity.Property(e => e.DfeSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DFE_SERIE");

                entity.Property(e => e.DfeTerminal).HasColumnName("DFE_TERMINAL");

                entity.Property(e => e.DfeTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("DFE_TIENDA");

                entity.Property(e => e.DfeTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DFE_TIPO");
            });

            modelBuilder.Entity<Empresa>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("EMPRESA");

                entity.HasIndex(e => e.EmpCodigo, "PK_EMPRESA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.EmpAgenRetiva)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EMP_AGEN_RETIVA");

                entity.Property(e => e.EmpBaseRetiva)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("EMP_BASE_RETIVA");

                entity.Property(e => e.EmpCodigo)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("EMP_CODIGO");

                entity.Property(e => e.EmpConta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EMP_CONTA");

                entity.Property(e => e.EmpIva)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("EMP_IVA");

                entity.Property(e => e.EmpNoNit)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("EMP_NO_NIT");

                entity.Property(e => e.EmpNoPatronal)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("EMP_NO_PATRONAL");

                entity.Property(e => e.EmpNombre)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("EMP_NOMBRE");

                entity.Property(e => e.EmpPorcRetiva)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("EMP_PORC_RETIVA");
            });

            modelBuilder.Entity<EmpresaExtra2>(entity =>
            {
                entity.HasKey(e => e.ExtEmpresa);

                entity.ToTable("EMPRESA_EXTRA2");

                entity.Property(e => e.ExtEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("EXT_EMPRESA");

                entity.Property(e => e.ExtDirfiscal)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasColumnName("EXT_DIRFISCAL");

                entity.Property(e => e.ExtFeDepto)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXT_FE_DEPTO");

                entity.Property(e => e.ExtFeLeguaje)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("EXT_FE_LEGUAJE");

                entity.Property(e => e.ExtFeMunicipio)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXT_FE_MUNICIPIO");

                entity.Property(e => e.ExtFePais)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("EXT_FE_PAIS");

                entity.Property(e => e.ExtNoNit)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("EXT_NO_NIT");

                entity.Property(e => e.ExtNoPatronal)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("EXT_NO_PATRONAL");

                entity.Property(e => e.ExtPersonali1)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasColumnName("EXT_PERSONALI1");

                entity.Property(e => e.ExtPersonali2)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasColumnName("EXT_PERSONALI2");

                entity.Property(e => e.ExtPersonali3)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasColumnName("EXT_PERSONALI3");

                entity.Property(e => e.ExtPersonali4)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasColumnName("EXT_PERSONALI4");

                entity.Property(e => e.ExtPersonali5)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasColumnName("EXT_PERSONALI5");

                entity.Property(e => e.ExtPersonali6)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasColumnName("EXT_PERSONALI6");

                entity.Property(e => e.ExtRazonsocial)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasColumnName("EXT_RAZONSOCIAL");
            });

            modelBuilder.Entity<Ensamble>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ENSAMBLES");

                entity.HasIndex(e => new { e.EnsEmpresa, e.EnsInventario, e.EnsInvEnsamble }, "PK_ENSAMBLES")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.EnsCantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ENS_CANTIDAD");

                entity.Property(e => e.EnsDescripcion)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("ENS_DESCRIPCION");

                entity.Property(e => e.EnsEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ENS_EMPRESA");

                entity.Property(e => e.EnsInvEnsamble)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("ENS_INV_ENSAMBLE");

                entity.Property(e => e.EnsInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("ENS_INVENTARIO");
            });

            modelBuilder.Entity<EnsamblesClaCliente>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ENSAMBLES_CLA_CLIENTE");

                entity.HasIndex(e => new { e.EnccEmpresa, e.EnccInventario, e.EnccClasifica, e.EnccFechai, e.EnccFechaf, e.EnccInvEnsamble }, "PK_ENSAMBLES_CLASIFICA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.EnccCantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ENCC_CANTIDAD");

                entity.Property(e => e.EnccClasifica)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ENCC_CLASIFICA");

                entity.Property(e => e.EnccDescripcion)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("ENCC_DESCRIPCION");

                entity.Property(e => e.EnccEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ENCC_EMPRESA");

                entity.Property(e => e.EnccFechaf)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ENCC_FECHAF");

                entity.Property(e => e.EnccFechai)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ENCC_FECHAI");

                entity.Property(e => e.EnccInvEnsamble)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("ENCC_INV_ENSAMBLE");

                entity.Property(e => e.EnccInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("ENCC_INVENTARIO");

                entity.Property(e => e.EnccPreciov)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ENCC_PRECIOV");
            });

            modelBuilder.Entity<EnsamblesCliente>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ENSAMBLES_CLIENTE");

                entity.HasIndex(e => new { e.EnscEmpresa, e.EnscInventario, e.EnscCliente, e.EnscFechai, e.EnscFechaf, e.EnscInvEnsamble }, "PK_ENSAMBLES")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.EnscCantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ENSC_CANTIDAD");

                entity.Property(e => e.EnscCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ENSC_CLIENTE");

                entity.Property(e => e.EnscDescripcion)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("ENSC_DESCRIPCION");

                entity.Property(e => e.EnscEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ENSC_EMPRESA");

                entity.Property(e => e.EnscFechaf)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ENSC_FECHAF");

                entity.Property(e => e.EnscFechai)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ENSC_FECHAI");

                entity.Property(e => e.EnscInvEnsamble)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("ENSC_INV_ENSAMBLE");

                entity.Property(e => e.EnscInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("ENSC_INVENTARIO");

                entity.Property(e => e.EnscPreciov)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ENSC_PRECIOV");
            });

            modelBuilder.Entity<EnsamblesVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("ensambles_vw");

                entity.Property(e => e.EnsCantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ens_cantidad");

                entity.Property(e => e.EnsCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ens_cliente");

                entity.Property(e => e.EnsEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ens_empresa");

                entity.Property(e => e.EnsFechaf)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ens_fechaf");

                entity.Property(e => e.EnsFechai)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ens_fechai");

                entity.Property(e => e.EnsInvEnsamble)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("ens_inv_ensamble");

                entity.Property(e => e.EnsInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("ens_inventario");

                entity.Property(e => e.Preciov)
                    .HasColumnType("numeric(18, 6)")
                    .HasColumnName("preciov");

                entity.Property(e => e.Tipo).HasColumnName("tipo");
            });

            modelBuilder.Entity<EnvDocumento>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ENV_DOCUMENTOS");

                entity.Property(e => e.EnvCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ENV_CLIENTE");

                entity.Property(e => e.EnvEmision)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ENV_EMISION");

                entity.Property(e => e.EnvEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ENV_EMPRESA");

                entity.Property(e => e.EnvEnvio).HasColumnName("ENV_ENVIO");

                entity.Property(e => e.EnvFechadoc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ENV_FECHADOC");

                entity.Property(e => e.EnvLinea).HasColumnName("ENV_LINEA");

                entity.Property(e => e.EnvLiquidac).HasColumnName("ENV_LIQUIDAC");

                entity.Property(e => e.EnvNumero).HasColumnName("ENV_NUMERO");

                entity.Property(e => e.EnvRandom).HasColumnName("ENV_RANDOM");

                entity.Property(e => e.EnvSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ENV_SERIE");

                entity.Property(e => e.EnvTerminal).HasColumnName("ENV_TERMINAL");

                entity.Property(e => e.EnvTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ENV_TIENDA");

                entity.Property(e => e.EnvTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ENV_TIPO");

                entity.Property(e => e.EnvTipopago)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ENV_TIPOPAGO");

                entity.Property(e => e.EnvTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ENV_TOTAL");

                entity.Property(e => e.EnvValor)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ENV_VALOR");
            });

            modelBuilder.Entity<EstaCxc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESTA_CXC");

                entity.HasIndex(e => new { e.CxceEmpresa, e.CxceCliente, e.CxceAno, e.CxceMes }, "PK_ESTA_CXC")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.CxceEmpresa, e.CxceAno, e.CxceMes }, "SK_ESTACXC")
                    .HasFillFactor(90);

                entity.Property(e => e.CxceAbonos)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CXCE_ABONOS");

                entity.Property(e => e.CxceAno).HasColumnName("CXCE_ANO");

                entity.Property(e => e.CxceCargos)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CXCE_CARGOS");

                entity.Property(e => e.CxceCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CXCE_CLIENTE");

                entity.Property(e => e.CxceEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CXCE_EMPRESA");

                entity.Property(e => e.CxceInicio)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CXCE_INICIO");

                entity.Property(e => e.CxceMes).HasColumnName("CXCE_MES");
            });

            modelBuilder.Entity<EstaCxp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESTA_CXP");

                entity.HasIndex(e => new { e.CxpeEmpresa, e.CxpeProveedor, e.CxpeAno, e.CxpeMes }, "PK_ESTA_CXP")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.CxpeEmpresa, e.CxpeAno, e.CxpeMes }, "SK_ESTACXP")
                    .HasFillFactor(90);

                entity.Property(e => e.CxpeAbonos)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CXPE_ABONOS");

                entity.Property(e => e.CxpeAno).HasColumnName("CXPE_ANO");

                entity.Property(e => e.CxpeCargos)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CXPE_CARGOS");

                entity.Property(e => e.CxpeEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CXPE_EMPRESA");

                entity.Property(e => e.CxpeInicio)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CXPE_INICIO");

                entity.Property(e => e.CxpeMes).HasColumnName("CXPE_MES");

                entity.Property(e => e.CxpeProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CXPE_PROVEEDOR");
            });

            modelBuilder.Entity<Estadistica>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ESTADISTICA");

                entity.HasIndex(e => new { e.EstEmpresa, e.EstInventario, e.EstAno, e.EstMes }, "ESTINDX")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.EstEmpresa, e.EstAno, e.EstMes }, "SK_ESTAAM")
                    .HasFillFactor(90);

                entity.Property(e => e.EstAno).HasColumnName("EST_ANO");

                entity.Property(e => e.EstCompuni)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("EST_COMPUNI");

                entity.Property(e => e.EstCompval)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("EST_COMPVAL");

                entity.Property(e => e.EstEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("EST_EMPRESA");

                entity.Property(e => e.EstInicio)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("EST_INICIO");

                entity.Property(e => e.EstInicioval)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("EST_INICIOVAL");

                entity.Property(e => e.EstInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("EST_INVENTARIO");

                entity.Property(e => e.EstMes).HasColumnName("EST_MES");

                entity.Property(e => e.EstMoveuni)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("EST_MOVEUNI");

                entity.Property(e => e.EstMoveval)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("EST_MOVEVAL");

                entity.Property(e => e.EstMovsuni)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("EST_MOVSUNI");

                entity.Property(e => e.EstMovsval)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("EST_MOVSVAL");

                entity.Property(e => e.EstVentuni)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("EST_VENTUNI");

                entity.Property(e => e.EstVentval)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("EST_VENTVAL");
            });

            modelBuilder.Entity<FacAnulacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FAC_ANULACION");

                entity.HasIndex(e => new { e.AnulEmpresa, e.AnulCorrel }, "PK_ANULACION")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.AnulCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ANUL_CLIENTE");

                entity.Property(e => e.AnulCorrel).HasColumnName("ANUL_CORREL");

                entity.Property(e => e.AnulEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ANUL_EMPRESA");

                entity.Property(e => e.AnulFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ANUL_FECHA");

                entity.Property(e => e.AnulMonto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ANUL_MONTO");

                entity.Property(e => e.AnulMotivo)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ANUL_MOTIVO");

                entity.Property(e => e.AnulNumero).HasColumnName("ANUL_NUMERO");

                entity.Property(e => e.AnulSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ANUL_SERIE");

                entity.Property(e => e.AnulTerminal).HasColumnName("ANUL_TERMINAL");

                entity.Property(e => e.AnulTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ANUL_TIENDA");

                entity.Property(e => e.AnulTipo)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ANUL_TIPO");

                entity.Property(e => e.AnulVendedor).HasColumnName("ANUL_VENDEDOR");
            });

            modelBuilder.Entity<FacBackorder>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FAC_BACKORDER");

                entity.HasIndex(e => new { e.BakoEmpresa, e.BakoNumero }, "PK_BACKORD")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.BakoBodegad)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("BAKO_BODEGAD");

                entity.Property(e => e.BakoCantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("BAKO_CANTIDAD");

                entity.Property(e => e.BakoCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("BAKO_CLIENTE");

                entity.Property(e => e.BakoCotizacion).HasColumnName("BAKO_COTIZACION");

                entity.Property(e => e.BakoEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("BAKO_EMPRESA");

                entity.Property(e => e.BakoEnvio).HasColumnName("BAKO_ENVIO");

                entity.Property(e => e.BakoFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BAKO_FECHAC");

                entity.Property(e => e.BakoFellegada)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("BAKO_FELLEGADA");

                entity.Property(e => e.BakoInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("BAKO_INVENTARIO");

                entity.Property(e => e.BakoNumero).HasColumnName("BAKO_NUMERO");

                entity.Property(e => e.BakoOrden).HasColumnName("BAKO_ORDEN");

                entity.Property(e => e.BakoOrdencli)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("BAKO_ORDENCLI");

                entity.Property(e => e.BakoPreciou)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("BAKO_PRECIOU");

                entity.Property(e => e.BakoVendedor).HasColumnName("BAKO_VENDEDOR");
            });

            modelBuilder.Entity<FacBackordersH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FAC_BACKORDERS_H");

                entity.HasIndex(e => new { e.FbohEmpresa, e.FbohNumero }, "PK_FACBACKORDERSH")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.FbohCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FBOH_CLIENTE");

                entity.Property(e => e.FbohConcred)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FBOH_CONCRED");

                entity.Property(e => e.FbohEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("FBOH_EMPRESA");

                entity.Property(e => e.FbohEnvio).HasColumnName("FBOH_ENVIO");

                entity.Property(e => e.FbohFactura).HasColumnName("FBOH_FACTURA");

                entity.Property(e => e.FbohFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FBOH_FECHA");

                entity.Property(e => e.FbohHora)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("FBOH_HORA");

                entity.Property(e => e.FbohMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FBOH_MONEDA");

                entity.Property(e => e.FbohNumero).HasColumnName("FBOH_NUMERO");

                entity.Property(e => e.FbohObserva)
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasColumnName("FBOH_OBSERVA");

                entity.Property(e => e.FbohOrdenc).HasColumnName("FBOH_ORDENC");

                entity.Property(e => e.FbohSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("FBOH_SERIE");

                entity.Property(e => e.FbohTasacam)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("FBOH_TASACAM");

                entity.Property(e => e.FbohTerminal).HasColumnName("FBOH_TERMINAL");

                entity.Property(e => e.FbohTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FBOH_TIENDA");

                entity.Property(e => e.FbohUsuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FBOH_USUARIO");

                entity.Property(e => e.FbohVendedor).HasColumnName("FBOH_VENDEDOR");
            });

            modelBuilder.Entity<FacBackordersL>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FAC_BACKORDERS_L");

                entity.HasIndex(e => new { e.FbolEmpresa, e.FbolNumero, e.FbolLinea }, "PK_FACBACKORDERSL")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.FbolBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FBOL_BODEGA");

                entity.Property(e => e.FbolCostotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("FBOL_COSTOTAL");

                entity.Property(e => e.FbolEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("FBOL_EMPRESA");

                entity.Property(e => e.FbolFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FBOL_FECHA");

                entity.Property(e => e.FbolFechai)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FBOL_FECHAI");

                entity.Property(e => e.FbolFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FBOL_FECHAM");

                entity.Property(e => e.FbolInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FBOL_INVENTARIO");

                entity.Property(e => e.FbolLinea).HasColumnName("FBOL_LINEA");

                entity.Property(e => e.FbolNumero).HasColumnName("FBOL_NUMERO");

                entity.Property(e => e.FbolPrecioun)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("FBOL_PRECIOUN");

                entity.Property(e => e.FbolSaldouni)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("FBOL_SALDOUNI");

                entity.Property(e => e.FbolSerieflag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FBOL_SERIEFLAG");

                entity.Property(e => e.FbolStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FBOL_STATUS");

                entity.Property(e => e.FbolSublineainv)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("FBOL_SUBLINEAINV");

                entity.Property(e => e.FbolUnidad)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("FBOL_UNIDAD");

                entity.Property(e => e.FbolUnidades)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("FBOL_UNIDADES");

                entity.Property(e => e.FbolUsuarioi)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FBOL_USUARIOI");

                entity.Property(e => e.FbolUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FBOL_USUARIOM");
            });

            modelBuilder.Entity<FacCobrador>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FAC_COBRADOR");

                entity.HasIndex(e => new { e.FcobEmpresa, e.FcobCobrador }, "PK_COBRADOR")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.FcobApellidos)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("FCOB_APELLIDOS");

                entity.Property(e => e.FcobArea)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("FCOB_AREA");

                entity.Property(e => e.FcobCobrador)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("FCOB_COBRADOR");

                entity.Property(e => e.FcobEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("FCOB_EMPRESA");

                entity.Property(e => e.FcobNombres)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("FCOB_NOMBRES");

                entity.Property(e => e.FcobTelefono)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FCOB_TELEFONO");
            });

            modelBuilder.Entity<FacComisione>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FAC_COMISIONE");

                entity.HasIndex(e => new { e.FceEmpresa, e.FceVendedor, e.FceFecha, e.FcePctgana }, "PK_COMISIONE")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.FceEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("FCE_EMPRESA");

                entity.Property(e => e.FceFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FCE_FECHA");

                entity.Property(e => e.FcePctgana)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("FCE_PCTGANA");

                entity.Property(e => e.FceVendedor).HasColumnName("FCE_VENDEDOR");
            });

            modelBuilder.Entity<FacComisionr>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FAC_COMISIONR");

                entity.Property(e => e.FcrCostofin)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("FCR_COSTOFIN");

                entity.Property(e => e.FcrCostoini)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("FCR_COSTOINI");

                entity.Property(e => e.FcrEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("FCR_EMPRESA");

                entity.Property(e => e.FcrPctgana)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("FCR_PCTGANA");
            });

            modelBuilder.Entity<FacCotCliente>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FAC_COT_CLIENTE");

                entity.HasIndex(e => new { e.FccEmpresa, e.FccCotizacion }, "COT_CLIENTE")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.FccCotizacion).HasColumnName("FCC_COTIZACION");

                entity.Property(e => e.FccDireccion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("FCC_DIRECCION");

                entity.Property(e => e.FccDireccion1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("FCC_DIRECCION1");

                entity.Property(e => e.FccEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("FCC_EMPRESA");

                entity.Property(e => e.FccNit)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FCC_NIT");

                entity.Property(e => e.FccNombre)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("FCC_NOMBRE");

                entity.Property(e => e.FccTelefono)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FCC_TELEFONO");
            });

            modelBuilder.Entity<FacCotizaExtrah>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FAC_COTIZA_EXTRAH");

                entity.HasIndex(e => new { e.CotxhEmpresa, e.CotxhCotizacion }, "PK_FACCOTEXTH1")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CotxhCotizacion).HasColumnName("COTXH_COTIZACION");

                entity.Property(e => e.CotxhEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("COTXH_EMPRESA");

                entity.Property(e => e.CotxhExtra1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COTXH_EXTRA1");

                entity.Property(e => e.CotxhExtra2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COTXH_EXTRA2");

                entity.Property(e => e.CotxhExtra3)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COTXH_EXTRA3");

                entity.Property(e => e.CotxhExtra4).HasColumnName("COTXH_EXTRA4");

                entity.Property(e => e.CotxhExtra5).HasColumnName("COTXH_EXTRA5");

                entity.Property(e => e.CotxhExtra6).HasColumnName("COTXH_EXTRA6");

                entity.Property(e => e.CotxhObservaciones1)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("COTXH_OBSERVACIONES1");

                entity.Property(e => e.CotxhObservaciones2)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("COTXH_OBSERVACIONES2");

                entity.Property(e => e.CotxhObservaciones3)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("COTXH_OBSERVACIONES3");

                entity.Property(e => e.CotxhObservaciones4)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("COTXH_OBSERVACIONES4");
            });

            modelBuilder.Entity<FacCotizaExtral>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FAC_COTIZA_EXTRAL");

                entity.HasIndex(e => new { e.CotxlEmpresa, e.CotxlCotizacion, e.CotxlLinea }, "FACCOTIZAXL")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CotxlBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("COTXL_BODEGA");

                entity.Property(e => e.CotxlCotizacion).HasColumnName("COTXL_COTIZACION");

                entity.Property(e => e.CotxlEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("COTXL_EMPRESA");

                entity.Property(e => e.CotxlExtra1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COTXL_EXTRA1");

                entity.Property(e => e.CotxlExtra2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COTXL_EXTRA2");

                entity.Property(e => e.CotxlExtra3)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("COTXL_EXTRA3");

                entity.Property(e => e.CotxlExtra4).HasColumnName("COTXL_EXTRA4");

                entity.Property(e => e.CotxlExtra5).HasColumnName("COTXL_EXTRA5");

                entity.Property(e => e.CotxlExtra6).HasColumnName("COTXL_EXTRA6");

                entity.Property(e => e.CotxlLinea).HasColumnName("COTXL_LINEA");
            });

            modelBuilder.Entity<FacCotizaH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FAC_COTIZA_H");

                entity.HasIndex(e => new { e.CotfhEmpresa, e.CotfhCotizacion }, "PK_FACCOT_H")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CotfhAproxfecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COTFH_APROXFECHA");

                entity.Property(e => e.CotfhAtencion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("COTFH_ATENCION");

                entity.Property(e => e.CotfhCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("COTFH_CLIENTE");

                entity.Property(e => e.CotfhCostoenvio)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("COTFH_COSTOENVIO");

                entity.Property(e => e.CotfhCotizacion).HasColumnName("COTFH_COTIZACION");

                entity.Property(e => e.CotfhEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("COTFH_EMPRESA");

                entity.Property(e => e.CotfhFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COTFH_FECHA");

                entity.Property(e => e.CotfhFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COTFH_FECHAC");

                entity.Property(e => e.CotfhFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COTFH_FECHAM");

                entity.Property(e => e.CotfhFechaven)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COTFH_FECHAVEN");

                entity.Property(e => e.CotfhImpresion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COTFH_IMPRESION");

                entity.Property(e => e.CotfhNota)
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasColumnName("COTFH_NOTA");

                entity.Property(e => e.CotfhStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COTFH_STATUS");

                entity.Property(e => e.CotfhTipopago)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COTFH_TIPOPAGO");

                entity.Property(e => e.CotfhTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("COTFH_TOTAL");

                entity.Property(e => e.CotfhTotalart)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("COTFH_TOTALART");

                entity.Property(e => e.CotfhUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COTFH_USUARIOC");

                entity.Property(e => e.CotfhUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COTFH_USUARIOM");

                entity.Property(e => e.CotfhVendedor).HasColumnName("COTFH_VENDEDOR");
            });

            modelBuilder.Entity<FacCotizaL>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FAC_COTIZA_L");

                entity.HasIndex(e => new { e.CotflEmpresa, e.CotflCotizacion, e.CotflLinea }, "PK_FACCOTL")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CotflCantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("COTFL_CANTIDAD");

                entity.Property(e => e.CotflCotizacion).HasColumnName("COTFL_COTIZACION");

                entity.Property(e => e.CotflDescuento)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("COTFL_DESCUENTO");

                entity.Property(e => e.CotflEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("COTFL_EMPRESA");

                entity.Property(e => e.CotflInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("COTFL_INVENTARIO");

                entity.Property(e => e.CotflLinea).HasColumnName("COTFL_LINEA");

                entity.Property(e => e.CotflNivel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("COTFL_NIVEL");

                entity.Property(e => e.CotflPreciou)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("COTFL_PRECIOU");
            });

            modelBuilder.Entity<FacCotizalDescrip>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FAC_COTIZAL_DESCRIP");

                entity.HasIndex(e => new { e.CdesEmpresa, e.CdesCotizacion, e.CdesLinea }, "PKFCOTL_DES")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CdesCotizacion).HasColumnName("CDES_COTIZACION");

                entity.Property(e => e.CdesDescrip1)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CDES_DESCRIP1");

                entity.Property(e => e.CdesDescrip10)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CDES_DESCRIP10");

                entity.Property(e => e.CdesDescrip2)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CDES_DESCRIP2");

                entity.Property(e => e.CdesDescrip3)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CDES_DESCRIP3");

                entity.Property(e => e.CdesDescrip4)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CDES_DESCRIP4");

                entity.Property(e => e.CdesDescrip5)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CDES_DESCRIP5");

                entity.Property(e => e.CdesDescrip6)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CDES_DESCRIP6");

                entity.Property(e => e.CdesDescrip7)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CDES_DESCRIP7");

                entity.Property(e => e.CdesDescrip8)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CDES_DESCRIP8");

                entity.Property(e => e.CdesDescrip9)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CDES_DESCRIP9");

                entity.Property(e => e.CdesEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CDES_EMPRESA");

                entity.Property(e => e.CdesExtra1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CDES_EXTRA1");

                entity.Property(e => e.CdesExtra2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CDES_EXTRA2");

                entity.Property(e => e.CdesExtra3)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CDES_EXTRA3");

                entity.Property(e => e.CdesExtra4)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CDES_EXTRA4");

                entity.Property(e => e.CdesExtra5)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CDES_EXTRA5");

                entity.Property(e => e.CdesExtra6)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CDES_EXTRA6");

                entity.Property(e => e.CdesExtra7)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CDES_EXTRA7");

                entity.Property(e => e.CdesExtra8)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CDES_EXTRA8");

                entity.Property(e => e.CdesLinea).HasColumnName("CDES_LINEA");
            });

            modelBuilder.Entity<FacDespachobkorder>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FAC_DESPACHOBKORDER");

                entity.HasIndex(e => new { e.FdboEmpresa, e.FdboVehTienda, e.FdboVehTerminal, e.FdboVehSerie, e.FdboVehFactura, e.FdboVelLinea, e.FdboLinea }, "PK_DESPACHOBKORDER")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.FdboCantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("FDBO_CANTIDAD");

                entity.Property(e => e.FdboEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("FDBO_EMPRESA");

                entity.Property(e => e.FdboFbohNumero).HasColumnName("FDBO_FBOH_NUMERO");

                entity.Property(e => e.FdboFbolBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FDBO_FBOL_BODEGA");

                entity.Property(e => e.FdboFbolInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FDBO_FBOL_INVENTARIO");

                entity.Property(e => e.FdboFbolLinea).HasColumnName("FDBO_FBOL_LINEA");

                entity.Property(e => e.FdboFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FDBO_FECHA");

                entity.Property(e => e.FdboFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FDBO_FECHAC");

                entity.Property(e => e.FdboLinea).HasColumnName("FDBO_LINEA");

                entity.Property(e => e.FdboPreciou)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("FDBO_PRECIOU");

                entity.Property(e => e.FdboStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FDBO_STATUS");

                entity.Property(e => e.FdboUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FDBO_USUARIOC");

                entity.Property(e => e.FdboVehFactura).HasColumnName("FDBO_VEH_FACTURA");

                entity.Property(e => e.FdboVehNumero).HasColumnName("FDBO_VEH_NUMERO");

                entity.Property(e => e.FdboVehSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("FDBO_VEH_SERIE");

                entity.Property(e => e.FdboVehTerminal).HasColumnName("FDBO_VEH_TERMINAL");

                entity.Property(e => e.FdboVehTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FDBO_VEH_TIENDA");

                entity.Property(e => e.FdboVelLinea).HasColumnName("FDBO_VEL_LINEA");
            });

            modelBuilder.Entity<FacEnviosH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FAC_ENVIOS_H");

                entity.HasIndex(e => new { e.EnvfhEmpresa, e.EnvfhEnvio }, "PK_ENVIOSH")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.EnvfhEmpresa, e.EnvfhSerie, e.EnvfhFactura, e.EnvfhEnvio }, "SK_FACTU")
                    .HasFillFactor(90);

                entity.Property(e => e.EnvfhBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_BODEGA");

                entity.Property(e => e.EnvfhCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_CLIENTE");

                entity.Property(e => e.EnvfhCondiciones)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_CONDICIONES");

                entity.Property(e => e.EnvfhCotizacion).HasColumnName("ENVFH_COTIZACION");

                entity.Property(e => e.EnvfhDircobro1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_DIRCOBRO1");

                entity.Property(e => e.EnvfhDircobro2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_DIRCOBRO2");

                entity.Property(e => e.EnvfhDirdesp1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_DIRDESP1");

                entity.Property(e => e.EnvfhDirdesp2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_DIRDESP2");

                entity.Property(e => e.EnvfhDirdesp3)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_DIRDESP3");

                entity.Property(e => e.EnvfhDocpago)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_DOCPAGO");

                entity.Property(e => e.EnvfhEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_EMPRESA");

                entity.Property(e => e.EnvfhEnvio).HasColumnName("ENVFH_ENVIO");

                entity.Property(e => e.EnvfhEnviovia)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_ENVIOVIA");

                entity.Property(e => e.EnvfhEnvparcial)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_ENVPARCIAL");

                entity.Property(e => e.EnvfhFactura).HasColumnName("ENVFH_FACTURA");

                entity.Property(e => e.EnvfhFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_FECHAC");

                entity.Property(e => e.EnvfhFechaenv)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_FECHAENV");

                entity.Property(e => e.EnvfhFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_FECHAM");

                entity.Property(e => e.EnvfhFesolcli)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_FESOLCLI");

                entity.Property(e => e.EnvfhImpresion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_IMPRESION");

                entity.Property(e => e.EnvfhInstrucciocc)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_INSTRUCCIOCC");

                entity.Property(e => e.EnvfhNit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_NIT");

                entity.Property(e => e.EnvfhNombre)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_NOMBRE");

                entity.Property(e => e.EnvfhNumero)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_NUMERO");

                entity.Property(e => e.EnvfhObserva)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_OBSERVA");

                entity.Property(e => e.EnvfhOccliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_OCCLIENTE");

                entity.Property(e => e.EnvfhOrdenc).HasColumnName("ENVFH_ORDENC");

                entity.Property(e => e.EnvfhPoliza)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_POLIZA");

                entity.Property(e => e.EnvfhSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_SERIE");

                entity.Property(e => e.EnvfhStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_STATUS");

                entity.Property(e => e.EnvfhTipoflete)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_TIPOFLETE");

                entity.Property(e => e.EnvfhTipopago)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_TIPOPAGO");

                entity.Property(e => e.EnvfhTotalenv)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ENVFH_TOTALENV");

                entity.Property(e => e.EnvfhUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_USUARIOC");

                entity.Property(e => e.EnvfhUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ENVFH_USUARIOM");

                entity.Property(e => e.EnvfhVendedor).HasColumnName("ENVFH_VENDEDOR");
            });

            modelBuilder.Entity<FacEnviosL>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FAC_ENVIOS_L");

                entity.HasIndex(e => new { e.EnvflEmpresa, e.EnvflEnvio, e.EnvflLinea }, "PK_ENVIOSL")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.EnvflArticulo)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("ENVFL_ARTICULO");

                entity.Property(e => e.EnvflCantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ENVFL_CANTIDAD");

                entity.Property(e => e.EnvflDescuento)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ENVFL_DESCUENTO");

                entity.Property(e => e.EnvflEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ENVFL_EMPRESA");

                entity.Property(e => e.EnvflEnvio).HasColumnName("ENVFL_ENVIO");

                entity.Property(e => e.EnvflLinea).HasColumnName("ENVFL_LINEA");

                entity.Property(e => e.EnvflNivel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ENVFL_NIVEL");

                entity.Property(e => e.EnvflPreciou)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ENVFL_PRECIOU");

                entity.Property(e => e.EnvflSerie)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ENVFL_SERIE");

                entity.Property(e => e.EnvflSerieflag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ENVFL_SERIEFLAG");
            });

            modelBuilder.Entity<FacHistItem>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FAC_HIST_ITEM");

                entity.HasIndex(e => new { e.ItehEmpresa, e.ItehCorrelativo }, "PK_HISITEM")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.ItehCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ITEH_CLIENTE");

                entity.Property(e => e.ItehCondicion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ITEH_CONDICION");

                entity.Property(e => e.ItehCorrelativo).HasColumnName("ITEH_CORRELATIVO");

                entity.Property(e => e.ItehDescripcion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ITEH_DESCRIPCION");

                entity.Property(e => e.ItehDireccion)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ITEH_DIRECCION");

                entity.Property(e => e.ItehEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ITEH_EMPRESA");

                entity.Property(e => e.ItehFactura)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ITEH_FACTURA");

                entity.Property(e => e.ItehFax)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ITEH_FAX");

                entity.Property(e => e.ItehFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ITEH_FECHA");

                entity.Property(e => e.ItehFechaact)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ITEH_FECHAACT");

                entity.Property(e => e.ItehFechafac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ITEH_FECHAFAC");

                entity.Property(e => e.ItehInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("ITEH_INVENTARIO");

                entity.Property(e => e.ItehMesesgar).HasColumnName("ITEH_MESESGAR");

                entity.Property(e => e.ItehNombre)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ITEH_NOMBRE");

                entity.Property(e => e.ItehSerie)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ITEH_SERIE");

                entity.Property(e => e.ItehSerieflag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ITEH_SERIEFLAG");

                entity.Property(e => e.ItehStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ITEH_STATUS");

                entity.Property(e => e.ItehTelefono)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ITEH_TELEFONO");

                entity.Property(e => e.ItehTipocliente)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ITEH_TIPOCLIENTE");

                entity.Property(e => e.ItehTipoventa)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ITEH_TIPOVENTA");

                entity.Property(e => e.ItehVendedor).HasColumnName("ITEH_VENDEDOR");

                entity.Property(e => e.ItehVnombre)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ITEH_VNOMBRE");
            });

            modelBuilder.Entity<FacOrdencH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FAC_ORDENC_H");

                entity.HasIndex(e => new { e.OrdfhEmpresa, e.OrdfhOrdenc }, "PK_FACORDENH")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.OrdfhCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ORDFH_CLIENTE");

                entity.Property(e => e.OrdfhCondiciones)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ORDFH_CONDICIONES");

                entity.Property(e => e.OrdfhCotizacion).HasColumnName("ORDFH_COTIZACION");

                entity.Property(e => e.OrdfhDircobro1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ORDFH_DIRCOBRO1");

                entity.Property(e => e.OrdfhDircobro2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ORDFH_DIRCOBRO2");

                entity.Property(e => e.OrdfhDirdesp1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ORDFH_DIRDESP1");

                entity.Property(e => e.OrdfhDirdesp2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ORDFH_DIRDESP2");

                entity.Property(e => e.OrdfhDirdesp3)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ORDFH_DIRDESP3");

                entity.Property(e => e.OrdfhDocpago)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ORDFH_DOCPAGO");

                entity.Property(e => e.OrdfhEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ORDFH_EMPRESA");

                entity.Property(e => e.OrdfhEnviovia)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ORDFH_ENVIOVIA");

                entity.Property(e => e.OrdfhEnvparcial)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ORDFH_ENVPARCIAL");

                entity.Property(e => e.OrdfhFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDFH_FECHA");

                entity.Property(e => e.OrdfhFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDFH_FECHAC");

                entity.Property(e => e.OrdfhFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDFH_FECHAM");

                entity.Property(e => e.OrdfhFechasoli)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDFH_FECHASOLI");

                entity.Property(e => e.OrdfhFereqent)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDFH_FEREQENT");

                entity.Property(e => e.OrdfhImpresion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ORDFH_IMPRESION");

                entity.Property(e => e.OrdfhInstruccio6o)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ORDFH_INSTRUCCIO6O");

                entity.Property(e => e.OrdfhOrdenc).HasColumnName("ORDFH_ORDENC");

                entity.Property(e => e.OrdfhOrdencli)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ORDFH_ORDENCLI");

                entity.Property(e => e.OrdfhPoliza)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ORDFH_POLIZA");

                entity.Property(e => e.OrdfhStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ORDFH_STATUS");

                entity.Property(e => e.OrdfhTipoflete)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ORDFH_TIPOFLETE");

                entity.Property(e => e.OrdfhTipopago)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ORDFH_TIPOPAGO");

                entity.Property(e => e.OrdfhTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ORDFH_TOTAL");

                entity.Property(e => e.OrdfhUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDFH_USUARIOC");

                entity.Property(e => e.OrdfhUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDFH_USUARIOM");

                entity.Property(e => e.OrdfhVendedor).HasColumnName("ORDFH_VENDEDOR");
            });

            modelBuilder.Entity<FacOrdencL>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FAC_ORDENC_L");

                entity.HasIndex(e => new { e.OrdflEmpresa, e.OrdflOrdenc, e.OrdflLinea }, "PK_ORDENCL")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.OrdflCantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ORDFL_CANTIDAD");

                entity.Property(e => e.OrdflDescuenpct)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ORDFL_DESCUENPCT");

                entity.Property(e => e.OrdflDescuento)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ORDFL_DESCUENTO");

                entity.Property(e => e.OrdflEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ORDFL_EMPRESA");

                entity.Property(e => e.OrdflInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("ORDFL_INVENTARIO");

                entity.Property(e => e.OrdflLinea).HasColumnName("ORDFL_LINEA");

                entity.Property(e => e.OrdflOrdenc).HasColumnName("ORDFL_ORDENC");

                entity.Property(e => e.OrdflPreciou)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ORDFL_PRECIOU");
            });

            modelBuilder.Entity<FacPago>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FAC_PAGOS");

                entity.HasIndex(e => new { e.PagfEmpresa, e.PagfCliente, e.PagfFactura, e.PagfPago }, "PK_FPAGOS")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.PagfBanco)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAGF_BANCO");

                entity.Property(e => e.PagfCheque)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PAGF_CHEQUE");

                entity.Property(e => e.PagfCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PAGF_CLIENTE");

                entity.Property(e => e.PagfEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PAGF_EMPRESA");

                entity.Property(e => e.PagfFactura)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PAGF_FACTURA");

                entity.Property(e => e.PagfFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PAGF_FECHA");

                entity.Property(e => e.PagfFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PAGF_FECHAC");

                entity.Property(e => e.PagfFechach)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PAGF_FECHACH");

                entity.Property(e => e.PagfFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PAGF_FECHAM");

                entity.Property(e => e.PagfFlag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PAGF_FLAG");

                entity.Property(e => e.PagfPago).HasColumnName("PAGF_PAGO");

                entity.Property(e => e.PagfRecargos)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PAGF_RECARGOS");

                entity.Property(e => e.PagfRecibo).HasColumnName("PAGF_RECIBO");

                entity.Property(e => e.PagfSaldo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PAGF_SALDO");

                entity.Property(e => e.PagfSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("pagf_serie");

                entity.Property(e => e.PagfTerminal).HasColumnName("pagf_terminal");

                entity.Property(e => e.PagfTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("pagf_tienda");

                entity.Property(e => e.PagfUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PAGF_USUARIOC");

                entity.Property(e => e.PagfUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PAGF_USUARIOM");

                entity.Property(e => e.PagfValor)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PAGF_VALOR");
            });

            modelBuilder.Entity<FacRentabilidad>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FAC_RENTABILIDAD");

                entity.HasIndex(e => new { e.RenEmpresa, e.RenRandom, e.RenCorrel }, "PK_RENTABILIDAD_FAC")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.RenCaja).HasColumnName("REN_CAJA");

                entity.Property(e => e.RenCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REN_CLIENTE");

                entity.Property(e => e.RenCorrel).HasColumnName("REN_CORREL");

                entity.Property(e => e.RenCostoVenta)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("REN_COSTO_VENTA");

                entity.Property(e => e.RenDescuentos)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("REN_DESCUENTOS");

                entity.Property(e => e.RenEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("REN_EMPRESA");

                entity.Property(e => e.RenExtra1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REN_EXTRA1");

                entity.Property(e => e.RenExtra2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REN_EXTRA2");

                entity.Property(e => e.RenExtra3)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("REN_EXTRA3");

                entity.Property(e => e.RenExtra4)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("REN_EXTRA4");

                entity.Property(e => e.RenFactura).HasColumnName("REN_FACTURA");

                entity.Property(e => e.RenFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("REN_FECHA");

                entity.Property(e => e.RenInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("REN_INVENTARIO");

                entity.Property(e => e.RenLinea)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REN_LINEA");

                entity.Property(e => e.RenNumero).HasColumnName("REN_NUMERO");

                entity.Property(e => e.RenPrcUtil)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("REN_PRC_UTIL");

                entity.Property(e => e.RenRandom).HasColumnName("REN_RANDOM");

                entity.Property(e => e.RenSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("REN_SERIE");

                entity.Property(e => e.RenStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("REN_STATUS");

                entity.Property(e => e.RenSublinea)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("REN_SUBLINEA");

                entity.Property(e => e.RenTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REN_TIENDA");

                entity.Property(e => e.RenTotalVenta)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("REN_TOTAL_VENTA");

                entity.Property(e => e.RenUtilidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("REN_UTILIDAD");

                entity.Property(e => e.RenVendedor).HasColumnName("REN_VENDEDOR");

                entity.Property(e => e.RenVentaNeta)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("REN_VENTA_NETA");
            });

            modelBuilder.Entity<FacturasXFecha>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("facturas_x_fecha");

                entity.HasIndex(e => new { e.FacxEmpresa, e.FacxCorrelativo }, "tmpfactfecha")
                    .HasFillFactor(90);

                entity.Property(e => e.FacxCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("facx_cliente");

                entity.Property(e => e.FacxCorrelativo).HasColumnName("facx_correlativo");

                entity.Property(e => e.FacxEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("facx_empresa");

                entity.Property(e => e.FacxFactura)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("facx_factura");

                entity.Property(e => e.FacxFecemi)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("facx_fecemi");

                entity.Property(e => e.FacxFecven)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("facx_fecven");

                entity.Property(e => e.FacxFpago)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("facx_fpago");

                entity.Property(e => e.FacxNomcli)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("facx_nomcli");

                entity.Property(e => e.FacxSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("facx_serie");

                entity.Property(e => e.FacxStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("facx_status");

                entity.Property(e => e.FacxTerminal).HasColumnName("facx_terminal");

                entity.Property(e => e.FacxTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("facx_tienda");

                entity.Property(e => e.FacxValor)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("facx_valor");
            });

            modelBuilder.Entity<FelLlafe>(entity =>
            {
                entity.HasKey(e => new { e.FlaEmpresa, e.FlaCodigo });

                entity.ToTable("FEL_LLAVES");

                entity.Property(e => e.FlaEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("FLA_EMPRESA");

                entity.Property(e => e.FlaCodigo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FLA_CODIGO");

                entity.Property(e => e.FlaCertificador)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("FLA_CERTIFICADOR");

                entity.Property(e => e.FlaCorreo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("FLA_CORREO");

                entity.Property(e => e.FlaLlave)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("FLA_LLAVE");

                entity.Property(e => e.FlaNit)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("FLA_NIT");

                entity.Property(e => e.FlaPrefijo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("FLA_PREFIJO");

                entity.Property(e => e.FlaToken)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("FLA_TOKEN");

                entity.Property(e => e.FlaUsuario)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("FLA_USUARIO");
            });

            modelBuilder.Entity<Feriado>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FERIADOS");

                entity.HasIndex(e => new { e.TfEmpresa, e.TfFecha, e.TfDia, e.TfSemana }, "PK_FERIADOS")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.TfDia).HasColumnName("TF_DIA");

                entity.Property(e => e.TfEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TF_EMPRESA");

                entity.Property(e => e.TfFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TF_FECHA");

                entity.Property(e => e.TfHorasExtras).HasColumnName("TF_HORAS_EXTRAS");

                entity.Property(e => e.TfSemana).HasColumnName("TF_SEMANA");
            });

            modelBuilder.Entity<FiadoresCliente>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FIADORES_CLIENTES");

                entity.HasIndex(e => new { e.FiaEmpresa, e.FiaTienda, e.FiaTerminal, e.FiaSerie, e.FiaFactura }, "IDXFIADORES")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.FiaCedFia1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FIA_CED_FIA1");

                entity.Property(e => e.FiaCedFia2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FIA_CED_FIA2");

                entity.Property(e => e.FiaCedFia3)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("FIA_CED_FIA3");

                entity.Property(e => e.FiaCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FIA_CLIENTE");

                entity.Property(e => e.FiaDirFia1)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("FIA_DIR_FIA1");

                entity.Property(e => e.FiaDirFia2)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("FIA_DIR_FIA2");

                entity.Property(e => e.FiaDirFia3)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("FIA_DIR_FIA3");

                entity.Property(e => e.FiaDirempF1)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("FIA_DIREMP_F1");

                entity.Property(e => e.FiaDirempF2)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("FIA_DIREMP_F2");

                entity.Property(e => e.FiaDirempF3)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("FIA_DIREMP_F3");

                entity.Property(e => e.FiaEmpFia1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FIA_EMP_FIA1");

                entity.Property(e => e.FiaEmpFia2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FIA_EMP_FIA2");

                entity.Property(e => e.FiaEmpFia3)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("FIA_EMP_FIA3");

                entity.Property(e => e.FiaEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("FIA_EMPRESA");

                entity.Property(e => e.FiaFactura).HasColumnName("FIA_FACTURA");

                entity.Property(e => e.FiaFiador1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("FIA_FIADOR1");

                entity.Property(e => e.FiaFiador2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("FIA_FIADOR2");

                entity.Property(e => e.FiaFiador3)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("FIA_FIADOR3");

                entity.Property(e => e.FiaFnacFia1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FIA_FNAC_FIA1");

                entity.Property(e => e.FiaFnacFia2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FIA_FNAC_FIA2");

                entity.Property(e => e.FiaFnacFia3)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FIA_FNAC_FIA3");

                entity.Property(e => e.FiaSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("FIA_SERIE");

                entity.Property(e => e.FiaSueFia1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("FIA_SUE_FIA1");

                entity.Property(e => e.FiaSueFia2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("FIA_SUE_FIA2");

                entity.Property(e => e.FiaSueFia3)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("FIA_SUE_FIA3");

                entity.Property(e => e.FiaTelFia1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FIA_TEL_FIA1");

                entity.Property(e => e.FiaTelFia2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FIA_TEL_FIA2");

                entity.Property(e => e.FiaTelFia3)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FIA_TEL_FIA3");

                entity.Property(e => e.FiaTelempF1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FIA_TELEMP_F1");

                entity.Property(e => e.FiaTelempF2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FIA_TELEMP_F2");

                entity.Property(e => e.FiaTelempF3)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("FIA_TELEMP_F3");

                entity.Property(e => e.FiaTerminal).HasColumnName("FIA_TERMINAL");

                entity.Property(e => e.FiaTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FIA_TIENDA");
            });

            modelBuilder.Entity<Fisico>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FISICO");

                entity.HasIndex(e => new { e.FisEmpresa, e.FisBodega, e.FisPagina, e.FisLinea }, "PK_FISICO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.FisEmpresa, e.FisActflg }, "SK_FISACT")
                    .HasFillFactor(90);

                entity.Property(e => e.FisActflg)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FIS_ACTFLG");

                entity.Property(e => e.FisBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FIS_BODEGA");

                entity.Property(e => e.FisEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("FIS_EMPRESA");

                entity.Property(e => e.FisFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FIS_FECHA");

                entity.Property(e => e.FisFevenci)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FIS_FEVENCI");

                entity.Property(e => e.FisInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FIS_INVENTARIO");

                entity.Property(e => e.FisLinea).HasColumnName("FIS_LINEA");

                entity.Property(e => e.FisLocaliza)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FIS_LOCALIZA");

                entity.Property(e => e.FisPagina).HasColumnName("FIS_PAGINA");

                entity.Property(e => e.FisSerie)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("FIS_SERIE");

                entity.Property(e => e.FisSerieflag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FIS_SERIEFLAG");

                entity.Property(e => e.FisUniexi)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("FIS_UNIEXI");
            });

            modelBuilder.Entity<FormatAjuc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("FORMAT_AJUC");

                entity.HasIndex(e => new { e.FajAbono, e.FajCredito, e.FajDebito, e.FajDetabono, e.FajDetcredito, e.FajDevabono, e.FajDevcredito, e.FajEmpresa, e.FajPuerto }, "PK_FORMAT_AJUC")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.FajAbono)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FAJ_ABONO");

                entity.Property(e => e.FajCargo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FAJ_CARGO");

                entity.Property(e => e.FajCredito)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FAJ_CREDITO");

                entity.Property(e => e.FajDebito)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FAJ_DEBITO");

                entity.Property(e => e.FajDetabono)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FAJ_DETABONO");

                entity.Property(e => e.FajDetcredito)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FAJ_DETCREDITO");

                entity.Property(e => e.FajDevabono)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FAJ_DEVABONO");

                entity.Property(e => e.FajDevcredito)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FAJ_DEVCREDITO");

                entity.Property(e => e.FajEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("FAJ_EMPRESA");

                entity.Property(e => e.FajPuerto)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FAJ_PUERTO");
            });

            modelBuilder.Entity<Generale>(entity =>
            {
                entity.HasKey(e => new { e.GenEmpresa, e.GenTienda, e.GenTerminal });

                entity.ToTable("GENERALES");

                entity.HasIndex(e => new { e.GenEmpresa, e.GenTienda, e.GenTerminal }, "PK_MENSAJES")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.GenEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("GEN_EMPRESA");

                entity.Property(e => e.GenTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GEN_TIENDA");

                entity.Property(e => e.GenTerminal).HasColumnName("GEN_TERMINAL");

                entity.Property(e => e.GenActiva)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GEN_ACTIVA");

                entity.Property(e => e.GenBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GEN_BODEGA");

                entity.Property(e => e.GenCheque1)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("GEN_CHEQUE1");

                entity.Property(e => e.GenCheque2)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("GEN_CHEQUE2");

                entity.Property(e => e.GenCheque3)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("GEN_CHEQUE3");

                entity.Property(e => e.GenCheque4)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("GEN_CHEQUE4");

                entity.Property(e => e.GenDescripcion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("GEN_DESCRIPCION");

                entity.Property(e => e.GenDireccion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("GEN_DIRECCION");

                entity.Property(e => e.GenEncabezado1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("GEN_ENCABEZADO1");

                entity.Property(e => e.GenEncabezado2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("GEN_ENCABEZADO2");

                entity.Property(e => e.GenEncabezado3)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("GEN_ENCABEZADO3");

                entity.Property(e => e.GenEncabezado4)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("GEN_ENCABEZADO4");

                entity.Property(e => e.GenEncabezado5)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("GEN_ENCABEZADO5");

                entity.Property(e => e.GenFormato).HasColumnName("GEN_FORMATO");

                entity.Property(e => e.GenMensajes1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("GEN_MENSAJES1");

                entity.Property(e => e.GenMensajes2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("GEN_MENSAJES2");

                entity.Property(e => e.GenMensajes3)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("GEN_MENSAJES3");

                entity.Property(e => e.GenPuerto)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("GEN_PUERTO");

                entity.Property(e => e.GenSerie)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("GEN_SERIE");
            });

            modelBuilder.Entity<GeneralesExtra1>(entity =>
            {
                entity.HasKey(e => new { e.Gx1Empresa, e.Gx1Tienda, e.Gx1Terminal });

                entity.ToTable("GENERALES_EXTRA1");

                entity.Property(e => e.Gx1Empresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("GX1_EMPRESA");

                entity.Property(e => e.Gx1Tienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("GX1_TIENDA");

                entity.Property(e => e.Gx1Terminal).HasColumnName("GX1_TERMINAL");

                entity.Property(e => e.Gx1Autoriza)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("GX1_AUTORIZA");

                entity.Property(e => e.Gx1Descrip)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("GX1_DESCRIP");

                entity.Property(e => e.Gx1Estado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GX1_ESTADO");

                entity.Property(e => e.Gx1Fauto)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("GX1_FAUTO");

                entity.Property(e => e.Gx1Femision)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("GX1_FEMISION");

                entity.Property(e => e.Gx1Generaiva)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GX1_GENERAIVA");

                entity.Property(e => e.Gx1Nfactura).HasColumnName("GX1_NFACTURA");

                entity.Property(e => e.Gx1Rango1).HasColumnName("GX1_RANGO1");

                entity.Property(e => e.Gx1Rango2).HasColumnName("GX1_RANGO2");

                entity.Property(e => e.Gx1Serie)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("GX1_SERIE");

                entity.Property(e => e.Gx1Status)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("GX1_STATUS");

                entity.Property(e => e.Gx1Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GX1_TIPO");

                entity.Property(e => e.Gx1Tipodoc)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("GX1_TIPODOC");
            });

            modelBuilder.Entity<Hedhold>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HEDHOLD");

                entity.HasIndex(e => new { e.HedhEmpresa, e.HedhTienda, e.HedhTerminal, e.HedhNumero }, "HEDHOLD1")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.HedhActcxc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("HEDH_ACTCXC");

                entity.Property(e => e.HedhArea)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("HEDH_AREA");

                entity.Property(e => e.HedhBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("HEDH_BODEGA");

                entity.Property(e => e.HedhCentro)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("HEDH_CENTRO");

                entity.Property(e => e.HedhChtj1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("HEDH_CHTJ1");

                entity.Property(e => e.HedhChtj2)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("HEDH_CHTJ2");

                entity.Property(e => e.HedhCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("HEDH_CLIENTE");

                entity.Property(e => e.HedhCobrador)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("HEDH_COBRADOR");

                entity.Property(e => e.HedhConcred1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("HEDH_CONCRED1");

                entity.Property(e => e.HedhConcred2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("HEDH_CONCRED2");

                entity.Property(e => e.HedhCortesia)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("HEDH_CORTESIA");

                entity.Property(e => e.HedhDescuen)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("HEDH_DESCUEN");

                entity.Property(e => e.HedhDiasp).HasColumnName("HEDH_DIASP");

                entity.Property(e => e.HedhDocnum1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("HEDH_DOCNUM1");

                entity.Property(e => e.HedhDocnum2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("HEDH_DOCNUM2");

                entity.Property(e => e.HedhEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("HEDH_EMPRESA");

                entity.Property(e => e.HedhEnvio).HasColumnName("HEDH_ENVIO");

                entity.Property(e => e.HedhFactura).HasColumnName("HEDH_FACTURA");

                entity.Property(e => e.HedhFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("HEDH_FECHA");

                entity.Property(e => e.HedhFven)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("HEDH_FVEN");

                entity.Property(e => e.HedhHora)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("HEDH_HORA");

                entity.Property(e => e.HedhIntereses)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("HEDH_INTERESES");

                entity.Property(e => e.HedhIva)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("HEDH_IVA");

                entity.Property(e => e.HedhMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("HEDH_MONEDA");

                entity.Property(e => e.HedhMonto1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("HEDH_MONTO1");

                entity.Property(e => e.HedhMonto2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("HEDH_MONTO2");

                entity.Property(e => e.HedhNombre)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("HEDH_NOMBRE");

                entity.Property(e => e.HedhNumauto1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("HEDH_NUMAUTO1");

                entity.Property(e => e.HedhNumauto2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("HEDH_NUMAUTO2");

                entity.Property(e => e.HedhNumero).HasColumnName("HEDH_NUMERO");

                entity.Property(e => e.HedhNumtar1)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("HEDH_NUMTAR1");

                entity.Property(e => e.HedhNumtar2)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("HEDH_NUMTAR2");

                entity.Property(e => e.HedhOrdenc).HasColumnName("HEDH_ORDENC");

                entity.Property(e => e.HedhOtros)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("HEDH_OTROS");

                entity.Property(e => e.HedhRuta)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("HEDH_RUTA");

                entity.Property(e => e.HedhSaldo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("HEDH_SALDO");

                entity.Property(e => e.HedhStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("HEDH_STATUS");

                entity.Property(e => e.HedhTasa)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("HEDH_TASA");

                entity.Property(e => e.HedhTasacam)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("HEDH_TASACAM");

                entity.Property(e => e.HedhTelefono)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("HEDH_TELEFONO");

                entity.Property(e => e.HedhTerminal).HasColumnName("HEDH_TERMINAL");

                entity.Property(e => e.HedhTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("HEDH_TIENDA");

                entity.Property(e => e.HedhTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("HEDH_TOTAL");

                entity.Property(e => e.HedhTransaccion)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("HEDH_TRANSACCION");

                entity.Property(e => e.HedhUsuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("HEDH_USUARIO");

                entity.Property(e => e.HedhValor)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("HEDH_VALOR");

                entity.Property(e => e.HedhVendedor).HasColumnName("HEDH_VENDEDOR");
            });

            modelBuilder.Entity<HistCli>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HIST_CLI");

                entity.HasIndex(e => new { e.HicEmpresa, e.HicCliente, e.HicVehNumero }, "HSTCLI")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.HicEmpresa, e.HicVehFecha }, "SK_HISTC1")
                    .HasFillFactor(90);

                entity.Property(e => e.HicCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("HIC_CLIENTE");

                entity.Property(e => e.HicEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("HIC_EMPRESA");

                entity.Property(e => e.HicVehDescuen)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("HIC_VEH_DESCUEN");

                entity.Property(e => e.HicVehFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("HIC_VEH_FECHA");

                entity.Property(e => e.HicVehNumero)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("HIC_VEH_NUMERO");

                entity.Property(e => e.HicVehTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("HIC_VEH_TOTAL");
            });

            modelBuilder.Entity<HistPro>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HIST_PRO");

                entity.HasIndex(e => new { e.HprEmpresa, e.HprProveedor, e.HprCohFactura }, "HSTPROV")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.HprEmpresa, e.HprProveedor, e.HprCohFecha }, "SK_HSTPF")
                    .HasFillFactor(90);

                entity.Property(e => e.HprCohFactura)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("HPR_COH_FACTURA");

                entity.Property(e => e.HprCohFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("HPR_COH_FECHA");

                entity.Property(e => e.HprDescuen)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("HPR_DESCUEN");

                entity.Property(e => e.HprEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("HPR_EMPRESA");

                entity.Property(e => e.HprProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("HPR_PROVEEDOR");

                entity.Property(e => e.HprTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("HPR_TOTAL");
            });

            modelBuilder.Entity<HistkCxc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HISTK_CXC");

                entity.HasIndex(e => new { e.HistEmpresa, e.HistCorrelativo }, "HISTKCXC")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.HistEmpresa, e.HistCliente, e.HistFecha }, "SK_HISCKC")
                    .HasFillFactor(90);

                entity.Property(e => e.HistCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("HIST_CLIENTE");

                entity.Property(e => e.HistCorrelativo).HasColumnName("HIST_CORRELATIVO");

                entity.Property(e => e.HistDocumento)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("HIST_DOCUMENTO");

                entity.Property(e => e.HistEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("HIST_EMPRESA");

                entity.Property(e => e.HistFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("HIST_FECHA");

                entity.Property(e => e.HistMonto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("HIST_MONTO");

                entity.Property(e => e.HistRecibo).HasColumnName("HIST_RECIBO");

                entity.Property(e => e.HistTerminal).HasColumnName("HIST_TERMINAL");

                entity.Property(e => e.HistTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("HIST_TIENDA");

                entity.Property(e => e.HistTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("HIST_TIPO");
            });

            modelBuilder.Entity<HistkCxp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("HISTK_CXP");

                entity.HasIndex(e => new { e.HiskEmpresa, e.HiskCorrelativo }, "HISKCXP")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.HiskEmpresa, e.HiskProveedor, e.HiskFecha }, "SK_HISPKP")
                    .HasFillFactor(90);

                entity.Property(e => e.HiskContrasena).HasColumnName("HISK_CONTRASENA");

                entity.Property(e => e.HiskCorrelativo).HasColumnName("HISK_CORRELATIVO");

                entity.Property(e => e.HiskDocumento)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("HISK_DOCUMENTO");

                entity.Property(e => e.HiskEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("HISK_EMPRESA");

                entity.Property(e => e.HiskFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("HISK_FECHA");

                entity.Property(e => e.HiskMonto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("HISK_MONTO");

                entity.Property(e => e.HiskProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("HISK_PROVEEDOR");

                entity.Property(e => e.HiskTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("HISK_TIPO");

                entity.Property(e => e.HiskTipoPago)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("HISK_TIPO_PAGO");

                entity.Property(e => e.HiskTransaccion)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("HISK_TRANSACCION");
            });

            modelBuilder.Entity<IngBodegah>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ING_BODEGAH");

                entity.HasIndex(e => new { e.InhEmpresa, e.InhNumero }, "INBO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.InhEmpresa, e.InhBodega, e.InhFecha }, "SK_INBOBF")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.InhEmpresa, e.InhFecha, e.InhStatus }, "SK_INBOFS")
                    .HasFillFactor(90);

                entity.Property(e => e.InhBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("INH_BODEGA");

                entity.Property(e => e.InhBodeguero)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("INH_BODEGUERO");

                entity.Property(e => e.InhCentro)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("INH_CENTRO");

                entity.Property(e => e.InhEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("INH_EMPRESA");

                entity.Property(e => e.InhFase)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("INH_FASE");

                entity.Property(e => e.InhFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("INH_FECHA");

                entity.Property(e => e.InhFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("INH_FECHAC");

                entity.Property(e => e.InhFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("INH_FECHAM");

                entity.Property(e => e.InhFechare)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("INH_FECHARE");

                entity.Property(e => e.InhImpresion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("INH_IMPRESION");

                entity.Property(e => e.InhLiquidacion).HasColumnName("INH_LIQUIDACION");

                entity.Property(e => e.InhNumero).HasColumnName("INH_NUMERO");

                entity.Property(e => e.InhStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("INH_STATUS");

                entity.Property(e => e.InhTasa)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INH_TASA");

                entity.Property(e => e.InhUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("INH_USUARIOC");

                entity.Property(e => e.InhUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("INH_USUARIOM");
            });

            modelBuilder.Entity<IngBodegal>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ING_BODEGAL");

                entity.HasIndex(e => new { e.InlEmpresa, e.InlInhNumero, e.InlLinea }, "INGBOL")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.InlEmpresa, e.InlNordencom, e.InlEnviop, e.InlInhNumero }, "ING_BOLORD")
                    .HasFillFactor(90);

                entity.Property(e => e.InlEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("INL_EMPRESA");

                entity.Property(e => e.InlEnviop)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("INL_ENVIOP");

                entity.Property(e => e.InlFactura)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("INL_FACTURA");

                entity.Property(e => e.InlFechav)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("INL_FECHAV");

                entity.Property(e => e.InlInhNumero).HasColumnName("INL_INH_NUMERO");

                entity.Property(e => e.InlInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("INL_INVENTARIO");

                entity.Property(e => e.InlLinea).HasColumnName("INL_LINEA");

                entity.Property(e => e.InlNordencom).HasColumnName("INL_NORDENCOM");

                entity.Property(e => e.InlPreciou)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INL_PRECIOU");

                entity.Property(e => e.InlProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("INL_PROVEEDOR");

                entity.Property(e => e.InlSerie)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("INL_SERIE");

                entity.Property(e => e.InlSerieflag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("INL_SERIEFLAG");

                entity.Property(e => e.InlUnidades)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INL_UNIDADES");
            });

            modelBuilder.Entity<IngBodegalExt1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ING_BODEGAL_EXT1");

                entity.HasIndex(e => new { e.InlxEmpresa, e.InlxInhNumero, e.InlxLinea }, "PK_INGBODEXT1")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.InlxCampoext1)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("INLX_CAMPOEXT1");

                entity.Property(e => e.InlxCampoext2)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("INLX_CAMPOEXT2");

                entity.Property(e => e.InlxCampoext3)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("INLX_CAMPOEXT3");

                entity.Property(e => e.InlxCampoext4)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("INLX_CAMPOEXT4");

                entity.Property(e => e.InlxCampoext5)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("INLX_CAMPOEXT5");

                entity.Property(e => e.InlxCampoext6)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("INLX_CAMPOEXT6");

                entity.Property(e => e.InlxEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("INLX_EMPRESA");

                entity.Property(e => e.InlxFvenc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("INLX_FVENC");

                entity.Property(e => e.InlxInhNumero).HasColumnName("INLX_INH_NUMERO");

                entity.Property(e => e.InlxLinea).HasColumnName("INLX_LINEA");

                entity.Property(e => e.InlxNuminterno)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("INLX_NUMINTERNO");

                entity.Property(e => e.InlxOccliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("INLX_OCCLIENTE");
            });

            modelBuilder.Entity<InvCalculoprc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("INV_CALCULOPRC");

                entity.HasIndex(e => new { e.ClpEmpresa, e.ClpNivel, e.ClpCostoini, e.ClpCostofin }, "PK_CALCULOPRC")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.ClpCostofin)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CLP_COSTOFIN");

                entity.Property(e => e.ClpCostoini)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CLP_COSTOINI");

                entity.Property(e => e.ClpEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CLP_EMPRESA");

                entity.Property(e => e.ClpNivel).HasColumnName("CLP_NIVEL");

                entity.Property(e => e.ClpPctgana)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CLP_PCTGANA");
            });

            modelBuilder.Entity<InvCentro>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("INV_CENTROS");

                entity.HasIndex(e => new { e.CentEmpresa, e.CentCentro }, "PK_INV_CENTRO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CentCentro)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CENT_CENTRO");

                entity.Property(e => e.CentDescripcion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CENT_DESCRIPCION");

                entity.Property(e => e.CentEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CENT_EMPRESA");
            });

            modelBuilder.Entity<InvColore>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("INV_COLORES");

                entity.HasIndex(e => new { e.ColEmpresa, e.ColColor }, "INV_COLORX")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.ColColor)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COL_COLOR");

                entity.Property(e => e.ColDescripcion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("COL_DESCRIPCION");

                entity.Property(e => e.ColEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("COL_EMPRESA");
            });

            modelBuilder.Entity<InvEquipo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("INV_EQUIPOS");

                entity.HasIndex(e => new { e.EquEmpresa, e.EquInventario }, "PK_EQUIPO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.EquDescrip1)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("EQU_DESCRIP1");

                entity.Property(e => e.EquDescrip2)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("EQU_DESCRIP2");

                entity.Property(e => e.EquDescrip3)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("EQU_DESCRIP3");

                entity.Property(e => e.EquEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("EQU_EMPRESA");

                entity.Property(e => e.EquInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("EQU_INVENTARIO");
            });

            modelBuilder.Entity<InvEquivalente>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("INV_EQUIVALENTES");

                entity.HasIndex(e => new { e.EquiEmpresa, e.EquiInventario, e.EquiEquivalente }, "PK_EQUIVALENTE")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.EquiCatalogo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EQUI_CATALOGO");

                entity.Property(e => e.EquiEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("EQUI_EMPRESA");

                entity.Property(e => e.EquiEquiflag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EQUI_EQUIFLAG");

                entity.Property(e => e.EquiEquisus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EQUI_EQUISUS");

                entity.Property(e => e.EquiEquivalente)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("EQUI_EQUIVALENTE");

                entity.Property(e => e.EquiFechar)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EQUI_FECHAR");

                entity.Property(e => e.EquiFigref)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EQUI_FIGREF");

                entity.Property(e => e.EquiInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("EQUI_INVENTARIO");
            });

            modelBuilder.Entity<InvLiquidaH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("INV_LIQUIDA_H");

                entity.HasIndex(e => new { e.LiqhEmpresa, e.LiqhLiquidacion }, "PK_LIQUIDA_H")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.LiqhAlmacen1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIQH_ALMACEN1");

                entity.Property(e => e.LiqhAlmacen2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIQH_ALMACEN2");

                entity.Property(e => e.LiqhComBanco1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIQH_COM_BANCO1");

                entity.Property(e => e.LiqhComBanco2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIQH_COM_BANCO2");

                entity.Property(e => e.LiqhDescA1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_DESC_A1");

                entity.Property(e => e.LiqhDescA2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_DESC_A2");

                entity.Property(e => e.LiqhDescCb1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_DESC_CB1");

                entity.Property(e => e.LiqhDescCb2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_DESC_CB2");

                entity.Property(e => e.LiqhDescFi1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_DESC_FI1");

                entity.Property(e => e.LiqhDescFi2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_DESC_FI2");

                entity.Property(e => e.LiqhDescFl1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_DESC_FL1");

                entity.Property(e => e.LiqhDescFl2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_DESC_FL2");

                entity.Property(e => e.LiqhDescI1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_DESC_I1");

                entity.Property(e => e.LiqhDescI2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_DESC_I2");

                entity.Property(e => e.LiqhDescIm1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_DESC_IM1");

                entity.Property(e => e.LiqhDescIm2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_DESC_IM2");

                entity.Property(e => e.LiqhDescSi1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_DESC_SI1");

                entity.Property(e => e.LiqhDescSi2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_DESC_SI2");

                entity.Property(e => e.LiqhDescSl1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_DESC_SL1");

                entity.Property(e => e.LiqhDescSl2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_DESC_SL2");

                entity.Property(e => e.LiqhDescT1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_DESC_T1");

                entity.Property(e => e.LiqhDescT2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_DESC_T2");

                entity.Property(e => e.LiqhEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_EMPRESA");

                entity.Property(e => e.LiqhFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_FECHA");

                entity.Property(e => e.LiqhFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_FECHAC");

                entity.Property(e => e.LiqhFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_FECHAM");

                entity.Property(e => e.LiqhFleteI1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIQH_FLETE_I1");

                entity.Property(e => e.LiqhFleteI2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIQH_FLETE_I2");

                entity.Property(e => e.LiqhFleteL1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIQH_FLETE_L1");

                entity.Property(e => e.LiqhFleteL2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIQH_FLETE_L2");

                entity.Property(e => e.LiqhImpresion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_IMPRESION");

                entity.Property(e => e.LiqhImpuesto1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIQH_IMPUESTO1");

                entity.Property(e => e.LiqhImpuesto2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIQH_IMPUESTO2");

                entity.Property(e => e.LiqhInteres1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIQH_INTERES1");

                entity.Property(e => e.LiqhInteres2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIQH_INTERES2");

                entity.Property(e => e.LiqhIva)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIQH_IVA");

                entity.Property(e => e.LiqhLiquidacion).HasColumnName("LIQH_LIQUIDACION");

                entity.Property(e => e.LiqhMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_MONEDA");

                entity.Property(e => e.LiqhPoliza)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_POLIZA");

                entity.Property(e => e.LiqhSeguroI1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_SEGURO_I1");

                entity.Property(e => e.LiqhSeguroI2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_SEGURO_I2");

                entity.Property(e => e.LiqhSeguroL1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_SEGURO_L1");

                entity.Property(e => e.LiqhSeguroL2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_SEGURO_L2");

                entity.Property(e => e.LiqhStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_STATUS");

                entity.Property(e => e.LiqhTasa)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIQH_TASA");

                entity.Property(e => e.LiqhTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIQH_TOTAL");

                entity.Property(e => e.LiqhTramite1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIQH_TRAMITE1");

                entity.Property(e => e.LiqhTramite2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIQH_TRAMITE2");

                entity.Property(e => e.LiqhTransaccion)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_TRANSACCION");

                entity.Property(e => e.LiqhUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_USUARIOC");

                entity.Property(e => e.LiqhUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("LIQH_USUARIOM");

                entity.Property(e => e.LiqhValorSi1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIQH_VALOR_SI1");

                entity.Property(e => e.LiqhValorSi2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIQH_VALOR_SI2");

                entity.Property(e => e.LiqhValorSl1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIQH_VALOR_SL1");

                entity.Property(e => e.LiqhValorSl2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIQH_VALOR_SL2");
            });

            modelBuilder.Entity<InvLiquidaL>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("INV_LIQUIDA_L");

                entity.HasIndex(e => new { e.LiqlEmpresa, e.LiqlLiquidacion, e.LiqlLinea }, "PK_LIQUIDA_L")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.LiqlCantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIQL_CANTIDAD");

                entity.Property(e => e.LiqlCostou)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIQL_COSTOU");

                entity.Property(e => e.LiqlEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("LIQL_EMPRESA");

                entity.Property(e => e.LiqlEnviop)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("LIQL_ENVIOP");

                entity.Property(e => e.LiqlFactura)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("LIQL_FACTURA");

                entity.Property(e => e.LiqlGprorateado)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LIQL_GPRORATEADO");

                entity.Property(e => e.LiqlInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("LIQL_INVENTARIO");

                entity.Property(e => e.LiqlLinea).HasColumnName("LIQL_LINEA");

                entity.Property(e => e.LiqlLiquidacion).HasColumnName("LIQL_LIQUIDACION");

                entity.Property(e => e.LiqlNordencom).HasColumnName("LIQL_NORDENCOM");

                entity.Property(e => e.LiqlProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("LIQL_PROVEEDOR");
            });

            modelBuilder.Entity<InvListaPrecio>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("INV_LISTA_PRECIO");

                entity.HasIndex(e => new { e.LstEmpresa, e.LstPagina, e.LstCorrel }, "PK_LISTA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.LstCodigo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("LST_CODIGO");

                entity.Property(e => e.LstCorrel).HasColumnName("LST_CORREL");

                entity.Property(e => e.LstEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("LST_EMPRESA");

                entity.Property(e => e.LstPagina).HasColumnName("LST_PAGINA");

                entity.Property(e => e.LstTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("LST_TIPO");
            });

            modelBuilder.Entity<InvLoteFecha>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("INV_LOTE_FECHA");

                entity.HasIndex(e => new { e.LotEmpresa, e.LotBodega, e.LotInventario, e.LotSerie }, "PK_LOTE_FECHA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.LotBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LOT_BODEGA");

                entity.Property(e => e.LotEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("LOT_EMPRESA");

                entity.Property(e => e.LotExistencia)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LOT_EXISTENCIA");

                entity.Property(e => e.LotFechain)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("LOT_FECHAIN");

                entity.Property(e => e.LotFechaven)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("LOT_FECHAVEN");

                entity.Property(e => e.LotInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("LOT_INVENTARIO");

                entity.Property(e => e.LotSerie)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("LOT_SERIE");

                entity.Property(e => e.LotUbicacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("LOT_UBICACION");
            });

            modelBuilder.Entity<InvOrdencH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("INV_ORDENC_H");

                entity.HasIndex(e => new { e.OrdchEmpresa, e.OrdchNumero }, "PK_OCOMPRA_H")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.OrdchDespacho)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDCH_DESPACHO");

                entity.Property(e => e.OrdchEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ORDCH_EMPRESA");

                entity.Property(e => e.OrdchFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDCH_FECHA");

                entity.Property(e => e.OrdchFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDCH_FECHAC");

                entity.Property(e => e.OrdchFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDCH_FECHAM");

                entity.Property(e => e.OrdchImpresion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ORDCH_IMPRESION");

                entity.Property(e => e.OrdchLiquidacion).HasColumnName("ORDCH_LIQUIDACION");

                entity.Property(e => e.OrdchLlegada)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDCH_LLEGADA");

                entity.Property(e => e.OrdchMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ORDCH_MONEDA");

                entity.Property(e => e.OrdchNumCotiza)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDCH_NUM_COTIZA");

                entity.Property(e => e.OrdchNumero).HasColumnName("ORDCH_NUMERO");

                entity.Property(e => e.OrdchProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ORDCH_PROVEEDOR");

                entity.Property(e => e.OrdchTasa)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ORDCH_TASA");

                entity.Property(e => e.OrdchTiempoest)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDCH_TIEMPOEST");

                entity.Property(e => e.OrdchUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDCH_USUARIOC");

                entity.Property(e => e.OrdchUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDCH_USUARIOM");

                entity.Property(e => e.OrdchValor)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ORDCH_VALOR");
            });

            modelBuilder.Entity<InvOrdencL>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("INV_ORDENC_L");

                entity.HasIndex(e => new { e.OrdclEmpresa, e.OrdclNumero, e.OrdclLinea }, "PK_OCOMPRA_L")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.OrdclCantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ORDCL_CANTIDAD");

                entity.Property(e => e.OrdclCodprov)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORDCL_CODPROV");

                entity.Property(e => e.OrdclCostou)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ORDCL_COSTOU");

                entity.Property(e => e.OrdclDescuento)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ORDCL_DESCUENTO");

                entity.Property(e => e.OrdclEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ORDCL_EMPRESA");

                entity.Property(e => e.OrdclInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("ORDCL_INVENTARIO");

                entity.Property(e => e.OrdclLinea).HasColumnName("ORDCL_LINEA");

                entity.Property(e => e.OrdclNombre)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("ORDCL_NOMBRE");

                entity.Property(e => e.OrdclNumero).HasColumnName("ORDCL_NUMERO");
            });

            modelBuilder.Entity<InvPrecio>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("INV_PRECIOS");

                entity.HasIndex(e => e.TpreEmpresa, "PK_PRETITUL")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.TpreEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TPRE_EMPRESA");

                entity.Property(e => e.TpreTitulo1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TPRE_TITULO1");

                entity.Property(e => e.TpreTitulo2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TPRE_TITULO2");

                entity.Property(e => e.TpreTitulo3)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TPRE_TITULO3");

                entity.Property(e => e.TpreTitulo4)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TPRE_TITULO4");

                entity.Property(e => e.TpreTitulo5)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TPRE_TITULO5");

                entity.Property(e => e.TpreTitulo6)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TPRE_TITULO6");
            });

            modelBuilder.Entity<InvPreciodesc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("INV_PRECIODESC");

                entity.HasIndex(e => new { e.IpdEmpresa, e.IpdMoneda }, "IDXPRECIODESC")
                    .HasFillFactor(90);

                entity.Property(e => e.IpdDesc1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("IPD_DESC1");

                entity.Property(e => e.IpdDesc2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("IPD_DESC2");

                entity.Property(e => e.IpdDesc3)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("IPD_DESC3");

                entity.Property(e => e.IpdDesc4)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("IPD_DESC4");

                entity.Property(e => e.IpdDesc5)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("IPD_DESC5");

                entity.Property(e => e.IpdDesc6)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("IPD_DESC6");

                entity.Property(e => e.IpdEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("IPD_EMPRESA");

                entity.Property(e => e.IpdInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("IPD_INVENTARIO");

                entity.Property(e => e.IpdMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("IPD_MONEDA");
            });

            modelBuilder.Entity<InvRentabilidad>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("INV_RENTABILIDAD");

                entity.HasIndex(e => new { e.RenEmpresa, e.RenRandom, e.RenCorrel }, "PK_RENTABILIDAD")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.RenCaja).HasColumnName("REN_CAJA");

                entity.Property(e => e.RenCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REN_CLIENTE");

                entity.Property(e => e.RenCorrel).HasColumnName("REN_CORREL");

                entity.Property(e => e.RenCostoVenta)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("REN_COSTO_VENTA");

                entity.Property(e => e.RenDescuentos)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("REN_DESCUENTOS");

                entity.Property(e => e.RenEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("REN_EMPRESA");

                entity.Property(e => e.RenExtra1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REN_EXTRA1");

                entity.Property(e => e.RenExtra2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("REN_EXTRA2");

                entity.Property(e => e.RenExtra3)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("REN_EXTRA3");

                entity.Property(e => e.RenExtra4)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("REN_EXTRA4");

                entity.Property(e => e.RenFactura).HasColumnName("REN_FACTURA");

                entity.Property(e => e.RenFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("REN_FECHA");

                entity.Property(e => e.RenInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("REN_INVENTARIO");

                entity.Property(e => e.RenLinea)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REN_LINEA");

                entity.Property(e => e.RenNumero).HasColumnName("REN_NUMERO");

                entity.Property(e => e.RenPrcUtil)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("REN_PRC_UTIL");

                entity.Property(e => e.RenRandom).HasColumnName("REN_RANDOM");

                entity.Property(e => e.RenSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("REN_SERIE");

                entity.Property(e => e.RenStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("REN_STATUS");

                entity.Property(e => e.RenSublinea)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("REN_SUBLINEA");

                entity.Property(e => e.RenTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REN_TIENDA");

                entity.Property(e => e.RenTotalVenta)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("REN_TOTAL_VENTA");

                entity.Property(e => e.RenUtilidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("REN_UTILIDAD");

                entity.Property(e => e.RenVendedor).HasColumnName("REN_VENDEDOR");

                entity.Property(e => e.RenVentaNeta)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("REN_VENTA_NETA");
            });

            modelBuilder.Entity<InvReporteStat>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("INV_ReporteStats");

                entity.HasIndex(e => new { e.Empresa, e.Linea, e.Producto }, "IX_INV_ReporteStats")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.Empresa, e.Linea, e.Sublinea, e.Producto }, "IX_INV_ReporteStats_1")
                    .HasFillFactor(90);

                entity.Property(e => e.CostoPromedio)
                    .HasColumnType("numeric(15, 6)")
                    .HasColumnName("Costo_Promedio");

                entity.Property(e => e.Empresa)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.IngresoCompras)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("Ingreso_Compras");

                entity.Property(e => e.IngresoDevolucion)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("Ingreso_Devolucion");

                entity.Property(e => e.IngresoOferta)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("Ingreso_Oferta");

                entity.Property(e => e.IngresoOtros)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("Ingreso_Otros");

                entity.Property(e => e.IngresoProduccion)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("Ingreso_Produccion");

                entity.Property(e => e.IngresoReacon)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("Ingreso_Reacon");

                entity.Property(e => e.IngresoTotal)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("Ingreso_Total");

                entity.Property(e => e.Linea)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.LineaNombre)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("Linea_Nombre");

                entity.Property(e => e.Producto)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.ProductoNombre)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("Producto_Nombre");

                entity.Property(e => e.SaldoInicial)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("Saldo_Inicial");

                entity.Property(e => e.SalidasBonificaciones)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("Salidas_Bonificaciones");

                entity.Property(e => e.SalidasCambios)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("Salidas_Cambios");

                entity.Property(e => e.SalidasMuestras)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("Salidas_Muestras");

                entity.Property(e => e.SalidasTotal)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("Salidas_Total");

                entity.Property(e => e.SalidasTraslados)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("Salidas_Traslados");

                entity.Property(e => e.Sublinea)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.SublineaNombre)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("Sublinea_Nombre");

                entity.Property(e => e.ValorSaldoInicial)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("ValorSaldo_Inicial");

                entity.Property(e => e.VentasExportaciones)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("Ventas_Exportaciones");

                entity.Property(e => e.VentasLocales)
                    .HasColumnType("numeric(15, 2)")
                    .HasColumnName("Ventas_Locales");
            });

            modelBuilder.Entity<InvReporteVtasSublinea>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("INV_ReporteVtasSublinea");

                entity.Property(e => e.AntCosto)
                    .HasColumnType("money")
                    .HasColumnName("ANT_COSTO");

                entity.Property(e => e.AntPorcentaje)
                    .HasColumnType("numeric(5, 2)")
                    .HasColumnName("ANT_PORCENTAJE");

                entity.Property(e => e.AntPrecio)
                    .HasColumnType("money")
                    .HasColumnName("ANT_PRECIO");

                entity.Property(e => e.CodEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("COD_EMPRESA");

                entity.Property(e => e.CodLinea)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("COD_LINEA");
            });

            modelBuilder.Entity<InvRepuesto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("INV_REPUESTOS");

                entity.HasIndex(e => new { e.RepEmpresa, e.RepModelo, e.RepRepuesto }, "PK_REPU")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.RepEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("REP_EMPRESA");

                entity.Property(e => e.RepFechadef)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("REP_FECHADEF");

                entity.Property(e => e.RepModelo)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("REP_MODELO");

                entity.Property(e => e.RepRepuesto)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("REP_REPUESTO");

                entity.Property(e => e.RepUnico)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("REP_UNICO");
            });

            modelBuilder.Entity<InvRequisicionh>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("INV_REQUISICIONH");

                entity.HasIndex(e => new { e.ReqEmpresa, e.ReqNumero }, "PK_REQUIH")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.ReqCentro)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("REQ_CENTRO");

                entity.Property(e => e.ReqCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("REQ_CLIENTE");

                entity.Property(e => e.ReqEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("REQ_EMPRESA");

                entity.Property(e => e.ReqFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("REQ_FECHA");

                entity.Property(e => e.ReqFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("REQ_FECHAC");

                entity.Property(e => e.ReqFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("REQ_FECHAM");

                entity.Property(e => e.ReqImpresion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("REQ_IMPRESION");

                entity.Property(e => e.ReqInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("REQ_INVENTARIO");

                entity.Property(e => e.ReqMovimiento).HasColumnName("REQ_MOVIMIENTO");

                entity.Property(e => e.ReqNumero).HasColumnName("REQ_NUMERO");

                entity.Property(e => e.ReqReponRev)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("REQ_REPON_REV");

                entity.Property(e => e.ReqResponEnv)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("REQ_RESPON_ENV");

                entity.Property(e => e.ReqSerie)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("REQ_SERIE");

                entity.Property(e => e.ReqUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("REQ_USUARIOC");

                entity.Property(e => e.ReqUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("REQ_USUARIOM");
            });

            modelBuilder.Entity<InvRequisicionl>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("INV_REQUISICIONL");

                entity.HasIndex(e => new { e.ReqlEmpresa, e.ReqlNumero, e.ReqlLinea }, "PK_REQUIL")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.ReqlCantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("REQL_CANTIDAD");

                entity.Property(e => e.ReqlEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("REQL_EMPRESA");

                entity.Property(e => e.ReqlInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("REQL_INVENTARIO");

                entity.Property(e => e.ReqlLinea).HasColumnName("REQL_LINEA");

                entity.Property(e => e.ReqlNumero).HasColumnName("REQL_NUMERO");

                entity.Property(e => e.ReqlPromedioU)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("REQL_PROMEDIO_U");

                entity.Property(e => e.ReqlTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("REQL_TOTAL");
            });

            modelBuilder.Entity<InvSaldoinicial>(entity =>
            {
                entity.HasKey(e => new { e.InvEmpresa, e.InvProducto, e.InvAniomes, e.InvBodega });

                entity.ToTable("INV_SALDOINICIAL");

                entity.Property(e => e.InvEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("INV_EMPRESA");

                entity.Property(e => e.InvProducto)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("INV_PRODUCTO");

                entity.Property(e => e.InvAniomes)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("INV_ANIOMES");

                entity.Property(e => e.InvBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("INV_BODEGA");

                entity.Property(e => e.InvSaldoinicio)
                    .HasColumnType("numeric(18, 6)")
                    .HasColumnName("INV_SALDOINICIO");
            });

            modelBuilder.Entity<InvSegbodega>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("INV_SEGBODEGA");

                entity.HasIndex(e => new { e.SegbEmpresa, e.SegbUsuario, e.SegbBodega }, "PK_SEGBODE")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.SegbBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("SEGB_BODEGA");

                entity.Property(e => e.SegbEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SEGB_EMPRESA");

                entity.Property(e => e.SegbUsuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SEGB_USUARIO");
            });

            modelBuilder.Entity<InvSerie>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("INV_SERIE");

                entity.HasIndex(e => new { e.InvbsEmpresa, e.InvbsBodega, e.InvbsInventario, e.InvbsSerie }, "PK_INV_SERIE")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.InvbsBodega)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("INVBS_BODEGA");

                entity.Property(e => e.InvbsEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("INVBS_EMPRESA");

                entity.Property(e => e.InvbsFechain)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("INVBS_FECHAIN");

                entity.Property(e => e.InvbsInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("INVBS_INVENTARIO");

                entity.Property(e => e.InvbsPoliza)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("INVBS_POLIZA");

                entity.Property(e => e.InvbsSerie)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("INVBS_SERIE");

                entity.Property(e => e.InvbsUbicacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("INVBS_UBICACION");
            });

            modelBuilder.Entity<InvTitpre>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("INV_TITPRE");

                entity.HasIndex(e => new { e.TitEmpresa, e.TitInventario }, "TIT_PRE")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.TitEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TIT_EMPRESA");

                entity.Property(e => e.TitInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("TIT_INVENTARIO");

                entity.Property(e => e.TitTitulo1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIT_TITULO1");

                entity.Property(e => e.TitTitulo2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIT_TITULO2");

                entity.Property(e => e.TitTitulo3)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIT_TITULO3");

                entity.Property(e => e.TitTitulo4)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIT_TITULO4");

                entity.Property(e => e.TitTitulo5)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIT_TITULO5");

                entity.Property(e => e.TitTitulo6)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TIT_TITULO6");
            });

            modelBuilder.Entity<InvbodClasesbodega>(entity =>
            {
                entity.ToTable("INVBOD_CLASESBODEGA");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.InvbNombre)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("INVB_NOMBRE");
            });

            modelBuilder.Entity<InvbodTiposbodega>(entity =>
            {
                entity.ToTable("INVBOD_TIPOSBODEGA");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.InvpNombre)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("INVP_NOMBRE");
            });

            modelBuilder.Entity<KardexCxc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("KARDEX_CXC");

                entity.HasIndex(e => new { e.CxckEmpresa, e.CxckCorrelativo }, "PK_KARDEX_CXC")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.CxckEmpresa, e.CxckCliente, e.CxckFecha }, "SK_KARCCF")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.CxckEmpresa, e.CxckFecha }, "SK_KARCF")
                    .HasFillFactor(90);

                entity.Property(e => e.CxckCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CXCK_CLIENTE");

                entity.Property(e => e.CxckCorrelativo).HasColumnName("CXCK_CORRELATIVO");

                entity.Property(e => e.CxckDocumento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CXCK_DOCUMENTO");

                entity.Property(e => e.CxckEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CXCK_EMPRESA");

                entity.Property(e => e.CxckFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CXCK_FECHA");

                entity.Property(e => e.CxckMonto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CXCK_MONTO");

                entity.Property(e => e.CxckRecibo).HasColumnName("CXCK_RECIBO");

                entity.Property(e => e.CxckSerier)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CXCK_SERIER");

                entity.Property(e => e.CxckTerminal).HasColumnName("CXCK_TERMINAL");

                entity.Property(e => e.CxckTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("CXCK_TIENDA");

                entity.Property(e => e.CxckTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CXCK_TIPO");

                entity.Property(e => e.CxckTransaccion)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CXCK_TRANSACCION");
            });

            modelBuilder.Entity<KardexCxp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("KARDEX_CXP");

                entity.HasIndex(e => new { e.CxpkEmpresa, e.CxpkCorrelativo }, "PK_KARDEX_CXP")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.CxpkEmpresa, e.CxpkFecha }, "SK_KARPF")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.CxpkEmpresa, e.CxpkProveedor, e.CxpkFecha }, "SK_KARPPF")
                    .HasFillFactor(90);

                entity.Property(e => e.CxpkContrasena).HasColumnName("CXPK_CONTRASENA");

                entity.Property(e => e.CxpkCorrelativo).HasColumnName("CXPK_CORRELATIVO");

                entity.Property(e => e.CxpkDocumento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CXPK_DOCUMENTO");

                entity.Property(e => e.CxpkEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CXPK_EMPRESA");

                entity.Property(e => e.CxpkFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CXPK_FECHA");

                entity.Property(e => e.CxpkMonto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CXPK_MONTO");

                entity.Property(e => e.CxpkProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CXPK_PROVEEDOR");

                entity.Property(e => e.CxpkTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CXPK_TIPO");

                entity.Property(e => e.CxpkTipoPago)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CXPK_TIPO_PAGO");

                entity.Property(e => e.CxpkTransaccion)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CXPK_TRANSACCION");
            });

            modelBuilder.Entity<Lactar>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("LACTAR");

                entity.HasIndex(e => new { e.NlEmpresa, e.NlPersonal, e.NlFecha, e.NlFechaal }, "PK_LACTAR")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.NlEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NL_EMPRESA");

                entity.Property(e => e.NlFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NL_FECHA");

                entity.Property(e => e.NlFechaal)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NL_FECHAAL");

                entity.Property(e => e.NlHora)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NL_HORA");

                entity.Property(e => e.NlHora1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NL_HORA1");

                entity.Property(e => e.NlPersonal)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NL_PERSONAL");
            });

            modelBuilder.Entity<LineasArtspo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("LINEAS_ARTSPOS");

                entity.HasIndex(e => new { e.LarEmpresa, e.LarLineainv }, "IDX_LINEA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.LarEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("LAR_EMPRESA");

                entity.Property(e => e.LarLineainv)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LAR_LINEAINV");

                entity.Property(e => e.LarNombre)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("LAR_NOMBRE");

                entity.Property(e => e.LarUtilidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LAR_UTILIDAD");
            });

            modelBuilder.Entity<LineasVta>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("LINEAS_VTAS");

                entity.Property(e => e.LvtEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("LVT_EMPRESA");

                entity.Property(e => e.LvtLineavta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LVT_LINEAVTA");

                entity.Property(e => e.LvtNombre)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("LVT_NOMBRE");

                entity.Property(e => e.LvtUtilidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LVT_UTILIDAD");
            });

            modelBuilder.Entity<MantDificultad>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("mant_dificultad");

                entity.Property(e => e.MdifCodigo)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("mdif_codigo");

                entity.Property(e => e.MdifDescrip)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("mdif_descrip");

                entity.Property(e => e.MdifEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("mdif_empresa");
            });

            modelBuilder.Entity<Maquinarium>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MAQUINARIA");

                entity.HasIndex(e => new { e.MaqEmpresa, e.MaqMaqunaria }, "MAQUNA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.MaqCliente)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("MAQ_CLIENTE");

                entity.Property(e => e.MaqEmpresa)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("MAQ_EMPRESA");

                entity.Property(e => e.MaqFecha)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("MAQ_FECHA");

                entity.Property(e => e.MaqMaquina1)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("MAQ_MAQUINA1");

                entity.Property(e => e.MaqMaquina2)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("MAQ_MAQUINA2");

                entity.Property(e => e.MaqMaquina3)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("MAQ_MAQUINA3");

                entity.Property(e => e.MaqMaqunaria)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("MAQ_MAQUNARIA");
            });

            modelBuilder.Entity<MastAsigTal>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MAST_ASIG_TAL");

                entity.HasIndex(e => new { e.MatEmpresa, e.MatCodigo }, "PK_MASTCODIGO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.MatEmpresa, e.MatCobrador, e.MatActinicial, e.MatActfinal, e.MatSerie }, "SK_COBCORRSERIE")
                    .HasFillFactor(90);

                entity.Property(e => e.MatActfinal).HasColumnName("MAT_ACTFINAL");

                entity.Property(e => e.MatActinicial).HasColumnName("MAT_ACTINICIAL");

                entity.Property(e => e.MatCobrador)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MAT_COBRADOR");

                entity.Property(e => e.MatCodigo).HasColumnName("MAT_CODIGO");

                entity.Property(e => e.MatDescripcion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("MAT_DESCRIPCION");

                entity.Property(e => e.MatDevfinal).HasColumnName("MAT_DEVFINAL");

                entity.Property(e => e.MatDevinicial).HasColumnName("MAT_DEVINICIAL");

                entity.Property(e => e.MatEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MAT_EMPRESA");

                entity.Property(e => e.MatFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MAT_FECHA");

                entity.Property(e => e.MatNumfinal).HasColumnName("MAT_NUMFINAL");

                entity.Property(e => e.MatNuminicial).HasColumnName("MAT_NUMINICIAL");

                entity.Property(e => e.MatNumtalonario).HasColumnName("MAT_NUMTALONARIO");

                entity.Property(e => e.MatSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MAT_SERIE");

                entity.Property(e => e.MatStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MAT_STATUS");
            });

            modelBuilder.Entity<Mastact>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MASTACT");

                entity.HasIndex(e => new { e.ActEmpresa, e.ActUbicacion }, "SK_MASTACTU")
                    .HasFillFactor(90);

                entity.Property(e => e.ActClase)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACT_CLASE");

                entity.Property(e => e.ActCodigo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ACT_CODIGO");

                entity.Property(e => e.ActCosto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ACT_COSTO");

                entity.Property(e => e.ActCuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ACT_CUENTA");

                entity.Property(e => e.ActDescripcion)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ACT_DESCRIPCION");

                entity.Property(e => e.ActEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACT_EMPRESA");

                entity.Property(e => e.ActFactura)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ACT_FACTURA");

                entity.Property(e => e.ActFealta)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ACT_FEALTA");

                entity.Property(e => e.ActFebaja)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ACT_FEBAJA");

                entity.Property(e => e.ActLiquidacion).HasColumnName("ACT_LIQUIDACION");

                entity.Property(e => e.ActMarca)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ACT_MARCA");

                entity.Property(e => e.ActNomprov)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ACT_NOMPROV");

                entity.Property(e => e.ActProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ACT_PROVEEDOR");

                entity.Property(e => e.ActSalva)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ACT_SALVA");

                entity.Property(e => e.ActSeguro)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ACT_SEGURO");

                entity.Property(e => e.ActSerie)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("ACT_SERIE");

                entity.Property(e => e.ActUbicacion)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ACT_UBICACION");

                entity.Property(e => e.ActValorlib)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ACT_VALORLIB");
            });

            modelBuilder.Entity<Mastcli>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MASTCLI");

                entity.HasIndex(e => new { e.Cli_Empresa, e.Cli_Codigo }, "CLI_CODIGO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.Cli_Empresa, e.Cli_Nombre }, "SK_MASTCLIN")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.Cli_Empresa, e.Cli_Saldo }, "SK_MASTCLIS")
                    .HasFillFactor(90);

                entity.Property(e => e.Cli_Afecto)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLI_AFECTO");

                entity.Property(e => e.Cli_Area)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CLI_AREA");

                entity.Property(e => e.Cli_Ciudad)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CLI_CIUDAD");

                entity.Property(e => e.Cli_Clasificacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLI_CLASIFICACION");

                entity.Property(e => e.Cli_Cobrador)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CLI_COBRADOR");

                entity.Property(e => e.Cli_Codigo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLI_CODIGO");

                entity.Property(e => e.Cli_Contacto)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CLI_CONTACTO");

                entity.Property(e => e.Cli_Cuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLI_CUENTA");

                entity.Property(e => e.Cli_Depto)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CLI_DEPTO");

                entity.Property(e => e.Cli_Diascred).HasColumnName("CLI_DIASCRED");

                entity.Property(e => e.Cli_Dircor1)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CLI_DIRCOR1");

                entity.Property(e => e.Cli_Dircor2)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CLI_DIRCOR2");

                entity.Property(e => e.Cli_Direccion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CLI_DIRECCION");

                entity.Property(e => e.Cli_Direccion1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CLI_DIRECCION1");

                entity.Property(e => e.Cli_Empresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CLI_EMPRESA");

                entity.Property(e => e.Cli_Fechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CLI_FECHAC");

                entity.Property(e => e.Cli_Feulcompra)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CLI_FEULCOMPRA");

                entity.Property(e => e.Cli_Feulpago)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CLI_FEULPAGO");

                entity.Property(e => e.Cli_Limite)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CLI_LIMITE");

                entity.Property(e => e.Cli_Nit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CLI_NIT");

                entity.Property(e => e.Cli_Nombre)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CLI_NOMBRE");

                entity.Property(e => e.Cli_Pctdescuento).HasColumnName("CLI_PCTDESCUENTO");

                entity.Property(e => e.Cli_Phones)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CLI_PHONES");

                entity.Property(e => e.Cli_Ruta)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CLI_RUTA");

                entity.Property(e => e.Cli_Saldo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CLI_SALDO");

                entity.Property(e => e.Cli_Suspencion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLI_SUSPENCION");

                entity.Property(e => e.Cli_Suspvfe)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CLI_SUSPVFE");

                entity.Property(e => e.Cli_Tipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CLI_TIPO");

                entity.Property(e => e.Cli_Vendedor).HasColumnName("CLI_VENDEDOR");

                entity.Property(e => e.Cli_Zona)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("CLI_ZONA");
            });

            modelBuilder.Entity<Mastcli1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MASTCLI1");

                entity.Property(e => e.CliCodigo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CLI_CODIGO");

                entity.Property(e => e.CliEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CLI_EMPRESA");

                entity.Property(e => e.CliNombre)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CLI_NOMBRE");
            });

            modelBuilder.Entity<Mastcon>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MASTCON");

                entity.HasIndex(e => new { e.ConEmpresa, e.ConCuenta }, "PK_CODIGO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.ConEmpresa, e.ConAcepta }, "SK_CONA")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.ConEmpresa, e.ConDescrip }, "SK_COND")
                    .HasFillFactor(90);

                entity.Property(e => e.ConAcepta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CON_ACEPTA");

                entity.Property(e => e.ConAlterno)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CON_ALTERNO");

                entity.Property(e => e.ConCuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("CON_CUENTA");

                entity.Property(e => e.ConDebe)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CON_DEBE");

                entity.Property(e => e.ConDebe1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CON_DEBE1");

                entity.Property(e => e.ConDebe10)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CON_DEBE10");

                entity.Property(e => e.ConDebe11)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CON_DEBE11");

                entity.Property(e => e.ConDebe12)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CON_DEBE12");

                entity.Property(e => e.ConDebe2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CON_DEBE2");

                entity.Property(e => e.ConDebe3)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CON_DEBE3");

                entity.Property(e => e.ConDebe4)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CON_DEBE4");

                entity.Property(e => e.ConDebe5)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CON_DEBE5");

                entity.Property(e => e.ConDebe6)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CON_DEBE6");

                entity.Property(e => e.ConDebe7)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CON_DEBE7");

                entity.Property(e => e.ConDebe8)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CON_DEBE8");

                entity.Property(e => e.ConDebe9)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CON_DEBE9");

                entity.Property(e => e.ConDebeini)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CON_DEBEINI");

                entity.Property(e => e.ConDescrip)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CON_DESCRIP");

                entity.Property(e => e.ConEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CON_EMPRESA");

                entity.Property(e => e.ConHaber)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CON_HABER");

                entity.Property(e => e.ConHaber1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CON_HABER1");

                entity.Property(e => e.ConHaber10)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CON_HABER10");

                entity.Property(e => e.ConHaber11)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CON_HABER11");

                entity.Property(e => e.ConHaber12)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CON_HABER12");

                entity.Property(e => e.ConHaber2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CON_HABER2");

                entity.Property(e => e.ConHaber3)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CON_HABER3");

                entity.Property(e => e.ConHaber4)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CON_HABER4");

                entity.Property(e => e.ConHaber5)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CON_HABER5");

                entity.Property(e => e.ConHaber6)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CON_HABER6");

                entity.Property(e => e.ConHaber7)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CON_HABER7");

                entity.Property(e => e.ConHaber8)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CON_HABER8");

                entity.Property(e => e.ConHaber9)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CON_HABER9");

                entity.Property(e => e.ConHaberini)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("CON_HABERINI");

                entity.Property(e => e.ConSaldo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CON_SALDO");
            });

            modelBuilder.Entity<Mastdoc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MASTDOCS");

                entity.HasIndex(e => new { e.DocEmpresa, e.DocDocumento }, "PK_DOCSMAST")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.DocDescrip)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("DOC_DESCRIP");

                entity.Property(e => e.DocDocumento)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DOC_DOCUMENTO");

                entity.Property(e => e.DocEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DOC_EMPRESA");

                entity.Property(e => e.DocOperD)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DOC_OPER_D");

                entity.Property(e => e.DocOperO)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DOC_OPER_O");
            });

            modelBuilder.Entity<MastinvDescrip>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MASTINV_DESCRIP");

                entity.HasIndex(e => new { e.MdesEmpresa, e.MdesInventario }, "INV_DESCRIP")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.MdesDescrip1)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MDES_DESCRIP1");

                entity.Property(e => e.MdesDescrip2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MDES_DESCRIP2");

                entity.Property(e => e.MdesDescrip3)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MDES_DESCRIP3");

                entity.Property(e => e.MdesDescrip4)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MDES_DESCRIP4");

                entity.Property(e => e.MdesDescrip5)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MDES_DESCRIP5");

                entity.Property(e => e.MdesDescrip6)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("MDES_DESCRIP6");

                entity.Property(e => e.MdesEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MDES_EMPRESA");

                entity.Property(e => e.MdesInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("MDES_INVENTARIO");
            });

            modelBuilder.Entity<Mastinvpo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MASTINVPOS");

                entity.HasIndex(e => new { e.InvEmpresa, e.InvInventario }, "INV_CODIGO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.InvEmpresa, e.InvSublineainv, e.InvNombre }, "INV_LINNOM")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.InvEmpresa, e.InvMarca }, "INV_MARCA")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.InvEmpresa, e.InvNombre }, "INV_NOMBRE")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.InvEmpresa, e.InvInicioProm, e.InvFinalProm }, "SK_INVIS")
                    .HasFillFactor(90);

                entity.Property(e => e.InvClasiabc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("INV_CLASIABC");

                entity.Property(e => e.InvCodbarras)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("INV_CODBARRAS");

                entity.Property(e => e.InvComtotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_COMTOTAL");

                entity.Property(e => e.InvConsumible)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("INV_CONSUMIBLE");

                entity.Property(e => e.InvCosexi)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_COSEXI");

                entity.Property(e => e.InvCosprom)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_COSPROM");

                entity.Property(e => e.InvCostoRef)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("INV_COSTO_REF");

                entity.Property(e => e.InvDesc2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_DESC2");

                entity.Property(e => e.InvDesc3)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_DESC3");

                entity.Property(e => e.InvDesc4)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_DESC4");

                entity.Property(e => e.InvDesc5)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_DESC5");

                entity.Property(e => e.InvDesc6)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_DESC6");

                entity.Property(e => e.InvDlCosexi)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_DL_COSEXI");

                entity.Property(e => e.InvDlCosprom)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_DL_COSPROM");

                entity.Property(e => e.InvEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("INV_EMPRESA");

                entity.Property(e => e.InvEximax)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_EXIMAX");

                entity.Property(e => e.InvEximin)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_EXIMIN");

                entity.Property(e => e.InvFabrica)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("INV_FABRICA");

                entity.Property(e => e.InvFechauped)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("INV_FECHAUPED");

                entity.Property(e => e.InvFinalProm)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("INV_FINAL_PROM");

                entity.Property(e => e.InvImagen)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("INV_IMAGEN");

                entity.Property(e => e.InvIngresob).HasColumnName("INV_INGRESOB");

                entity.Property(e => e.InvInicioProm)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("INV_INICIO_PROM");

                entity.Property(e => e.InvInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("INV_INVENTARIO");

                entity.Property(e => e.InvIva)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("INV_IVA");

                entity.Property(e => e.InvMarca)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("INV_MARCA");

                entity.Property(e => e.InvMarkup)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_MARKUP");

                entity.Property(e => e.InvMesescontrol)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_MESESCONTROL");

                entity.Property(e => e.InvMesesped)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_MESESPED");

                entity.Property(e => e.InvMesesseg)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_MESESSEG");

                entity.Property(e => e.InvMesestran)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_MESESTRAN");

                entity.Property(e => e.InvNombre)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("INV_NOMBRE");

                entity.Property(e => e.InvPctProm)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_PCT_PROM");

                entity.Property(e => e.InvPeso)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_PESO");

                entity.Property(e => e.InvPrecio1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_PRECIO1");

                entity.Property(e => e.InvPrecio2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_PRECIO2");

                entity.Property(e => e.InvPrecio3)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_PRECIO3");

                entity.Property(e => e.InvPrecio4)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_PRECIO4");

                entity.Property(e => e.InvPrecio5)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_PRECIO5");

                entity.Property(e => e.InvPrecio6)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_PRECIO6");

                entity.Property(e => e.InvPrecioi)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("INV_PRECIOI");

                entity.Property(e => e.InvReservado)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_RESERVADO");

                entity.Property(e => e.InvSerieflag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("INV_SERIEFLAG");

                entity.Property(e => e.InvSublineainv)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("INV_SUBLINEAINV");

                entity.Property(e => e.InvTransito)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_TRANSITO");

                entity.Property(e => e.InvUltcomfec)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("INV_ULTCOMFEC");

                entity.Property(e => e.InvUltcosto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_ULTCOSTO");

                entity.Property(e => e.InvUltvtafec)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("INV_ULTVTAFEC");

                entity.Property(e => e.InvUnidad)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("INV_UNIDAD");

                entity.Property(e => e.InvUniexi)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_UNIEXI");

                entity.Property(e => e.InvUnitotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_UNITOTAL");

                entity.Property(e => e.InvVolumen)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_VOLUMEN");
            });

            modelBuilder.Entity<MastinvposExtra>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MASTINVPOS_EXTRA");

                entity.HasIndex(e => new { e.InvxEmpresa, e.InvxInventario }, "INVX_CODIGOX")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.InvxChar1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("INVX_CHAR1");

                entity.Property(e => e.InvxChar2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("INVX_CHAR2");

                entity.Property(e => e.InvxChar3)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("INVX_CHAR3");

                entity.Property(e => e.InvxChar4)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("INVX_CHAR4");

                entity.Property(e => e.InvxChar5)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("INVX_CHAR5");

                entity.Property(e => e.InvxColor)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("INVX_COLOR");

                entity.Property(e => e.InvxEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("INVX_EMPRESA");

                entity.Property(e => e.InvxFloat1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INVX_FLOAT1");

                entity.Property(e => e.InvxFloat2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INVX_FLOAT2");

                entity.Property(e => e.InvxFloat3)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INVX_FLOAT3");

                entity.Property(e => e.InvxFloat4)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INVX_FLOAT4");

                entity.Property(e => e.InvxFloat5)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INVX_FLOAT5");

                entity.Property(e => e.InvxImpuesto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INVX_IMPUESTO");

                entity.Property(e => e.InvxInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("INVX_INVENTARIO");
            });

            modelBuilder.Entity<Mastprov>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MASTPROV");

                entity.HasIndex(e => new { e.ProEmpresa, e.ProProveedor }, "PRO_CODIGO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.ProEmpresa, e.ProNombre }, "SK_PROVN")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.ProEmpresa, e.ProProveedor, e.ProSaldo }, "SK_PROVPS")
                    .HasFillFactor(90);

                entity.Property(e => e.ProCiudad)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRO_CIUDAD");

                entity.Property(e => e.ProCodPostal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PRO_COD_POSTAL");

                entity.Property(e => e.ProCuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PRO_CUENTA");

                entity.Property(e => e.ProDepto)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PRO_DEPTO");

                entity.Property(e => e.ProDireccion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRO_DIRECCION");

                entity.Property(e => e.ProEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PRO_EMPRESA");

                entity.Property(e => e.ProFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PRO_FECHAC");

                entity.Property(e => e.ProNit)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PRO_NIT");

                entity.Property(e => e.ProNombre)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PRO_NOMBRE");

                entity.Property(e => e.ProPhones)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PRO_PHONES");

                entity.Property(e => e.ProProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PRO_PROVEEDOR");

                entity.Property(e => e.ProSaldo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PRO_SALDO");
            });

            modelBuilder.Entity<MastprovExt1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MASTPROV_EXT1");

                entity.HasIndex(e => new { e.PexEmpresa, e.PexProveedor }, "PEX_CODIGO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.PexDireccion)
                    .HasMaxLength(140)
                    .IsUnicode(false)
                    .HasColumnName("PEX_DIRECCION");

                entity.Property(e => e.PexEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PEX_EMPRESA");

                entity.Property(e => e.PexNombre)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("PEX_NOMBRE");

                entity.Property(e => e.PexProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PEX_PROVEEDOR");
            });

            modelBuilder.Entity<Masttran>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MASTTRANS");

                entity.HasIndex(e => new { e.TrnpEmpresa, e.TrnpCodigo }, "PK_TRANSCODIGO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.TrnpCelular)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("TRNP_CELULAR");

                entity.Property(e => e.TrnpCodigo).HasColumnName("TRNP_CODIGO");

                entity.Property(e => e.TrnpContacto)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("TRNP_CONTACTO");

                entity.Property(e => e.TrnpDireccion)
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasColumnName("TRNP_DIRECCION");

                entity.Property(e => e.TrnpEmail)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("TRNP_EMAIL");

                entity.Property(e => e.TrnpEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TRNP_EMPRESA");

                entity.Property(e => e.TrnpNombre)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("TRNP_NOMBRE");

                entity.Property(e => e.TrnpTelefono)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("TRNP_TELEFONO");

                entity.Property(e => e.TrnpUltmovim)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TRNP_ULTMOVIM");
            });

            modelBuilder.Entity<MftTmpSaldoKardex>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MFT_Tmp_SaldoKardex");

                entity.Property(e => e.BodNombre)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("BOD_NOMBRE");

                entity.Property(e => e.CodRepKardex).HasColumnName("COD_RepKardex");

                entity.Property(e => e.InvEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("INV_EMPRESA");

                entity.Property(e => e.InvInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("INV_INVENTARIO");

                entity.Property(e => e.InvNombre)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("INV_NOMBRE");

                entity.Property(e => e.InvSaldo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("INV_SALDO");

                entity.Property(e => e.InvUnidad)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("INV_UNIDAD");

                entity.Property(e => e.TraBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRA_BODEGA");

                entity.Property(e => e.TraTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TRA_TIPO");
            });

            modelBuilder.Entity<Moneda>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MONEDAS");

                entity.HasIndex(e => e.MonMoneda, "PK_MONEDA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.MonFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MON_FECHA");

                entity.Property(e => e.MonMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MON_MONEDA");

                entity.Property(e => e.MonTasa)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("MON_TASA");
            });

            modelBuilder.Entity<MovBod>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MOV_BOD");

                entity.HasIndex(e => new { e.MboEmpresa, e.MboNumero }, "MOV_BOD1")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.MboEmpresa, e.MboFecha, e.MboStatus }, "SK_MOVBODFS")
                    .HasFillFactor(90);

                entity.Property(e => e.MboBodegaD)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MBO_BODEGA_D");

                entity.Property(e => e.MboBodegaO)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MBO_BODEGA_O");

                entity.Property(e => e.MboCentro)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MBO_CENTRO");

                entity.Property(e => e.MboCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("MBO_CLIENTE");

                entity.Property(e => e.MboDocumento)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MBO_DOCUMENTO");

                entity.Property(e => e.MboEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MBO_EMPRESA");

                entity.Property(e => e.MboFactura)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("MBO_FACTURA");

                entity.Property(e => e.MboFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MBO_FECHA");

                entity.Property(e => e.MboFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MBO_FECHAC");

                entity.Property(e => e.MboFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MBO_FECHAM");

                entity.Property(e => e.MboImpresion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MBO_IMPRESION");

                entity.Property(e => e.MboInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("MBO_INVENTARIO");

                entity.Property(e => e.MboNumero).HasColumnName("MBO_NUMERO");

                entity.Property(e => e.MboObservacion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("MBO_OBSERVACION");

                entity.Property(e => e.MboRequi)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("MBO_REQUI");

                entity.Property(e => e.MboSerie)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("MBO_SERIE");

                entity.Property(e => e.MboStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MBO_STATUS");

                entity.Property(e => e.MboTasa)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("MBO_TASA");

                entity.Property(e => e.MboUsuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MBO_USUARIO");

                entity.Property(e => e.MboUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MBO_USUARIOC");

                entity.Property(e => e.MboUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MBO_USUARIOM");
            });

            modelBuilder.Entity<MovBol>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MOV_BOL");

                entity.HasIndex(e => new { e.MblEmpresa, e.MblNumero, e.MblLinea }, "MOV_BOL1")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.MblCantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("MBL_CANTIDAD");

                entity.Property(e => e.MblCosto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("MBL_COSTO");

                entity.Property(e => e.MblEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MBL_EMPRESA");

                entity.Property(e => e.MblFechat)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MBL_FECHAT");

                entity.Property(e => e.MblFechav)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MBL_FECHAV");

                entity.Property(e => e.MblInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("MBL_INVENTARIO");

                entity.Property(e => e.MblLinea).HasColumnName("MBL_LINEA");

                entity.Property(e => e.MblNumero).HasColumnName("MBL_NUMERO");

                entity.Property(e => e.MblSerie)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("MBL_SERIE");

                entity.Property(e => e.MblSerieflag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MBL_SERIEFLAG");
            });

            modelBuilder.Entity<Movcajapo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MOVCAJAPOS");

                entity.HasIndex(e => new { e.MovcEmpresa, e.MovcTienda, e.MovcTerminal, e.MovcNumero }, "IDXMOVCAJA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.MovcEmpresa, e.MovcFecha }, "SK_MOVCAJF")
                    .HasFillFactor(90);

                entity.Property(e => e.MovcDescrip)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("MOVC_DESCRIP");

                entity.Property(e => e.MovcDocumento)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("MOVC_DOCUMENTO");

                entity.Property(e => e.MovcEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MOVC_EMPRESA");

                entity.Property(e => e.MovcFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MOVC_FECHA");

                entity.Property(e => e.MovcHora)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("MOVC_HORA");

                entity.Property(e => e.MovcMonto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("MOVC_MONTO");

                entity.Property(e => e.MovcNumero).HasColumnName("MOVC_NUMERO");

                entity.Property(e => e.MovcTerminal).HasColumnName("MOVC_TERMINAL");

                entity.Property(e => e.MovcTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MOVC_TIENDA");

                entity.Property(e => e.MovcTipo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MOVC_TIPO");
            });

            modelBuilder.Entity<MstTarjetum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("MST_TARJETA");

                entity.HasIndex(e => new { e.MsttEmpresa, e.MsttTarjeta }, "TAR_CODIGO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.MsttAfiliacion)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("MSTT_AFILIACION");

                entity.Property(e => e.MsttEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MSTT_EMPRESA");

                entity.Property(e => e.MsttLimite)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("MSTT_LIMITE");

                entity.Property(e => e.MsttNombre)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("MSTT_NOMBRE");

                entity.Property(e => e.MsttPorcentaje)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("MSTT_PORCENTAJE");

                entity.Property(e => e.MsttTarjeta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MSTT_TARJETA");
            });

            modelBuilder.Entity<MtConfigTipo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("mt_config_tipo");

                entity.Property(e => e.CfgtCodigo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("cfgt_codigo");

                entity.Property(e => e.CfgtCorta)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cfgt_corta");

                entity.Property(e => e.CfgtDesc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("cfgt_desc");

                entity.Property(e => e.CfgtEmpresa)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cfgt_empresa");

                entity.Property(e => e.CfgtFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("cfgt_fechai");

                entity.Property(e => e.CfgtFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("cfgt_fecham");

                entity.Property(e => e.CfgtPadre)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("cfgt_padre");

                entity.Property(e => e.CfgtTipo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("cfgt_tipo");

                entity.Property(e => e.CfgtUsuarioi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cfgt_usuarioi");

                entity.Property(e => e.CfgtUsuariom)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cfgt_usuariom");

                entity.Property(e => e.CfgtValor)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("cfgt_valor");
            });

            modelBuilder.Entity<MtFuncionalidad>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("mt_funcionalidad");

                entity.Property(e => e.FunCodFuncionalidad)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("fun_cod_funcionalidad");

                entity.Property(e => e.FunCodigo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("fun_codigo");

                entity.Property(e => e.FunEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("fun_empresa");

                entity.Property(e => e.FunMenuPadre)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("fun_menu_padre");

                entity.Property(e => e.FunNombreMenu)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("fun_nombre_menu");

                entity.Property(e => e.FunPagina)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("fun_pagina");
            });

            modelBuilder.Entity<MtPerfilAcceso>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("mt_perfil_acceso");

                entity.Property(e => e.PrfEliminacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("prf_eliminacion");

                entity.Property(e => e.PrfEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("prf_empresa");

                entity.Property(e => e.PrfEscritura)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("prf_escritura");

                entity.Property(e => e.PrfFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("prf_fechai");

                entity.Property(e => e.PrfFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("prf_fecham");

                entity.Property(e => e.PrfLectura)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("prf_lectura");

                entity.Property(e => e.PrfModificacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("prf_modificacion");

                entity.Property(e => e.PrfNombrePagina)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("prf_nombre_pagina");

                entity.Property(e => e.PrfNombrePerfil)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("prf_nombre_perfil");

                entity.Property(e => e.PrfUsuarioi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("prf_usuarioi");

                entity.Property(e => e.PrfUsuariom)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("prf_usuariom");
            });

            modelBuilder.Entity<MtUsuario>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("mt_usuario");

                entity.Property(e => e.UsrCodigo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("usr_codigo");

                entity.Property(e => e.UsrConsola)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("usr_consola");

                entity.Property(e => e.UsrDepto)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("usr_depto");

                entity.Property(e => e.UsrEmail)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("usr_email");

                entity.Property(e => e.UsrEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("usr_empresa");

                entity.Property(e => e.UsrEstado)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("usr_estado");

                entity.Property(e => e.UsrFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("usr_fechai");

                entity.Property(e => e.UsrFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("usr_fecham");

                entity.Property(e => e.UsrFolderRep)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("usr_folder_rep");

                entity.Property(e => e.UsrJefe)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("usr_jefe");

                entity.Property(e => e.UsrLogin)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("usr_login");

                entity.Property(e => e.UsrLugar)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("usr_lugar");

                entity.Property(e => e.UsrNombre)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("usr_nombre");

                entity.Property(e => e.UsrPerfil)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("usr_perfil");

                entity.Property(e => e.UsrPswd)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("usr_pswd");

                entity.Property(e => e.UsrPuesto)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("usr_puesto");

                entity.Property(e => e.UsrRol)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("usr_rol");

                entity.Property(e => e.UsrUsuarioi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("usr_usuarioi");

                entity.Property(e => e.UsrUsuariom)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("usr_usuariom");
            });

            modelBuilder.Entity<NomDefmov>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("NOM_DEFMOV");

                entity.HasIndex(e => new { e.NmEmpresa, e.NmCodigo }, "PK_NOMDFMOV")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.NmCodigo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("NM_CODIGO");

                entity.Property(e => e.NmColumnalibro).HasColumnName("NM_COLUMNALIBRO");

                entity.Property(e => e.NmContacuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NM_CONTACUENTA");

                entity.Property(e => e.NmContada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NM_CONTADA");

                entity.Property(e => e.NmCuentaxp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NM_CUENTAXP");

                entity.Property(e => e.NmDescripcion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("NM_DESCRIPCION");

                entity.Property(e => e.NmEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NM_EMPRESA");

                entity.Property(e => e.NmFlagpm)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NM_FLAGPM");

                entity.Property(e => e.NmFlagsh)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NM_FLAGSH");

                entity.Property(e => e.NmObligatorio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NM_OBLIGATORIO");

                entity.Property(e => e.NmPermanente)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NM_PERMANENTE");

                entity.Property(e => e.NmPrestacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NM_PRESTACION");

                entity.Property(e => e.NmSumaresta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NM_SUMARESTA");

                entity.Property(e => e.NmValorpm)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("NM_VALORPM");
            });

            modelBuilder.Entity<NomDefmovdep>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("NOM_DEFMOVDEP");

                entity.HasIndex(e => new { e.NmdEmpresa, e.NmdDepartamento, e.NmdCodigo }, "PK_NOMDMDEP")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.NmdCodigo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("NMD_CODIGO");

                entity.Property(e => e.NmdContacuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NMD_CONTACUENTA");

                entity.Property(e => e.NmdContada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NMD_CONTADA");

                entity.Property(e => e.NmdDepartamento)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("NMD_DEPARTAMENTO");

                entity.Property(e => e.NmdEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NMD_EMPRESA");
            });

            modelBuilder.Entity<NomDepartamento>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("NOM_DEPARTAMENTO");

                entity.HasIndex(e => new { e.DptEmpresa, e.DptDepartamento }, "PK_DEPTO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.DptDepartamento)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("DPT_DEPARTAMENTO");

                entity.Property(e => e.DptDireccion)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("DPT_DIRECCION");

                entity.Property(e => e.DptEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DPT_EMPRESA");

                entity.Property(e => e.DptNombre)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("DPT_NOMBRE");
            });

            modelBuilder.Entity<NomDiasExtra>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("NOM_DIAS_EXTRA");

                entity.HasIndex(e => new { e.NdeEmpresa, e.NdeAnio, e.NdeMes, e.NdePersonal }, "PK_DIAEXTRA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.NdeAnio).HasColumnName("NDE_ANIO");

                entity.Property(e => e.NdeDias).HasColumnName("NDE_DIAS");

                entity.Property(e => e.NdeEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NDE_EMPRESA");

                entity.Property(e => e.NdeFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NDE_FECHA");

                entity.Property(e => e.NdeMes).HasColumnName("NDE_MES");

                entity.Property(e => e.NdePersonal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NDE_PERSONAL");
            });

            modelBuilder.Entity<NomLibroSalario>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("NOM_LIBRO_SALARIO");

                entity.HasIndex(e => new { e.PagEmpresa, e.PagPersonal, e.PagAnio, e.PagMes }, "PK_LIBRO_SALARIO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.PagEmpresa, e.PagAnio, e.PagMes }, "SK_LIBROSALARIO")
                    .HasFillFactor(90);

                entity.Property(e => e.PagAguinaldo)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAG_AGUINALDO");

                entity.Property(e => e.PagAnio).HasColumnName("PAG_ANIO");

                entity.Property(e => e.PagBantrabPresta)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAG_BANTRAB_PRESTA");

                entity.Property(e => e.PagBonificacion)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAG_BONIFICACION");

                entity.Property(e => e.PagBono14)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAG_BONO14");

                entity.Property(e => e.PagDias)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PAG_DIAS");

                entity.Property(e => e.PagDiasFaltados)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PAG_DIAS_FALTADOS");

                entity.Property(e => e.PagEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PAG_EMPRESA");

                entity.Property(e => e.PagHorasExtraex)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PAG_HORAS_EXTRAEX");

                entity.Property(e => e.PagHorasExtsim)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PAG_HORAS_EXTSIM");

                entity.Property(e => e.PagHorasOrd)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PAG_HORAS_ORD");

                entity.Property(e => e.PagHrexdo)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAG_HREXDO");

                entity.Property(e => e.PagHrexim)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAG_HREXIM");

                entity.Property(e => e.PagIgss)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAG_IGSS");

                entity.Property(e => e.PagIndemnizacion)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAG_INDEMNIZACION");

                entity.Property(e => e.PagIngresos)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAG_INGRESOS");

                entity.Property(e => e.PagIsr)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAG_ISR");

                entity.Property(e => e.PagMes).HasColumnName("PAG_MES");

                entity.Property(e => e.PagMonto)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAG_MONTO");

                entity.Property(e => e.PagOtrosAnticipo)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAG_OTROS_ANTICIPO");

                entity.Property(e => e.PagOtrosDeduc)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAG_OTROS_DEDUC");

                entity.Property(e => e.PagOtrosIngresos)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAG_OTROS_INGRESOS");

                entity.Property(e => e.PagPersonal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PAG_PERSONAL");

                entity.Property(e => e.PagSalarioExt)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAG_SALARIO_EXT");

                entity.Property(e => e.PagSalarioOrd)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAG_SALARIO_ORD");

                entity.Property(e => e.PagSeptimos)
                    .HasColumnType("decimal(6, 2)")
                    .HasColumnName("PAG_SEPTIMOS");

                entity.Property(e => e.PagSueldo)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAG_SUELDO");

                entity.Property(e => e.PagTotHrexdo)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAG_TOT_HREXDO");

                entity.Property(e => e.PagTotHrexsim)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAG_TOT_HREXSIM");

                entity.Property(e => e.PagTotLiquidaciones)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAG_TOT_LIQUIDACIONES");

                entity.Property(e => e.PagVacaciones)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAG_VACACIONES");
            });

            modelBuilder.Entity<NomLibroSalariot>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("NOM_LIBRO_SALARIOT");

                entity.HasIndex(e => new { e.PagtEmpresa, e.PagtPersonal, e.PagtAnio, e.PagtMes }, "PK_LIBRO_T")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.PagtAguinaldo)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAGT_AGUINALDO");

                entity.Property(e => e.PagtAnio).HasColumnName("PAGT_ANIO");

                entity.Property(e => e.PagtBantrabPresta)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAGT_BANTRAB_PRESTA");

                entity.Property(e => e.PagtBonificacion)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAGT_BONIFICACION");

                entity.Property(e => e.PagtBono14)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAGT_BONO14");

                entity.Property(e => e.PagtDias).HasColumnName("PAGT_DIAS");

                entity.Property(e => e.PagtDiasFaltados).HasColumnName("PAGT_DIAS_FALTADOS");

                entity.Property(e => e.PagtEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PAGT_EMPRESA");

                entity.Property(e => e.PagtHorasExtraex).HasColumnName("PAGT_HORAS_EXTRAEX");

                entity.Property(e => e.PagtHorasExtsim).HasColumnName("PAGT_HORAS_EXTSIM");

                entity.Property(e => e.PagtHorasOrd).HasColumnName("PAGT_HORAS_ORD");

                entity.Property(e => e.PagtHrexdo)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAGT_HREXDO");

                entity.Property(e => e.PagtHrexim)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAGT_HREXIM");

                entity.Property(e => e.PagtIgss)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAGT_IGSS");

                entity.Property(e => e.PagtIndemnizacion)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAGT_INDEMNIZACION");

                entity.Property(e => e.PagtIngresos)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAGT_INGRESOS");

                entity.Property(e => e.PagtIsr)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAGT_ISR");

                entity.Property(e => e.PagtMes).HasColumnName("PAGT_MES");

                entity.Property(e => e.PagtMonto)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAGT_MONTO");

                entity.Property(e => e.PagtOtrosAnticipo)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAGT_OTROS_ANTICIPO");

                entity.Property(e => e.PagtOtrosDeduc)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAGT_OTROS_DEDUC");

                entity.Property(e => e.PagtOtrosIngresos)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAGT_OTROS_INGRESOS");

                entity.Property(e => e.PagtPersonal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PAGT_PERSONAL");

                entity.Property(e => e.PagtSalarioExt)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAGT_SALARIO_EXT");

                entity.Property(e => e.PagtSalarioOrd)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAGT_SALARIO_ORD");

                entity.Property(e => e.PagtSeptimos).HasColumnName("PAGT_SEPTIMOS");

                entity.Property(e => e.PagtSueldo)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAGT_SUELDO");

                entity.Property(e => e.PagtTotHrexdo)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAGT_TOT_HREXDO");

                entity.Property(e => e.PagtTotHrexsim)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAGT_TOT_HREXSIM");

                entity.Property(e => e.PagtTotLiquidaciones)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAGT_TOT_LIQUIDACIONES");

                entity.Property(e => e.PagtVacaciones)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAGT_VACACIONES");
            });

            modelBuilder.Entity<NomMovdesc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("NOM_MOVDESC");

                entity.HasIndex(e => new { e.NmdsEmpresa, e.NmdsCodigo, e.NmdsCodigodesc }, "PK_MOVDESC")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.NmdsEmpresa, e.NmdsCodigodesc, e.NmdsCodigo }, "SK_MOVDESC")
                    .HasFillFactor(90);

                entity.Property(e => e.NmdsCodigo)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("NMDS_CODIGO");

                entity.Property(e => e.NmdsCodigodesc)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("NMDS_CODIGODESC");

                entity.Property(e => e.NmdsEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NMDS_EMPRESA");
            });

            modelBuilder.Entity<NomMoviper>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("NOM_MOVIPER");

                entity.HasIndex(e => new { e.MpEmpresa, e.MpCorrelativo }, "PK_MOVPERC")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.MpEmpresa, e.MpPersonal, e.MpFecha }, "SK_MOVPER")
                    .HasFillFactor(90);

                entity.Property(e => e.MpColumnalibro).HasColumnName("MP_COLUMNALIBRO");

                entity.Property(e => e.MpContacuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("MP_CONTACUENTA");

                entity.Property(e => e.MpContada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MP_CONTADA");

                entity.Property(e => e.MpCorrelativo).HasColumnName("MP_CORRELATIVO");

                entity.Property(e => e.MpCuentaxp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MP_CUENTAXP");

                entity.Property(e => e.MpDescripcion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("MP_DESCRIPCION");

                entity.Property(e => e.MpEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MP_EMPRESA");

                entity.Property(e => e.MpFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MP_FECHA");

                entity.Property(e => e.MpFlagpm)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MP_FLAGPM");

                entity.Property(e => e.MpFlagsh)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MP_FLAGSH");

                entity.Property(e => e.MpMontomes)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("MP_MONTOMES");

                entity.Property(e => e.MpMontoquin)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("MP_MONTOQUIN");

                entity.Property(e => e.MpMontosaldo)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("MP_MONTOSALDO");

                entity.Property(e => e.MpMovimiento)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("MP_MOVIMIENTO");

                entity.Property(e => e.MpMovquincena)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("MP_MOVQUINCENA");

                entity.Property(e => e.MpObligatorio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MP_OBLIGATORIO");

                entity.Property(e => e.MpPermanente)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MP_PERMANENTE");

                entity.Property(e => e.MpPersonal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("MP_PERSONAL");

                entity.Property(e => e.MpPorcquin)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("MP_PORCQUIN");

                entity.Property(e => e.MpPrestacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MP_PRESTACION");

                entity.Property(e => e.MpSumaresta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MP_SUMARESTA");

                entity.Property(e => e.MpValorpm)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("MP_VALORPM");
            });

            modelBuilder.Entity<NomMoviperApli>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("NOM_MOVIPER_APLI");

                entity.HasIndex(e => new { e.MpaEmpresa, e.MpaCorrelativo }, "PK_MOVPERAP")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.MpaEmpresa, e.MpaPersonal, e.MpaFecha }, "SK_MOVPERAP")
                    .HasFillFactor(90);

                entity.Property(e => e.MpaColumnalibro).HasColumnName("MPA_COLUMNALIBRO");

                entity.Property(e => e.MpaContacuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("MPA_CONTACUENTA");

                entity.Property(e => e.MpaContada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MPA_CONTADA");

                entity.Property(e => e.MpaCorrelativo).HasColumnName("MPA_CORRELATIVO");

                entity.Property(e => e.MpaCorrelmov)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("MPA_CORRELMOV");

                entity.Property(e => e.MpaCuentaxp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MPA_CUENTAXP");

                entity.Property(e => e.MpaDescripcion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("MPA_DESCRIPCION");

                entity.Property(e => e.MpaEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MPA_EMPRESA");

                entity.Property(e => e.MpaFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MPA_FECHA");

                entity.Property(e => e.MpaFlagpm)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MPA_FLAGPM");

                entity.Property(e => e.MpaFlagsh)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MPA_FLAGSH");

                entity.Property(e => e.MpaMonto)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("MPA_MONTO");

                entity.Property(e => e.MpaMontoquin)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("MPA_MONTOQUIN");

                entity.Property(e => e.MpaMovimiento)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("MPA_MOVIMIENTO");

                entity.Property(e => e.MpaPersonal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("MPA_PERSONAL");

                entity.Property(e => e.MpaPrestacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MPA_PRESTACION");

                entity.Property(e => e.MpaSumaresta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MPA_SUMARESTA");

                entity.Property(e => e.MpaValorpm)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("MPA_VALORPM");
            });

            modelBuilder.Entity<NomMoviperAplit>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("NOM_MOVIPER_APLIT");

                entity.HasIndex(e => new { e.MptEmpresa, e.MptCorrelativo }, "PK_MOVPERAPT")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.MptEmpresa, e.MptPersonal, e.MptFecha }, "SK_MOVPERAPT")
                    .HasFillFactor(90);

                entity.Property(e => e.MptColumnalibro).HasColumnName("MPT_COLUMNALIBRO");

                entity.Property(e => e.MptContacuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("MPT_CONTACUENTA");

                entity.Property(e => e.MptContada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MPT_CONTADA");

                entity.Property(e => e.MptCorrelativo).HasColumnName("MPT_CORRELATIVO");

                entity.Property(e => e.MptCorrelmov)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("MPT_CORRELMOV");

                entity.Property(e => e.MptCuentaxp)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MPT_CUENTAXP");

                entity.Property(e => e.MptDescripcion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("MPT_DESCRIPCION");

                entity.Property(e => e.MptEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MPT_EMPRESA");

                entity.Property(e => e.MptFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MPT_FECHA");

                entity.Property(e => e.MptFlagpm)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MPT_FLAGPM");

                entity.Property(e => e.MptFlagsh)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MPT_FLAGSH");

                entity.Property(e => e.MptMonto)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("MPT_MONTO");

                entity.Property(e => e.MptMovimiento)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("MPT_MOVIMIENTO");

                entity.Property(e => e.MptPersonal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("MPT_PERSONAL");

                entity.Property(e => e.MptPrestacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MPT_PRESTACION");

                entity.Property(e => e.MptSumaresta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("MPT_SUMARESTA");

                entity.Property(e => e.MptValorpm)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("MPT_VALORPM");
            });

            modelBuilder.Entity<NomPartidum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("NOM_PARTIDA");

                entity.HasIndex(e => new { e.ParRandom, e.ParCorrel, e.ParCuenta }, "PK_NOM_PARTIDA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.ParCorrel).HasColumnName("PAR_CORREL");

                entity.Property(e => e.ParCuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PAR_CUENTA");

                entity.Property(e => e.ParDebe)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAR_DEBE");

                entity.Property(e => e.ParEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PAR_EMPRESA");

                entity.Property(e => e.ParHaber)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PAR_HABER");

                entity.Property(e => e.ParRandom).HasColumnName("PAR_RANDOM");
            });

            modelBuilder.Entity<NomPersonal>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("NOM_PERSONAL");

                entity.HasIndex(e => new { e.PerEmpresa, e.PerPersonal }, "PK_PERSONA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.PerEmpresa, e.PerEgreso, e.PerDepartamento }, "SK_PERSED")
                    .HasFillFactor(90);

                entity.Property(e => e.PerAdelantomonto)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PER_ADELANTOMONTO");

                entity.Property(e => e.PerAdelantopct)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PER_ADELANTOPCT");

                entity.Property(e => e.PerAnticipoauto)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PER_ANTICIPOAUTO");

                entity.Property(e => e.PerApellido1)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PER_APELLIDO1");

                entity.Property(e => e.PerApellido2)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PER_APELLIDO2");

                entity.Property(e => e.PerApellidocas)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PER_APELLIDOCAS");

                entity.Property(e => e.PerApellidos)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PER_APELLIDOS");

                entity.Property(e => e.PerBanco)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PER_BANCO");

                entity.Property(e => e.PerBancocuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PER_BANCOCUENTA");

                entity.Property(e => e.PerCodigobanco)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PER_CODIGOBANCO");

                entity.Property(e => e.PerContadebe)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PER_CONTADEBE");

                entity.Property(e => e.PerContahaber)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PER_CONTAHABER");

                entity.Property(e => e.PerDepartamento)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("PER_DEPARTAMENTO");

                entity.Property(e => e.PerDireccion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PER_DIRECCION");

                entity.Property(e => e.PerDireccion2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PER_DIRECCION2");

                entity.Property(e => e.PerEgreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PER_EGRESO");

                entity.Property(e => e.PerEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PER_EMPRESA");

                entity.Property(e => e.PerEstadoCivil)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PER_ESTADO_CIVIL");

                entity.Property(e => e.PerExensionred)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("PER_EXENSIONRED");

                entity.Property(e => e.PerExtencsiontel)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("PER_EXTENCSIONTEL");

                entity.Property(e => e.PerFoto)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PER_FOTO");

                entity.Property(e => e.PerIgss)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PER_IGSS");

                entity.Property(e => e.PerIgssFlag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PER_IGSS_FLAG");

                entity.Property(e => e.PerImagen)
                    .HasColumnType("text")
                    .HasColumnName("PER_IMAGEN");

                entity.Property(e => e.PerIngreso)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PER_INGRESO");

                entity.Property(e => e.PerMotivoretiro)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PER_MOTIVORETIRO");

                entity.Property(e => e.PerNacimiento)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PER_NACIMIENTO");

                entity.Property(e => e.PerNacionalidad)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PER_NACIONALIDAD");

                entity.Property(e => e.PerNit)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PER_NIT");

                entity.Property(e => e.PerNombre1)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PER_NOMBRE1");

                entity.Property(e => e.PerNombre2)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PER_NOMBRE2");

                entity.Property(e => e.PerNombres)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("PER_NOMBRES");

                entity.Property(e => e.PerNumcel)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PER_NUMCEL");

                entity.Property(e => e.PerPath)
                    .HasMaxLength(64)
                    .IsUnicode(false)
                    .HasColumnName("PER_PATH");

                entity.Property(e => e.PerPersonal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PER_PERSONAL");

                entity.Property(e => e.PerProfecion)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PER_PROFECION");

                entity.Property(e => e.PerPuesto)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PER_PUESTO");

                entity.Property(e => e.PerRegcel)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("PER_REGCEL");

                entity.Property(e => e.PerSexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PER_SEXO");

                entity.Property(e => e.PerSindicado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PER_SINDICADO");

                entity.Property(e => e.PerStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PER_STATUS");

                entity.Property(e => e.PerSueldo)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PER_SUELDO");

                entity.Property(e => e.PerTelefono)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PER_TELEFONO");

                entity.Property(e => e.PerTipocuenta)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PER_TIPOCUENTA");

                entity.Property(e => e.PerTiponomina)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PER_TIPONOMINA");

                entity.Property(e => e.PerTipopago)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PER_TIPOPAGO");

                entity.Property(e => e.PerTiposalario)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PER_TIPOSALARIO");

                entity.Property(e => e.PerTurno)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PER_TURNO");
            });

            modelBuilder.Entity<NomPersonal1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("NOM_PERSONAL_1");

                entity.HasIndex(e => new { e.PerEmpresa, e.PerPersonal }, "PK_PERSONAL1")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.PerApemadre)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PER_APEMADRE");

                entity.Property(e => e.PerApepadre)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PER_APEPADRE");

                entity.Property(e => e.PerCarnetuni)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PER_CARNETUNI");

                entity.Property(e => e.PerColegiomedio)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PER_COLEGIOMEDIO");

                entity.Property(e => e.PerCreddesc1)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("PER_CREDDESC1");

                entity.Property(e => e.PerCreddesc2)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("PER_CREDDESC2");

                entity.Property(e => e.PerCredfono1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PER_CREDFONO1");

                entity.Property(e => e.PerCredfono2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PER_CREDFONO2");

                entity.Property(e => e.PerCrednombre1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PER_CREDNOMBRE1");

                entity.Property(e => e.PerCrednombre2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PER_CREDNOMBRE2");

                entity.Property(e => e.PerDircasa)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("PER_DIRCASA");

                entity.Property(e => e.PerDircasa2)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("PER_DIRCASA2");

                entity.Property(e => e.PerEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PER_EMPRESA");

                entity.Property(e => e.PerFechaactua)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PER_FECHAACTUA");

                entity.Property(e => e.PerLicenciacon)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PER_LICENCIACON");

                entity.Property(e => e.PerLicenciamoto)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PER_LICENCIAMOTO");

                entity.Property(e => e.PerNommadre)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PER_NOMMADRE");

                entity.Property(e => e.PerNompadre)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PER_NOMPADRE");

                entity.Property(e => e.PerPersonal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PER_PERSONAL");

                entity.Property(e => e.PerRefnom1)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("PER_REFNOM1");

                entity.Property(e => e.PerRefnom2)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("PER_REFNOM2");

                entity.Property(e => e.PerRefnom3)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("PER_REFNOM3");

                entity.Property(e => e.PerReftel1)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PER_REFTEL1");

                entity.Property(e => e.PerReftel2)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PER_REFTEL2");

                entity.Property(e => e.PerReftel3)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PER_REFTEL3");

                entity.Property(e => e.PerReftiempo1)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PER_REFTIEMPO1");

                entity.Property(e => e.PerReftiempo2)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PER_REFTIEMPO2");

                entity.Property(e => e.PerReftiempo3)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PER_REFTIEMPO3");

                entity.Property(e => e.PerTelcolegio)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PER_TELCOLEGIO");

                entity.Property(e => e.PerTelecasa)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PER_TELECASA");

                entity.Property(e => e.PerTeltrabmadre)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PER_TELTRABMADRE");

                entity.Property(e => e.PerTeltrabpadre)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PER_TELTRABPADRE");

                entity.Property(e => e.PerTeluniv)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PER_TELUNIV");

                entity.Property(e => e.PerTiemporesi)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PER_TIEMPORESI");

                entity.Property(e => e.PerTrabajomadre)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PER_TRABAJOMADRE");

                entity.Property(e => e.PerTrabajopadre)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PER_TRABAJOPADRE");

                entity.Property(e => e.PerUniversidad)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("PER_UNIVERSIDAD");
            });

            modelBuilder.Entity<NomPersonalExt1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("NOM_PERSONAL_EXT1");

                entity.HasIndex(e => new { e.ExtEmpresa, e.ExtPersonal }, "PK_PERSONALEXT1")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.ExtApelcasada)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("EXT_APELCASADA");

                entity.Property(e => e.ExtApellido1)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("EXT_APELLIDO1");

                entity.Property(e => e.ExtApellido2)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("EXT_APELLIDO2");

                entity.Property(e => e.ExtCedDepto)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EXT_CED_DEPTO");

                entity.Property(e => e.ExtCedMunic)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EXT_CED_MUNIC");

                entity.Property(e => e.ExtCentroLab)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EXT_CENTRO_LAB");

                entity.Property(e => e.ExtDpi)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("EXT_DPI");

                entity.Property(e => e.ExtEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("EXT_EMPRESA");

                entity.Property(e => e.ExtFechai)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EXT_FECHAI");

                entity.Property(e => e.ExtFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EXT_FECHAM");

                entity.Property(e => e.ExtMadreApel1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EXT_MADRE_APEL1");

                entity.Property(e => e.ExtMadreApel2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EXT_MADRE_APEL2");

                entity.Property(e => e.ExtMadreNomb)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("EXT_MADRE_NOMB");

                entity.Property(e => e.ExtNacActa)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXT_NAC_ACTA");

                entity.Property(e => e.ExtNacDepto)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EXT_NAC_DEPTO");

                entity.Property(e => e.ExtNacFolio)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXT_NAC_FOLIO");

                entity.Property(e => e.ExtNacLibro)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("EXT_NAC_LIBRO");

                entity.Property(e => e.ExtNacMunic)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EXT_NAC_MUNIC");

                entity.Property(e => e.ExtNacionalidad)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EXT_NACIONALIDAD");

                entity.Property(e => e.ExtNombre1)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("EXT_NOMBRE1");

                entity.Property(e => e.ExtNombre2)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("EXT_NOMBRE2");

                entity.Property(e => e.ExtNumDepend)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EXT_NUM_DEPEND");

                entity.Property(e => e.ExtOcupacion)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EXT_OCUPACION");

                entity.Property(e => e.ExtPadreApel1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EXT_PADRE_APEL1");

                entity.Property(e => e.ExtPadreApel2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EXT_PADRE_APEL2");

                entity.Property(e => e.ExtPadreNomb)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("EXT_PADRE_NOMB");

                entity.Property(e => e.ExtPasNum)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("EXT_PAS_NUM");

                entity.Property(e => e.ExtPasPais)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EXT_PAS_PAIS");

                entity.Property(e => e.ExtPersonal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("EXT_PERSONAL");

                entity.Property(e => e.ExtResDepto)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EXT_RES_DEPTO");

                entity.Property(e => e.ExtResMunic)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EXT_RES_MUNIC");

                entity.Property(e => e.ExtResZona)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EXT_RES_ZONA");

                entity.Property(e => e.ExtTelCel)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXT_TEL_CEL");

                entity.Property(e => e.ExtUsuarioi)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EXT_USUARIOI");

                entity.Property(e => e.ExtUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EXT_USUARIOM");
            });

            modelBuilder.Entity<NomPersonalExt2>(entity =>
            {
                entity.HasKey(e => new { e.Px2Empresa, e.Px2Personal })
                    .HasName("PK_NOMPERSONALEXT2");

                entity.ToTable("NOM_PERSONAL_EXT2");

                entity.Property(e => e.Px2Empresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PX2_EMPRESA");

                entity.Property(e => e.Px2Personal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PX2_PERSONAL");

                entity.Property(e => e.Px2Ausdesc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PX2_AUSDESC");

                entity.Property(e => e.Px2Bondecreto)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PX2_BONDECRETO");

                entity.Property(e => e.Px2Bonfijomes)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PX2_BONFIJOMES");

                entity.Property(e => e.Px2Bonquin1)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PX2_BONQUIN1");

                entity.Property(e => e.Px2Bonquin2)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PX2_BONQUIN2");

                entity.Property(e => e.Px2Bonsem)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PX2_BONSEM");

                entity.Property(e => e.Px2Descingtarde)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PX2_DESCINGTARDE");

                entity.Property(e => e.Px2Diasept)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PX2_DIASEPT");

                entity.Property(e => e.Px2Frecpago)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PX2_FRECPAGO");

                entity.Property(e => e.Px2Hdsab)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PX2_HDSAB");

                entity.Property(e => e.Px2Heing)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PX2_HEING");

                entity.Property(e => e.Px2Heporcigss)
                    .HasColumnType("decimal(16, 6)")
                    .HasColumnName("PX2_HEPORCIGSS");

                entity.Property(e => e.Px2Horafin).HasColumnName("PX2_HORAFIN");

                entity.Property(e => e.Px2Horaini).HasColumnName("PX2_HORAINI");

                entity.Property(e => e.Px2Horamaxhe).HasColumnName("PX2_HORAMAXHE");

                entity.Property(e => e.Px2Horaminhe).HasColumnName("PX2_HORAMINHE");

                entity.Property(e => e.Px2Igssdiario)
                    .HasColumnType("decimal(16, 6)")
                    .HasColumnName("PX2_IGSSDIARIO");

                entity.Property(e => e.Px2Igssporc)
                    .HasColumnType("decimal(16, 6)")
                    .HasColumnName("PX2_IGSSPORC");

                entity.Property(e => e.Px2Mincoring).HasColumnName("PX2_MINCORING");

                entity.Property(e => e.Px2Mincorsal).HasColumnName("PX2_MINCORSAL");

                entity.Property(e => e.Px2Mintoling).HasColumnName("PX2_MINTOLING");

                entity.Property(e => e.Px2Pagmaximo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PX2_PAGMAXIMO");

                entity.Property(e => e.Px2Retisr)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PX2_RETISR");

                entity.Property(e => e.Px2Salariodiaigss)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PX2_SALARIODIAIGSS");

                entity.Property(e => e.Px2Salariodiario)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PX2_SALARIODIARIO");

                entity.Property(e => e.Px2Salariohora)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PX2_SALARIOHORA");

                entity.Property(e => e.Px2Smoausdesc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PX2_SMOAUSDESC");
            });

            modelBuilder.Entity<NomPrestacione>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("NOM_PRESTACIONES");

                entity.HasIndex(e => new { e.PreEmpresa, e.PrePersonal, e.PreTipo, e.PreAnio }, "NOM_PRESTA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.PreAguinaldo)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PRE_AGUINALDO");

                entity.Property(e => e.PreAnio).HasColumnName("PRE_ANIO");

                entity.Property(e => e.PreBaseAgu)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PRE_BASE_AGU");

                entity.Property(e => e.PreBaseB14)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PRE_BASE_B14");

                entity.Property(e => e.PreBaseInv)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PRE_BASE_INV");

                entity.Property(e => e.PreBaseVac)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PRE_BASE_VAC");

                entity.Property(e => e.PreBono14)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PRE_BONO14");

                entity.Property(e => e.PreDeudas)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PRE_DEUDAS");

                entity.Property(e => e.PreDiasTrab).HasColumnName("PRE_DIAS_TRAB");

                entity.Property(e => e.PreDiasVac).HasColumnName("PRE_DIAS_VAC");

                entity.Property(e => e.PreDiasliqAgu)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PRE_DIASLIQ_AGU");

                entity.Property(e => e.PreDiasliqB14)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PRE_DIASLIQ_B14");

                entity.Property(e => e.PreDiasliqInv)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PRE_DIASLIQ_INV");

                entity.Property(e => e.PreDiasliqVac)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PRE_DIASLIQ_VAC");

                entity.Property(e => e.PreEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PRE_EMPRESA");

                entity.Property(e => e.PreFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PRE_FECHA");

                entity.Property(e => e.PreIndemniza)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PRE_INDEMNIZA");

                entity.Property(e => e.PreLiqMotivo)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PRE_LIQ_MOTIVO");

                entity.Property(e => e.PreLiqMotivo1)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PRE_LIQ_MOTIVO1");

                entity.Property(e => e.PrePersonal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PRE_PERSONAL");

                entity.Property(e => e.PrePromDiar)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PRE_PROM_DIAR");

                entity.Property(e => e.PreTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRE_TIPO");

                entity.Property(e => e.PreTotalliqAgu)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PRE_TOTALLIQ_AGU");

                entity.Property(e => e.PreTotalliqB14)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PRE_TOTALLIQ_B14");

                entity.Property(e => e.PreTotalliqInv)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PRE_TOTALLIQ_INV");

                entity.Property(e => e.PreTotalliqVac)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PRE_TOTALLIQ_VAC");

                entity.Property(e => e.PreVacaciones)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PRE_VACACIONES");

                entity.Property(e => e.PreVentajas)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("PRE_VENTAJAS");
            });

            modelBuilder.Entity<NomPresu>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("NOM_PRESU");

                entity.HasIndex(e => new { e.NompEmpresa, e.NompCuenta }, "PK_NOMPRE")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.NompCuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NOMP_CUENTA");

                entity.Property(e => e.NompDescrip)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("NOMP_DESCRIP");

                entity.Property(e => e.NompEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NOMP_EMPRESA");

                entity.Property(e => e.NompSaldo1)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("NOMP_SALDO1");

                entity.Property(e => e.NompSaldo10)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("NOMP_SALDO10");

                entity.Property(e => e.NompSaldo11)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("NOMP_SALDO11");

                entity.Property(e => e.NompSaldo12)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("NOMP_SALDO12");

                entity.Property(e => e.NompSaldo2)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("NOMP_SALDO2");

                entity.Property(e => e.NompSaldo3)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("NOMP_SALDO3");

                entity.Property(e => e.NompSaldo4)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("NOMP_SALDO4");

                entity.Property(e => e.NompSaldo5)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("NOMP_SALDO5");

                entity.Property(e => e.NompSaldo6)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("NOMP_SALDO6");

                entity.Property(e => e.NompSaldo7)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("NOMP_SALDO7");

                entity.Property(e => e.NompSaldo8)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("NOMP_SALDO8");

                entity.Property(e => e.NompSaldo9)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("NOMP_SALDO9");
            });

            modelBuilder.Entity<NomPuesto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("NOM_PUESTOS");

                entity.HasIndex(e => new { e.NpEmpresa, e.NpPuesto }, "PK_PUESTO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.NpAutohoraex)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NP_AUTOHORAEX");

                entity.Property(e => e.NpDescripcion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("NP_DESCRIPCION");

                entity.Property(e => e.NpEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NP_EMPRESA");

                entity.Property(e => e.NpHoraentra).HasColumnName("NP_HORAENTRA");

                entity.Property(e => e.NpHoraentra1).HasColumnName("NP_HORAENTRA1");

                entity.Property(e => e.NpHorasale).HasColumnName("NP_HORASALE");

                entity.Property(e => e.NpHorasale1).HasColumnName("NP_HORASALE1");

                entity.Property(e => e.NpHorasdia)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("NP_HORASDIA");

                entity.Property(e => e.NpHorasmen)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("NP_HORASMEN");

                entity.Property(e => e.NpHorassemana)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("NP_HORASSEMANA");

                entity.Property(e => e.NpJornadaunica)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("NP_JORNADAUNICA");

                entity.Property(e => e.NpPuesto)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NP_PUESTO");

                entity.Property(e => e.NpSueldoini)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("NP_SUELDOINI");

                entity.Property(e => e.NpTurno)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NP_TURNO");
            });

            modelBuilder.Entity<NomReversion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("nom_reversion");

                entity.Property(e => e.RevAnio).HasColumnName("rev_anio");

                entity.Property(e => e.RevEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("rev_empresa");

                entity.Property(e => e.RevFecharev)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("rev_fecharev");

                entity.Property(e => e.RevHora)
                    .HasColumnType("datetime")
                    .HasColumnName("rev_hora");

                entity.Property(e => e.RevMes).HasColumnName("rev_mes");

                entity.Property(e => e.RevMovant)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("rev_movant");

                entity.Property(e => e.RevTiponom)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("rev_tiponom");

                entity.Property(e => e.RevUsuario)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("rev_usuario");
            });

            modelBuilder.Entity<NomSuspension>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("NOM_SUSPENSION");

                entity.HasIndex(e => new { e.SusEmpresa, e.SusNumero }, "PK_SUSPENCION")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.SusEmpresa, e.SusPersonal, e.SusInicio }, "SK_SUSP")
                    .HasFillFactor(90);

                entity.Property(e => e.SusDescripcion)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("SUS_DESCRIPCION");

                entity.Property(e => e.SusDescripcion1)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("SUS_DESCRIPCION1");

                entity.Property(e => e.SusDescuentadia)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SUS_DESCUENTADIA");

                entity.Property(e => e.SusDescuentasep)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SUS_DESCUENTASEP");

                entity.Property(e => e.SusEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SUS_EMPRESA");

                entity.Property(e => e.SusFinal)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SUS_FINAL");

                entity.Property(e => e.SusInicio)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("SUS_INICIO");

                entity.Property(e => e.SusNumero).HasColumnName("SUS_NUMERO");

                entity.Property(e => e.SusPersonal)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("SUS_PERSONAL");

                entity.Property(e => e.SusTipo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("SUS_TIPO");
            });

            modelBuilder.Entity<NomTiposuspension>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("NOM_TIPOSUSPENSION");

                entity.HasIndex(e => e.SusdTipo, "PK_TIPOSUS")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.SusdAfectasueldo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("SUSD_AFECTASUELDO");

                entity.Property(e => e.SusdNombre)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SUSD_NOMBRE");

                entity.Property(e => e.SusdTipo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("SUSD_TIPO");
            });

            modelBuilder.Entity<NompreHist>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("NOMPRE_HIST");

                entity.HasIndex(e => new { e.NphEmpresa, e.NphAno, e.NphCuenta }, "PK_NOMPREHI")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.NphAno).HasColumnName("NPH_ANO");

                entity.Property(e => e.NphCuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NPH_CUENTA");

                entity.Property(e => e.NphDescrip)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("NPH_DESCRIP");

                entity.Property(e => e.NphEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NPH_EMPRESA");

                entity.Property(e => e.NphSaldo1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("NPH_SALDO1");

                entity.Property(e => e.NphSaldo10)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("NPH_SALDO10");

                entity.Property(e => e.NphSaldo11)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("NPH_SALDO11");

                entity.Property(e => e.NphSaldo12)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("NPH_SALDO12");

                entity.Property(e => e.NphSaldo2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("NPH_SALDO2");

                entity.Property(e => e.NphSaldo3)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("NPH_SALDO3");

                entity.Property(e => e.NphSaldo4)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("NPH_SALDO4");

                entity.Property(e => e.NphSaldo5)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("NPH_SALDO5");

                entity.Property(e => e.NphSaldo6)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("NPH_SALDO6");

                entity.Property(e => e.NphSaldo7)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("NPH_SALDO7");

                entity.Property(e => e.NphSaldo8)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("NPH_SALDO8");

                entity.Property(e => e.NphSaldo9)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("NPH_SALDO9");
            });

            modelBuilder.Entity<NotNotificacione>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("NOT_NOTIFICACIONES");

                entity.HasIndex(e => new { e.NtfEmpresa, e.NtfNumero }, "IDXNTF1")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.NtfEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("NTF_EMPRESA");

                entity.Property(e => e.NtfEnvia)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NTF_ENVIA");

                entity.Property(e => e.NtfFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NTF_FECHA");

                entity.Property(e => e.NtfHora)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NTF_HORA");

                entity.Property(e => e.NtfLlave1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NTF_LLAVE1");

                entity.Property(e => e.NtfLlave2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("NTF_LLAVE2");

                entity.Property(e => e.NtfLlave3).HasColumnName("NTF_LLAVE3");

                entity.Property(e => e.NtfNumero).HasColumnName("NTF_NUMERO");

                entity.Property(e => e.NtfObjeto)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("NTF_OBJETO");

                entity.Property(e => e.NtfObserv)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("NTF_OBSERV");

                entity.Property(e => e.NtfRecibe)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NTF_RECIBE");
            });

            modelBuilder.Entity<Oferta>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OFERTAS");

                entity.HasIndex(e => new { e.OferEmpresa, e.OferCodigo }, "PK_OFERTAS")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.OferAplicaDomingo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("OFER_APLICA_DOMINGO");

                entity.Property(e => e.OferAplicaJueves)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("OFER_APLICA_JUEVES");

                entity.Property(e => e.OferAplicaLunes)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("OFER_APLICA_LUNES");

                entity.Property(e => e.OferAplicaMartes)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("OFER_APLICA_MARTES");

                entity.Property(e => e.OferAplicaMiercoles)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("OFER_APLICA_MIERCOLES");

                entity.Property(e => e.OferAplicaSabado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("OFER_APLICA_SABADO");

                entity.Property(e => e.OferAplicaTodos)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("OFER_APLICA_TODOS");

                entity.Property(e => e.OferAplicaViernes)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("OFER_APLICA_VIERNES");

                entity.Property(e => e.OferCodigo).HasColumnName("OFER_CODIGO");

                entity.Property(e => e.OferDescripcion)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("OFER_DESCRIPCION");

                entity.Property(e => e.OferEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("OFER_EMPRESA");

                entity.Property(e => e.OferFechai)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("OFER_FECHAI");

                entity.Property(e => e.OferFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("OFER_FECHAM");

                entity.Property(e => e.OferInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("OFER_INVENTARIO");

                entity.Property(e => e.OferMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OFER_MONEDA");

                entity.Property(e => e.OferUsuarioi)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("OFER_USUARIOI");

                entity.Property(e => e.OferUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("OFER_USUARIOM");

                entity.Property(e => e.OferVigenciaFechaf)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("OFER_VIGENCIA_FECHAF");

                entity.Property(e => e.OferVigenciaFechai)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("OFER_VIGENCIA_FECHAI");

                entity.Property(e => e.OferXcantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("OFER_XCANTIDAD");

                entity.Property(e => e.OferXcantidadgratis)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("OFER_XCANTIDADGRATIS");

                entity.Property(e => e.OferXporcentaje)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("OFER_XPORCENTAJE");

                entity.Property(e => e.OferXprecio)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("OFER_XPRECIO");
            });

            modelBuilder.Entity<OfertasDetalle>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OFERTAS_DETALLE");

                entity.HasIndex(e => new { e.OfdtEmpresa, e.OfdtCodoferta, e.OfdtLinea }, "PK_OFERTAS_DETALLE")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.OfdtCantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("OFDT_CANTIDAD");

                entity.Property(e => e.OfdtCodoferta).HasColumnName("OFDT_CODOFERTA");

                entity.Property(e => e.OfdtEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("OFDT_EMPRESA");

                entity.Property(e => e.OfdtInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("OFDT_INVENTARIO");

                entity.Property(e => e.OfdtLinea).HasColumnName("OFDT_LINEA");
            });

            modelBuilder.Entity<OtrosPrecio>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("OTROS_PRECIOS");

                entity.HasIndex(e => new { e.OtrEmpresa, e.OtrInventario, e.OtrMoneda }, "PK_OTRPRE")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.OtrEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("OTR_EMPRESA");

                entity.Property(e => e.OtrInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("OTR_INVENTARIO");

                entity.Property(e => e.OtrMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OTR_MONEDA");

                entity.Property(e => e.OtrPrecio1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("OTR_PRECIO1");

                entity.Property(e => e.OtrPrecio2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("OTR_PRECIO2");

                entity.Property(e => e.OtrPrecio3)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("OTR_PRECIO3");

                entity.Property(e => e.OtrPrecio4)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("OTR_PRECIO4");

                entity.Property(e => e.OtrPrecio5)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("OTR_PRECIO5");

                entity.Property(e => e.OtrPrecio6)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("OTR_PRECIO6");
            });

            modelBuilder.Entity<PagosH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PAGOS_H");

                entity.HasIndex(e => new { e.PaghEmpresa, e.PaghTipo, e.PaghNumero }, "PK_CONTRASENA_H")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.PaghEmpresa, e.PaghFecha, e.PaghTipo }, "SK_CONTRAFT")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.PaghEmpresa, e.PaghProveedor, e.PaghFecha }, "SK_CONTRAPF")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.PaghEmpresa, e.PaghProveedor, e.PaghTipo }, "SK_CONTRAPT")
                    .HasFillFactor(90);

                entity.Property(e => e.PaghBanco)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAGH_BANCO");

                entity.Property(e => e.PaghCheque)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PAGH_CHEQUE");

                entity.Property(e => e.PaghCuenta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAGH_CUENTA");

                entity.Property(e => e.PaghEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PAGH_EMPRESA");

                entity.Property(e => e.PaghFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PAGH_FECHA");

                entity.Property(e => e.PaghImpresion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PAGH_IMPRESION");

                entity.Property(e => e.PaghMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PAGH_MONEDA");

                entity.Property(e => e.PaghMonto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PAGH_MONTO");

                entity.Property(e => e.PaghNumero).HasColumnName("PAGH_NUMERO");

                entity.Property(e => e.PaghProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PAGH_PROVEEDOR");

                entity.Property(e => e.PaghStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PAGH_STATUS");

                entity.Property(e => e.PaghTasacam)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PAGH_TASACAM");

                entity.Property(e => e.PaghTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PAGH_TIPO");
            });

            modelBuilder.Entity<PagosL>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PAGOS_L");

                entity.HasIndex(e => new { e.PaglEmpresa, e.PaglTipo, e.PaglNumero, e.PaglCorrel }, "PK_CONTRASENA_L")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.PaglCorrel).HasColumnName("PAGL_CORREL");

                entity.Property(e => e.PaglDocumento)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PAGL_DOCUMENTO");

                entity.Property(e => e.PaglEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PAGL_EMPRESA");

                entity.Property(e => e.PaglMonto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PAGL_MONTO");

                entity.Property(e => e.PaglNumero).HasColumnName("PAGL_NUMERO");

                entity.Property(e => e.PaglTdoc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PAGL_TDOC");

                entity.Property(e => e.PaglTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PAGL_TIPO");
            });

            modelBuilder.Entity<PartidaTempComp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PARTIDA_TEMP_COMP");

                entity.HasIndex(e => new { e.PtcEmpresa, e.PtcRandom, e.PtcProveedor, e.PtcTerminal, e.PtcSerie, e.PtcFactura, e.PtcMes, e.PtcAnio, e.PtcPartida, e.PtcCorrelativo }, "BITA_VENTA3")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.PtcAnio).HasColumnName("PTC_ANIO");

                entity.Property(e => e.PtcCorrelativo).HasColumnName("PTC_CORRELATIVO");

                entity.Property(e => e.PtcCuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PTC_CUENTA");

                entity.Property(e => e.PtcDebe)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PTC_DEBE");

                entity.Property(e => e.PtcEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PTC_EMPRESA");

                entity.Property(e => e.PtcFactura).HasColumnName("PTC_FACTURA");

                entity.Property(e => e.PtcFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PTC_FECHA");

                entity.Property(e => e.PtcHaber)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PTC_HABER");

                entity.Property(e => e.PtcMes).HasColumnName("PTC_MES");

                entity.Property(e => e.PtcPartida).HasColumnName("PTC_PARTIDA");

                entity.Property(e => e.PtcProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PTC_PROVEEDOR");

                entity.Property(e => e.PtcRandom).HasColumnName("PTC_RANDOM");

                entity.Property(e => e.PtcSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PTC_SERIE");

                entity.Property(e => e.PtcTerminal).HasColumnName("PTC_TERMINAL");
            });

            modelBuilder.Entity<PartidaTempVent>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PARTIDA_TEMP_VENT");

                entity.HasIndex(e => new { e.PtvEmpresa, e.PtvRandom, e.PtvTienda, e.PtvTerminal, e.PtvSerie, e.PtvFactura, e.PtvMes, e.PtvAnio, e.PtvPartida, e.PtvCorrelativo }, "BITA_VENTA3")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.PtvAnio).HasColumnName("PTV_ANIO");

                entity.Property(e => e.PtvCorrelativo).HasColumnName("PTV_CORRELATIVO");

                entity.Property(e => e.PtvCuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PTV_CUENTA");

                entity.Property(e => e.PtvDebe)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PTV_DEBE");

                entity.Property(e => e.PtvEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PTV_EMPRESA");

                entity.Property(e => e.PtvFactura).HasColumnName("PTV_FACTURA");

                entity.Property(e => e.PtvFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PTV_FECHA");

                entity.Property(e => e.PtvHaber)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PTV_HABER");

                entity.Property(e => e.PtvMes).HasColumnName("PTV_MES");

                entity.Property(e => e.PtvPartida).HasColumnName("PTV_PARTIDA");

                entity.Property(e => e.PtvRandom).HasColumnName("PTV_RANDOM");

                entity.Property(e => e.PtvSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PTV_SERIE");

                entity.Property(e => e.PtvTerminal).HasColumnName("PTV_TERMINAL");

                entity.Property(e => e.PtvTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PTV_TIENDA");
            });

            modelBuilder.Entity<PartidaTempVentum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PARTIDA_TEMP_VENTA");

                entity.Property(e => e.PtvAnio).HasColumnName("PTV_ANIO");

                entity.Property(e => e.PtvCorrelativo).HasColumnName("PTV_CORRELATIVO");

                entity.Property(e => e.PtvCuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PTV_CUENTA");

                entity.Property(e => e.PtvDebe)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PTV_DEBE");

                entity.Property(e => e.PtvEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PTV_EMPRESA");

                entity.Property(e => e.PtvFactura).HasColumnName("PTV_FACTURA");

                entity.Property(e => e.PtvFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PTV_FECHA");

                entity.Property(e => e.PtvHaber)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PTV_HABER");

                entity.Property(e => e.PtvMes).HasColumnName("PTV_MES");

                entity.Property(e => e.PtvPartida).HasColumnName("PTV_PARTIDA");

                entity.Property(e => e.PtvRandom).HasColumnName("PTV_RANDOM");

                entity.Property(e => e.PtvSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PTV_SERIE");

                entity.Property(e => e.PtvTerminal).HasColumnName("PTV_TERMINAL");

                entity.Property(e => e.PtvTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PTV_TIENDA");
            });

            modelBuilder.Entity<PartidahH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PARTIDAH_H");

                entity.HasIndex(e => new { e.PhhEmpresa, e.PhhAno, e.PhhMes, e.PhhNumero }, "PK_PARH_H")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.PhhAno).HasColumnName("PHH_ANO");

                entity.Property(e => e.PhhDebe)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PHH_DEBE");

                entity.Property(e => e.PhhDescrip1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PHH_DESCRIP1");

                entity.Property(e => e.PhhDescrip2)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PHH_DESCRIP2");

                entity.Property(e => e.PhhDescrip3)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PHH_DESCRIP3");

                entity.Property(e => e.PhhEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PHH_EMPRESA");

                entity.Property(e => e.PhhFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PHH_FECHA");

                entity.Property(e => e.PhhFein)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PHH_FEIN");

                entity.Property(e => e.PhhFemo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PHH_FEMO");

                entity.Property(e => e.PhhHaber)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PHH_HABER");

                entity.Property(e => e.PhhMes).HasColumnName("PHH_MES");

                entity.Property(e => e.PhhMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PHH_MONEDA");

                entity.Property(e => e.PhhNumero).HasColumnName("PHH_NUMERO");

                entity.Property(e => e.PhhTasa)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PHH_TASA");

                entity.Property(e => e.PhhUserin)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PHH_USERIN");

                entity.Property(e => e.PhhUsermo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PHH_USERMO");
            });

            modelBuilder.Entity<PartidalH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PARTIDAL_H");

                entity.HasIndex(e => new { e.PlhEmpresa, e.PlhAno, e.PlhMes, e.PlhNumero, e.PlhLinea }, "PK_PARL_H")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.PlhAno).HasColumnName("PLH_ANO");

                entity.Property(e => e.PlhCuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PLH_CUENTA");

                entity.Property(e => e.PlhDebe)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PLH_DEBE");

                entity.Property(e => e.PlhEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PLH_EMPRESA");

                entity.Property(e => e.PlhHaber)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PLH_HABER");

                entity.Property(e => e.PlhLinea).HasColumnName("PLH_LINEA");

                entity.Property(e => e.PlhMes).HasColumnName("PLH_MES");

                entity.Property(e => e.PlhNumero).HasColumnName("PLH_NUMERO");
            });

            modelBuilder.Entity<PdcCfgdium>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PDC_CFGDIA");

                entity.Property(e => e.PccfgChkrecor)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PCCFG_CHKRECOR");

                entity.Property(e => e.PccfgCobrador)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PCCFG_COBRADOR");

                entity.Property(e => e.PccfgCodclicad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PCCFG_CODCLICAD");

                entity.Property(e => e.PccfgDiasemana)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PCCFG_DIASEMANA");

                entity.Property(e => e.PccfgEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PCCFG_EMPRESA");

                entity.Property(e => e.PccfgLinea).HasColumnName("PCCFG_LINEA");

                entity.Property(e => e.PccfgRecordat)
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasColumnName("PCCFG_RECORDAT");

                entity.Property(e => e.PccfgTipcod)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PCCFG_TIPCOD");

                entity.Property(e => e.PccfgTipfactu)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PCCFG_TIPFACTU");
            });

            modelBuilder.Entity<PdcEmpresa>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PDC_EMPRESAS");

                entity.Property(e => e.PcempCobrador)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PCEMP_COBRADOR");

                entity.Property(e => e.PcempCodempresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PCEMP_CODEMPRESA");

                entity.Property(e => e.PcempEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PCEMP_EMPRESA");

                entity.Property(e => e.PcempLinea).HasColumnName("PCEMP_LINEA");
            });

            modelBuilder.Entity<PdcProgdiariah>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PDC_PROGDIARIAH");

                entity.Property(e => e.PcpdhCobrador)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PCPDH_COBRADOR");

                entity.Property(e => e.PcpdhCodigo).HasColumnName("PCPDH_CODIGO");

                entity.Property(e => e.PcpdhDiasemana)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PCPDH_DIASEMANA");

                entity.Property(e => e.PcpdhEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PCPDH_EMPRESA");

                entity.Property(e => e.PcpdhFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PCPDH_FECHA");

                entity.Property(e => e.PcpdhObserva)
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasColumnName("PCPDH_OBSERVA");

                entity.Property(e => e.PcpdhStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PCPDH_STATUS");
            });

            modelBuilder.Entity<PdcProgdiarial>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PDC_PROGDIARIAL");

                entity.Property(e => e.PcpdlClicodigo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PCPDL_CLICODIGO");

                entity.Property(e => e.PcpdlCobrador)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PCPDL_COBRADOR");

                entity.Property(e => e.PcpdlCodclicad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PCPDL_CODCLICAD");

                entity.Property(e => e.PcpdlCodigo).HasColumnName("PCPDL_CODIGO");

                entity.Property(e => e.PcpdlEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PCPDL_EMPRESA");

                entity.Property(e => e.PcpdlFactura).HasColumnName("PCPDL_FACTURA");

                entity.Property(e => e.PcpdlFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PCPDL_FECHA");

                entity.Property(e => e.PcpdlLinea).HasColumnName("PCPDL_LINEA");

                entity.Property(e => e.PcpdlOrden).HasColumnName("PCPDL_ORDEN");

                entity.Property(e => e.PcpdlRecibo).HasColumnName("PCPDL_RECIBO");

                entity.Property(e => e.PcpdlRecordat)
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasColumnName("PCPDL_RECORDAT");

                entity.Property(e => e.PcpdlRfecha)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("PCPDL_RFECHA");

                entity.Property(e => e.PcpdlRmonto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("PCPDL_RMONTO");

                entity.Property(e => e.PcpdlRserie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PCPDL_RSERIE");

                entity.Property(e => e.PcpdlSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PCPDL_SERIE");

                entity.Property(e => e.PcpdlTerminal).HasColumnName("PCPDL_TERMINAL");

                entity.Property(e => e.PcpdlTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PCPDL_TIENDA");

                entity.Property(e => e.PcpdlTipcod)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PCPDL_TIPCOD");

                entity.Property(e => e.PcpdlTipodoc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PCPDL_TIPODOC");

                entity.Property(e => e.PcpdlVehfecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PCPDL_VEHFECHA");

                entity.Property(e => e.PcpdlVehpago)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PCPDL_VEHPAGO");

                entity.Property(e => e.PcpdlVehretapli)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PCPDL_VEHRETAPLI");

                entity.Property(e => e.PcpdlVehretxapli)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PCPDL_VEHRETXAPLI");

                entity.Property(e => e.PcpdlVehsaldo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PCPDL_VEHSALDO");

                entity.Property(e => e.PcpdlVehsaldof)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PCPDL_VEHSALDOF");

                entity.Property(e => e.PcpdlVehtotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PCPDL_VEHTOTAL");
            });

            modelBuilder.Entity<PdcProgdiarialPag>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PDC_PROGDIARIAL_PAG");

                entity.Property(e => e.PrplCobrador)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PRPL_COBRADOR");

                entity.Property(e => e.PrplCodigo).HasColumnName("PRPL_CODIGO");

                entity.Property(e => e.PrplConcred)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRPL_CONCRED");

                entity.Property(e => e.PrplDocnum)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("PRPL_DOCNUM");

                entity.Property(e => e.PrplEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PRPL_EMPRESA");

                entity.Property(e => e.PrplFactura).HasColumnName("PRPL_FACTURA");

                entity.Property(e => e.PrplFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PRPL_FECHA");

                entity.Property(e => e.PrplFechai)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PRPL_FECHAI");

                entity.Property(e => e.PrplFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PRPL_FECHAM");

                entity.Property(e => e.PrplFechareg)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PRPL_FECHAREG");

                entity.Property(e => e.PrplLinea).HasColumnName("PRPL_LINEA");

                entity.Property(e => e.PrplMonto)
                    .HasColumnType("decimal(18, 5)")
                    .HasColumnName("PRPL_MONTO");

                entity.Property(e => e.PrplPrefecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PRPL_PREFECHA");

                entity.Property(e => e.PrplPrefechado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRPL_PREFECHADO");

                entity.Property(e => e.PrplSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PRPL_SERIE");

                entity.Property(e => e.PrplTerminal).HasColumnName("PRPL_TERMINAL");

                entity.Property(e => e.PrplTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PRPL_TIENDA");

                entity.Property(e => e.PrplUsuarioi)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PRPL_USUARIOI");

                entity.Property(e => e.PrplUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PRPL_USUARIOM");
            });

            modelBuilder.Entity<PdcRegdepositosH>(entity =>
            {
                entity.HasKey(e => new { e.PrdhEmpresa, e.PrdhNumero })
                    .HasName("PK_CXCREGDEPH");

                entity.ToTable("PDC_REGDEPOSITOS_H");

                entity.Property(e => e.PrdhEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PRDH_EMPRESA");

                entity.Property(e => e.PrdhNumero).HasColumnName("PRDH_NUMERO");

                entity.Property(e => e.PrdhChqbe)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRDH_CHQBE");

                entity.Property(e => e.PrdhChqeb)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRDH_CHQEB");

                entity.Property(e => e.PrdhChqob)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRDH_CHQOB");

                entity.Property(e => e.PrdhCobrador)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PRDH_COBRADOR");

                entity.Property(e => e.PrdhCodigo).HasColumnName("PRDH_CODIGO");

                entity.Property(e => e.PrdhCuentabco)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PRDH_CUENTABCO");

                entity.Property(e => e.PrdhEfect)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRDH_EFECT");

                entity.Property(e => e.PrdhFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PRDH_FECHA");

                entity.Property(e => e.PrdhFechadoc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PRDH_FECHADOC");

                entity.Property(e => e.PrdhMonto)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRDH_MONTO");

                entity.Property(e => e.PrdhNumtransac).HasColumnName("PRDH_NUMTRANSAC");
            });

            modelBuilder.Entity<PdcRegpagosH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PDC_REGPAGOS_H");

                entity.Property(e => e.PrphClicodcad)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PRPH_CLICODCAD");

                entity.Property(e => e.PrphCobrador)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PRPH_COBRADOR");

                entity.Property(e => e.PrphCodcuenta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PRPH_CODCUENTA");

                entity.Property(e => e.PrphCodigo).HasColumnName("PRPH_CODIGO");

                entity.Property(e => e.PrphConcred)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRPH_CONCRED");

                entity.Property(e => e.PrphCuentabco)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PRPH_CUENTABCO");

                entity.Property(e => e.PrphEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PRPH_EMPRESA");

                entity.Property(e => e.PrphFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PRPH_FECHA");

                entity.Property(e => e.PrphFechadoc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PRPH_FECHADOC");

                entity.Property(e => e.PrphLinea).HasColumnName("PRPH_LINEA");

                entity.Property(e => e.PrphMonto)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRPH_MONTO");

                entity.Property(e => e.PrphNumero).HasColumnName("PRPH_NUMERO");

                entity.Property(e => e.PrphNumtransac).HasColumnName("PRPH_NUMTRANSAC");

                entity.Property(e => e.PrphPosfechado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRPH_POSFECHADO");

                entity.Property(e => e.PrphSaldo)
                    .HasColumnType("decimal(16, 2)")
                    .HasColumnName("PRPH_SALDO");

                entity.Property(e => e.PrphStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PRPH_STATUS");

                entity.Property(e => e.PrphTipcod)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PRPH_TIPCOD");
            });

            modelBuilder.Entity<PedCaractL>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PED_CARACT_L");

                entity.HasIndex(e => new { e.CrlEmpresa, e.CrlSerie, e.CrlPedido, e.CrlLinea, e.CrlCodCaract, e.CrlNumCaract }, "ACRL_NUMERO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CrlCodCaract)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("CRL_COD_CARACT");

                entity.Property(e => e.CrlDescAdic)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CRL_DESC_ADIC");

                entity.Property(e => e.CrlEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CRL_EMPRESA");

                entity.Property(e => e.CrlInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CRL_INVENTARIO");

                entity.Property(e => e.CrlLinea).HasColumnName("CRL_LINEA");

                entity.Property(e => e.CrlNumCaract).HasColumnName("CRL_NUM_CARACT");

                entity.Property(e => e.CrlPedido).HasColumnName("CRL_PEDIDO");

                entity.Property(e => e.CrlSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CRL_SERIE");

                entity.Property(e => e.CrlValCaract)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("CRL_VAL_CARACT");
            });

            modelBuilder.Entity<PedCaracterist>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PED_CARACTERIST");

                entity.HasIndex(e => new { e.CrtEmpresa, e.CrtCodigo, e.CrtNumero }, "PK_PEDCAR")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CrtClasif1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CRT_CLASIF1");

                entity.Property(e => e.CrtClasif2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CRT_CLASIF2");

                entity.Property(e => e.CrtCodigo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("CRT_CODIGO");

                entity.Property(e => e.CrtEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CRT_EMPRESA");

                entity.Property(e => e.CrtNombreCar)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CRT_NOMBRE_CAR");

                entity.Property(e => e.CrtNombreSet)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CRT_NOMBRE_SET");

                entity.Property(e => e.CrtNumero).HasColumnName("CRT_NUMERO");

                entity.Property(e => e.CrtObligatorio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CRT_OBLIGATORIO");

                entity.Property(e => e.CrtOpcExcl)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CRT_OPC_EXCL");

                entity.Property(e => e.CrtStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("CRT_STATUS");

                entity.Property(e => e.CrtTexto1)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CRT_TEXTO1");

                entity.Property(e => e.CrtTexto2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("CRT_TEXTO2");
            });

            modelBuilder.Entity<PedOpcCaract>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PED_OPC_CARACT");

                entity.HasIndex(e => new { e.CocEmpresa, e.CocCodigo, e.CocNombreCar, e.CocNumero }, "PK_PED_OP_CAR")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.CocCodigo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("COC_CODIGO");

                entity.Property(e => e.CocEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("COC_EMPRESA");

                entity.Property(e => e.CocNombre)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("COC_NOMBRE");

                entity.Property(e => e.CocNombreCar)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("COC_NOMBRE_CAR");

                entity.Property(e => e.CocNumero).HasColumnName("COC_NUMERO");
            });

            modelBuilder.Entity<PedPedidosH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PED_PEDIDOS_H");

                entity.HasIndex(e => new { e.PdhEmpresa, e.PdhCliente }, "APDH_CLIENTE")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.PdhEmpresa, e.PdhSerie, e.PdhNumero }, "APDH_NUMERO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.PdhEmpresa, e.PdhPedidoVend, e.PdhFechaPed, e.PdhStatus }, "APDH_VENDE")
                    .HasFillFactor(90);

                entity.Property(e => e.PdhAprobado)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PDH_APROBADO");

                entity.Property(e => e.PdhArte)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PDH_ARTE");

                entity.Property(e => e.PdhCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PDH_CLIENTE");

                entity.Property(e => e.PdhCondPago)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PDH_COND_PAGO");

                entity.Property(e => e.PdhCotizacion).HasColumnName("PDH_COTIZACION");

                entity.Property(e => e.PdhDirEnt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PDH_DIR_ENT");

                entity.Property(e => e.PdhDirFact)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PDH_DIR_FACT");

                entity.Property(e => e.PdhEmbobinado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PDH_EMBOBINADO");

                entity.Property(e => e.PdhEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PDH_EMPRESA");

                entity.Property(e => e.PdhFaxFact)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PDH_FAX_FACT");

                entity.Property(e => e.PdhFechaArte)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PDH_FECHA_ARTE");

                entity.Property(e => e.PdhFechaEmb)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PDH_FECHA_EMB");

                entity.Property(e => e.PdhFechaEnt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PDH_FECHA_ENT");

                entity.Property(e => e.PdhFechaMaq)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PDH_FECHA_MAQ");

                entity.Property(e => e.PdhFechaPed)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PDH_FECHA_PED");

                entity.Property(e => e.PdhFechaPrensa)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PDH_FECHA_PRENSA");

                entity.Property(e => e.PdhFechaSalav)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PDH_FECHA_SALAV");

                entity.Property(e => e.PdhFechaStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PDH_FECHA_STATUS");

                entity.Property(e => e.PdhFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PDH_FECHAC");

                entity.Property(e => e.PdhFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PDH_FECHAM");

                entity.Property(e => e.PdhMaquila)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PDH_MAQUILA");

                entity.Property(e => e.PdhMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PDH_MONEDA");

                entity.Property(e => e.PdhNitFact)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PDH_NIT_FACT");

                entity.Property(e => e.PdhNombreEnt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PDH_NOMBRE_ENT");

                entity.Property(e => e.PdhNombreFact)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PDH_NOMBRE_FACT");

                entity.Property(e => e.PdhNumero).HasColumnName("PDH_NUMERO");

                entity.Property(e => e.PdhObservac1)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PDH_OBSERVAC1");

                entity.Property(e => e.PdhObservac2)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PDH_OBSERVAC2");

                entity.Property(e => e.PdhObservac3)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PDH_OBSERVAC3");

                entity.Property(e => e.PdhOrdenComp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PDH_ORDEN_COMP");

                entity.Property(e => e.PdhPedidoVend).HasColumnName("PDH_PEDIDO_VEND");

                entity.Property(e => e.PdhPrensa)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PDH_PRENSA");

                entity.Property(e => e.PdhSalav)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PDH_SALAV");

                entity.Property(e => e.PdhSaldo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PDH_SALDO");

                entity.Property(e => e.PdhSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PDH_SERIE");

                entity.Property(e => e.PdhStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PDH_STATUS");

                entity.Property(e => e.PdhTasa)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PDH_TASA");

                entity.Property(e => e.PdhTelFact)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PDH_TEL_FACT");

                entity.Property(e => e.PdhTipo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PDH_TIPO");

                entity.Property(e => e.PdhTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PDH_TOTAL");

                entity.Property(e => e.PdhUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PDH_USUARIOC");

                entity.Property(e => e.PdhUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PDH_USUARIOM");
            });

            modelBuilder.Entity<PedPedidosL>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PED_PEDIDOS_L");

                entity.HasIndex(e => new { e.PdlEmpresa, e.PdlSerie, e.PdlPedido, e.PdlLinea }, "APDL_NUMERO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.PdlBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("PDL_BODEGA");

                entity.Property(e => e.PdlCantFinal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PDL_CANT_FINAL");

                entity.Property(e => e.PdlCantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PDL_CANTIDAD");

                entity.Property(e => e.PdlDescAdic)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PDL_DESC_ADIC");

                entity.Property(e => e.PdlDirEnt)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("PDL_DIR_ENT");

                entity.Property(e => e.PdlEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PDL_EMPRESA");

                entity.Property(e => e.PdlFechaEnt)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PDL_FECHA_ENT");

                entity.Property(e => e.PdlInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("PDL_INVENTARIO");

                entity.Property(e => e.PdlLinea).HasColumnName("PDL_LINEA");

                entity.Property(e => e.PdlPedido).HasColumnName("PDL_PEDIDO");

                entity.Property(e => e.PdlPreciot)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PDL_PRECIOT");

                entity.Property(e => e.PdlPreciou)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PDL_PRECIOU");

                entity.Property(e => e.PdlSaldoFac)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PDL_SALDO_FAC");

                entity.Property(e => e.PdlSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PDL_SERIE");
            });

            modelBuilder.Entity<PedidoSugerido>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PEDIDO_SUGERIDO");

                entity.HasIndex(e => new { e.PesEmpresa, e.PesCorrelativo }, "PK_PEDSUG")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.PesCantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PES_CANTIDAD");

                entity.Property(e => e.PesCorrelativo).HasColumnName("PES_CORRELATIVO");

                entity.Property(e => e.PesCosto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PES_COSTO");

                entity.Property(e => e.PesEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PES_EMPRESA");

                entity.Property(e => e.PesInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("PES_INVENTARIO");

                entity.Property(e => e.PesProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PES_PROVEEDOR");
            });

            modelBuilder.Entity<PosCorrelativo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("POS_CORRELATIVO");

                entity.HasIndex(e => new { e.PoscorCodigo, e.PoscorTienda, e.PoscorTerminal }, "AD_CORRNUMERO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.PoscorCodigo)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("POSCOR_CODIGO");

                entity.Property(e => e.PoscorCorrelativo).HasColumnName("POSCOR_CORRELATIVO");

                entity.Property(e => e.PoscorCorte).HasColumnName("POSCOR_CORTE");

                entity.Property(e => e.PoscorCortex).HasColumnName("POSCOR_CORTEX");

                entity.Property(e => e.PoscorCortez).HasColumnName("POSCOR_CORTEZ");

                entity.Property(e => e.PoscorGrantotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("POSCOR_GRANTOTAL");

                entity.Property(e => e.PoscorHold).HasColumnName("POSCOR_HOLD");

                entity.Property(e => e.PoscorMovscaja).HasColumnName("POSCOR_MOVSCAJA");

                entity.Property(e => e.PoscorTerminal).HasColumnName("POSCOR_TERMINAL");

                entity.Property(e => e.PoscorTienda)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("POSCOR_TIENDA");

                entity.Property(e => e.PoscorVehfactura).HasColumnName("POSCOR_VEHFACTURA");

                entity.Property(e => e.PoscorVehnumero).HasColumnName("POSCOR_VEHNUMERO");
            });

            modelBuilder.Entity<PosOfMayPct>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("POS_OF_MAY_PCT");

                entity.HasIndex(e => new { e.OpmpEmpresa, e.OpmpInventario, e.OpmpCantidad }, "IDX_OF_MAYOR_PCT")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.OpmpActiva).HasColumnName("OPMP_ACTIVA");

                entity.Property(e => e.OpmpCantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("OPMP_CANTIDAD");

                entity.Property(e => e.OpmpEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("OPMP_EMPRESA");

                entity.Property(e => e.OpmpFinal)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("OPMP_FINAL");

                entity.Property(e => e.OpmpInicio)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("OPMP_INICIO");

                entity.Property(e => e.OpmpInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("OPMP_INVENTARIO");

                entity.Property(e => e.OpmpPrecio)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("OPMP_PRECIO");

                entity.Property(e => e.OpmpTexto)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("OPMP_TEXTO");
            });

            modelBuilder.Entity<PosOfertaDium>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("POS_OFERTA_DIA");

                entity.HasIndex(e => new { e.OfpdEmpresa, e.OfpdInventario }, "IDX_OF_DIA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.OfpdActiva).HasColumnName("OFPD_ACTIVA");

                entity.Property(e => e.OfpdDomingo).HasColumnName("OFPD_DOMINGO");

                entity.Property(e => e.OfpdEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("OFPD_EMPRESA");

                entity.Property(e => e.OfpdInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("OFPD_INVENTARIO");

                entity.Property(e => e.OfpdJueves).HasColumnName("OFPD_JUEVES");

                entity.Property(e => e.OfpdLunes).HasColumnName("OFPD_LUNES");

                entity.Property(e => e.OfpdMartes).HasColumnName("OFPD_MARTES");

                entity.Property(e => e.OfpdMiercoles).HasColumnName("OFPD_MIERCOLES");

                entity.Property(e => e.OfpdPrecio)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("OFPD_PRECIO");

                entity.Property(e => e.OfpdSabado).HasColumnName("OFPD_SABADO");

                entity.Property(e => e.OfpdTexto)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("OFPD_TEXTO");

                entity.Property(e => e.OfpdViernes).HasColumnName("OFPD_VIERNES");
            });

            modelBuilder.Entity<PosOfertaMayor>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("POS_OFERTA_MAYOR");

                entity.HasIndex(e => new { e.OfpmEmpresa, e.OfpmInventario, e.OfpmCantidad }, "IDX_OF_MAYOR")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.OfpmActiva).HasColumnName("OFPM_ACTIVA");

                entity.Property(e => e.OfpmCantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("OFPM_CANTIDAD");

                entity.Property(e => e.OfpmEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("OFPM_EMPRESA");

                entity.Property(e => e.OfpmInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("OFPM_INVENTARIO");

                entity.Property(e => e.OfpmPrecio)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("OFPM_PRECIO");

                entity.Property(e => e.OfpmTexto)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("OFPM_TEXTO");
            });

            modelBuilder.Entity<PrAdminReporte>(entity =>
            {
                entity.HasKey(e => e.RptCorrelativo);

                entity.ToTable("PR_ADMIN_REPORTES");

                entity.Property(e => e.RptCorrelativo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("rpt_correlativo");

                entity.Property(e => e.RptDirRep)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("rpt_dir_rep");

                entity.Property(e => e.RptError)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("rpt_error");

                entity.Property(e => e.RptFechaHora)
                    .HasColumnType("datetime")
                    .HasColumnName("rpt_fecha_hora");

                entity.Property(e => e.RptNomRep)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("rpt_nom_rep");

                entity.Property(e => e.RptP01)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("rpt_p01");

                entity.Property(e => e.RptP02)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("rpt_p02");

                entity.Property(e => e.RptP03)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("rpt_p03");

                entity.Property(e => e.RptP04)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("rpt_p04");

                entity.Property(e => e.RptP05)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("rpt_p05");

                entity.Property(e => e.RptP06)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("rpt_p06");

                entity.Property(e => e.RptP07)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("rpt_p07");

                entity.Property(e => e.RptP08)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("rpt_p08");

                entity.Property(e => e.RptP09)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("rpt_p09");

                entity.Property(e => e.RptP10)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("rpt_p10");

                entity.Property(e => e.RptP11)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("rpt_p11");

                entity.Property(e => e.RptP12)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("rpt_p12");

                entity.Property(e => e.RptP13)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("rpt_p13");

                entity.Property(e => e.RptP14)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("rpt_p14");

                entity.Property(e => e.RptP15)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("rpt_p15");

                entity.Property(e => e.RptP16)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("rpt_p16");

                entity.Property(e => e.RptP17)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("rpt_p17");

                entity.Property(e => e.RptP18)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("rpt_p18");

                entity.Property(e => e.RptP19)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("rpt_p19");

                entity.Property(e => e.RptP20)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("rpt_p20");

                entity.Property(e => e.RptStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("rpt_status");

                entity.Property(e => e.RptTipoRep)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("rpt_tipo_rep");

                entity.Property(e => e.RptUsuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("rpt_usuario");
            });

            modelBuilder.Entity<PrAreaNegocio>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_AREA_NEGOCIO");

                entity.Property(e => e.AreanegCodigo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("areaneg_codigo");

                entity.Property(e => e.AreanegEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("areaneg_empresa");

                entity.Property(e => e.AreanegFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("areaneg_fechai");

                entity.Property(e => e.AreanegFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("areaneg_fecham");

                entity.Property(e => e.AreanegNombre)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("areaneg_nombre");

                entity.Property(e => e.AreanegUsuarioi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("areaneg_usuarioi");

                entity.Property(e => e.AreanegUsuariom)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("areaneg_usuariom");
            });

            modelBuilder.Entity<PrCcxpp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_CCXPP");

                entity.Property(e => e.CcppCodigo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ccpp_codigo");

                entity.Property(e => e.CcppCtaContable)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ccpp_cta_contable");

                entity.Property(e => e.CcppEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ccpp_empresa");

                entity.Property(e => e.CcppEstado)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ccpp_estado");

                entity.Property(e => e.CcppFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("ccpp_fechai");

                entity.Property(e => e.CcppFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("ccpp_fecham");

                entity.Property(e => e.CcppPartida)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ccpp_partida");

                entity.Property(e => e.CcppUsuarioi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ccpp_usuarioi");

                entity.Property(e => e.CcppUsuariom)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ccpp_usuariom");

                entity.Property(e => e.CcppVersion)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ccpp_version");
            });

            modelBuilder.Entity<PrConcepArea>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_CONCEP_AREA");

                entity.Property(e => e.ConareaArea)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("conarea_area");

                entity.Property(e => e.ConareaConcepto)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("conarea_concepto");

                entity.Property(e => e.ConareaEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("conarea_empresa");

                entity.Property(e => e.ConareaFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("conarea_fechai");

                entity.Property(e => e.ConareaFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("conarea_fecham");

                entity.Property(e => e.ConareaUsuarioi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("conarea_usuarioi");

                entity.Property(e => e.ConareaUsuariom)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("conarea_usuariom");
            });

            modelBuilder.Entity<PrConcepPartidum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_CONCEP_PARTIDA");

                entity.Property(e => e.ConcparCodigo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("concpar_codigo");

                entity.Property(e => e.ConcparDescrip)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("concpar_descrip");

                entity.Property(e => e.ConcparEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("concpar_empresa");

                entity.Property(e => e.ConcparFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("concpar_fechai");

                entity.Property(e => e.ConcparFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("concpar_fecham");

                entity.Property(e => e.ConcparNombre)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("concpar_nombre");

                entity.Property(e => e.ConcparUsuarioi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("concpar_usuarioi");

                entity.Property(e => e.ConcparUsuariom)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("concpar_usuariom");
            });

            modelBuilder.Entity<PrConfigReporte>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_CONFIG_REPORTES");

                entity.Property(e => e.CfgCodigo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("cfg_codigo");

                entity.Property(e => e.CfgEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("cfg_empresa");

                entity.Property(e => e.CfgFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("cfg_fechai");

                entity.Property(e => e.CfgPathWeb)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("cfg_path_web");

                entity.Property(e => e.CfgStatus)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cfg_status");

                entity.Property(e => e.CfgUsuarioi)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cfg_usuarioi");
            });

            modelBuilder.Entity<PrConfigTipo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_CONFIG_TIPO");

                entity.Property(e => e.CfgtCodigo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("cfgt_codigo");

                entity.Property(e => e.CfgtCorta)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cfgt_corta");

                entity.Property(e => e.CfgtDesc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("cfgt_desc");

                entity.Property(e => e.CfgtEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("cfgt_empresa");

                entity.Property(e => e.CfgtFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("cfgt_fechai");

                entity.Property(e => e.CfgtFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("cfgt_fecham");

                entity.Property(e => e.CfgtPadre)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("cfgt_padre");

                entity.Property(e => e.CfgtTipo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("cfgt_tipo");

                entity.Property(e => e.CfgtUsuarioi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cfgt_usuarioi");

                entity.Property(e => e.CfgtUsuariom)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cfgt_usuariom");

                entity.Property(e => e.CfgtValor)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("cfgt_valor");
            });

            modelBuilder.Entity<PrCorrelativo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_CORRELATIVOS");

                entity.Property(e => e.CorActual)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("cor_actual");

                entity.Property(e => e.CorCorrelativo)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cor_correlativo");

                entity.Property(e => e.CorEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("cor_empresa");

                entity.Property(e => e.CorFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("cor_fechai");

                entity.Property(e => e.CorUsuarioi)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cor_usuarioi");
            });

            modelBuilder.Entity<PrDefReporte>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_DEF_REPORTES");

                entity.Property(e => e.DefCorrelativo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("def_correlativo");

                entity.Property(e => e.DefEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("def_empresa");

                entity.Property(e => e.DefNomRep)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("def_nom_rep");

                entity.Property(e => e.DefNomfRep)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("def_nomf_rep");

                entity.Property(e => e.DefP01)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("def_p01");

                entity.Property(e => e.DefP02)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("def_p02");

                entity.Property(e => e.DefP03)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("def_p03");

                entity.Property(e => e.DefP04)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("def_p04");

                entity.Property(e => e.DefP05)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("def_p05");

                entity.Property(e => e.DefP06)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("def_p06");

                entity.Property(e => e.DefP07)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("def_p07");

                entity.Property(e => e.DefP08)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("def_p08");

                entity.Property(e => e.DefP09)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("def_p09");

                entity.Property(e => e.DefP10)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("def_p10");

                entity.Property(e => e.DefP11)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("def_p11");

                entity.Property(e => e.DefP12)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("def_p12");

                entity.Property(e => e.DefP13)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("def_p13");

                entity.Property(e => e.DefP14)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("def_p14");

                entity.Property(e => e.DefP15)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("def_p15");

                entity.Property(e => e.DefP16)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("def_p16");

                entity.Property(e => e.DefP17)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("def_p17");

                entity.Property(e => e.DefP18)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("def_p18");

                entity.Property(e => e.DefP19)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("def_p19");

                entity.Property(e => e.DefP20)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("def_p20");
            });

            modelBuilder.Entity<PrDepartamento>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_DEPARTAMENTO");

                entity.Property(e => e.DeptoCodigo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("depto_codigo");

                entity.Property(e => e.DeptoEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("depto_empresa");

                entity.Property(e => e.DeptoEncargado)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("depto_encargado");

                entity.Property(e => e.DeptoEstado)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("depto_estado");

                entity.Property(e => e.DeptoFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("depto_fechai");

                entity.Property(e => e.DeptoFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("depto_fecham");

                entity.Property(e => e.DeptoInbox)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("depto_inbox");

                entity.Property(e => e.DeptoNombre)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("depto_nombre");

                entity.Property(e => e.DeptoNomcorto)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("depto_nomcorto");

                entity.Property(e => e.DeptoUsuarioi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("depto_usuarioi");

                entity.Property(e => e.DeptoUsuariom)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("depto_usuariom");
            });

            modelBuilder.Entity<PrEjecPresup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_EJEC_PRESUP");

                entity.Property(e => e.EjpCantUnid)
                    .HasColumnType("decimal(18, 4)")
                    .HasColumnName("ejp_cant_unid");

                entity.Property(e => e.EjpCodInventario)
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("ejp_cod_inventario");

                entity.Property(e => e.EjpCodigo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ejp_codigo");

                entity.Property(e => e.EjpCuentaBancaria)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ejp_cuenta_bancaria");

                entity.Property(e => e.EjpDescripcion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ejp_descripcion");

                entity.Property(e => e.EjpEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ejp_empresa");

                entity.Property(e => e.EjpEstado)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ejp_estado");

                entity.Property(e => e.EjpFacturaCompra)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ejp_factura_compra");

                entity.Property(e => e.EjpFechaTrans)
                    .HasColumnType("datetime")
                    .HasColumnName("ejp_fecha_trans");

                entity.Property(e => e.EjpFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("ejp_fechai");

                entity.Property(e => e.EjpFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("ejp_fecham");

                entity.Property(e => e.EjpLineaInventario)
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("ejp_linea_inventario");

                entity.Property(e => e.EjpMesEjec).HasColumnName("ejp_mes_ejec");

                entity.Property(e => e.EjpMesParcont)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ejp_mes_parcont");

                entity.Property(e => e.EjpMonedaBase)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("ejp_moneda_base");

                entity.Property(e => e.EjpMonedaEjecucion)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("ejp_moneda_ejecucion");

                entity.Property(e => e.EjpMonedaReferencia)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("ejp_moneda_referencia");

                entity.Property(e => e.EjpNumcheque)
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("ejp_numcheque");

                entity.Property(e => e.EjpNumctacontable)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ejp_numctacontable");

                entity.Property(e => e.EjpNumversion)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ejp_numversion");

                entity.Property(e => e.EjpObservacion)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("ejp_observacion");

                entity.Property(e => e.EjpOrdenCompra)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ejp_orden_compra");

                entity.Property(e => e.EjpPartidaContable)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ejp_partida_contable");

                entity.Property(e => e.EjpPartidaPresup)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ejp_partida_presup");

                entity.Property(e => e.EjpProyectoPresup)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ejp_proyecto_presup");

                entity.Property(e => e.EjpSerie)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ejp_serie");

                entity.Property(e => e.EjpTasaMonbase)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ejp_tasa_monbase");

                entity.Property(e => e.EjpTasaMonejecucion)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ejp_tasa_monejecucion");

                entity.Property(e => e.EjpTasaMonreferencia)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ejp_tasa_monreferencia");

                entity.Property(e => e.EjpTipoOrigentrans)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ejp_tipo_origentrans");

                entity.Property(e => e.EjpUsrAutoriza)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ejp_usr_autoriza");

                entity.Property(e => e.EjpUsrConfirma)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ejp_usr_confirma");

                entity.Property(e => e.EjpUsrSolicita)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("ejp_usr_solicita");

                entity.Property(e => e.EjpUsuarioi)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ejp_usuarioi");

                entity.Property(e => e.EjpUsuariom)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("ejp_usuariom");

                entity.Property(e => e.EjpValorEjecutado)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("ejp_valor_ejecutado");

                entity.Property(e => e.EjpValorEjecutadoMe)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("ejp_valor_ejecutado_me");

                entity.Property(e => e.EjpValorEjecutadoMr)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("ejp_valor_ejecutado_mr");

                entity.Property(e => e.EjpValorReserva)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("ejp_valor_reserva");

                entity.Property(e => e.EjpValorReservaMe)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("ejp_valor_reserva_me");

                entity.Property(e => e.EjpValorReservaMr)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("ejp_valor_reserva_mr");
            });

            modelBuilder.Entity<PrEmpresa>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_EMPRESAS");

                entity.Property(e => e.EmpCodigo)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("emp_codigo");

                entity.Property(e => e.EmpCodmonedaBase)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("emp_codmoneda_base");

                entity.Property(e => e.EmpCodmonedaEjecucion)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("emp_codmoneda_ejecucion");

                entity.Property(e => e.EmpCodmonedaReferencia)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("emp_codmoneda_referencia");

                entity.Property(e => e.EmpDescripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("emp_descripcion");

                entity.Property(e => e.EmpEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("emp_empresa");

                entity.Property(e => e.EmpFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("emp_fechai");

                entity.Property(e => e.EmpFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("emp_fecham");

                entity.Property(e => e.EmpMesiniCiclo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("emp_mesini_ciclo");

                entity.Property(e => e.EmpModuloq)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("emp_moduloq");

                entity.Property(e => e.EmpMonedaBase)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("emp_moneda_base");

                entity.Property(e => e.EmpMonedaEjecucion)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("emp_moneda_ejecucion");

                entity.Property(e => e.EmpMonedaReferencia)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("emp_moneda_referencia");

                entity.Property(e => e.EmpMonedaq)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("emp_monedaq");

                entity.Property(e => e.EmpNivelsubp)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("emp_nivelsubp");

                entity.Property(e => e.EmpNombre)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("emp_nombre");

                entity.Property(e => e.EmpUsuarioi)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("emp_usuarioi");

                entity.Property(e => e.EmpUsuariom)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("emp_usuariom");

                entity.Property(e => e.EmpVersionActiva)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("emp_version_activa");
            });

            modelBuilder.Entity<PrExplosion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_EXPLOSION");

                entity.Property(e => e.ExpCantexp)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("exp_cantexp");

                entity.Property(e => e.ExpCantproducir)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("exp_cantproducir");

                entity.Property(e => e.ExpCodigo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("exp_codigo");

                entity.Property(e => e.ExpCodinventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("exp_codinventario");

                entity.Property(e => e.ExpCodinventexp)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("exp_codinventexp");

                entity.Property(e => e.ExpCodpartida)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("exp_codpartida");

                entity.Property(e => e.ExpCodproyecto)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("exp_codproyecto");

                entity.Property(e => e.ExpCodversion)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("exp_codversion");

                entity.Property(e => e.ExpEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("exp_empresa");

                entity.Property(e => e.ExpEstado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("exp_estado");

                entity.Property(e => e.ExpNivel)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("exp_nivel");

                entity.Property(e => e.ExpVersion)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("exp_version");
            });

            modelBuilder.Entity<PrExplosionAnual>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_EXPLOSION_ANUAL");

                entity.Property(e => e.ExpCantexpPre1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("exp_cantexp_pre1");

                entity.Property(e => e.ExpCantexpPre10)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("exp_cantexp_pre10");

                entity.Property(e => e.ExpCantexpPre11)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("exp_cantexp_pre11");

                entity.Property(e => e.ExpCantexpPre12)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("exp_cantexp_pre12");

                entity.Property(e => e.ExpCantexpPre2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("exp_cantexp_pre2");

                entity.Property(e => e.ExpCantexpPre3)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("exp_cantexp_pre3");

                entity.Property(e => e.ExpCantexpPre4)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("exp_cantexp_pre4");

                entity.Property(e => e.ExpCantexpPre5)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("exp_cantexp_pre5");

                entity.Property(e => e.ExpCantexpPre6)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("exp_cantexp_pre6");

                entity.Property(e => e.ExpCantexpPre7)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("exp_cantexp_pre7");

                entity.Property(e => e.ExpCantexpPre8)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("exp_cantexp_pre8");

                entity.Property(e => e.ExpCantexpPre9)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("exp_cantexp_pre9");

                entity.Property(e => e.ExpCantproducirPre1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("exp_cantproducir_pre1");

                entity.Property(e => e.ExpCantproducirPre10)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("exp_cantproducir_pre10");

                entity.Property(e => e.ExpCantproducirPre11)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("exp_cantproducir_pre11");

                entity.Property(e => e.ExpCantproducirPre12)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("exp_cantproducir_pre12");

                entity.Property(e => e.ExpCantproducirPre2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("exp_cantproducir_pre2");

                entity.Property(e => e.ExpCantproducirPre3)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("exp_cantproducir_pre3");

                entity.Property(e => e.ExpCantproducirPre4)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("exp_cantproducir_pre4");

                entity.Property(e => e.ExpCantproducirPre5)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("exp_cantproducir_pre5");

                entity.Property(e => e.ExpCantproducirPre6)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("exp_cantproducir_pre6");

                entity.Property(e => e.ExpCantproducirPre7)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("exp_cantproducir_pre7");

                entity.Property(e => e.ExpCantproducirPre8)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("exp_cantproducir_pre8");

                entity.Property(e => e.ExpCantproducirPre9)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("exp_cantproducir_pre9");

                entity.Property(e => e.ExpCodigo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("exp_codigo");

                entity.Property(e => e.ExpCodinventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("exp_codinventario");

                entity.Property(e => e.ExpCodinventexp)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("exp_codinventexp");

                entity.Property(e => e.ExpCodpartida)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("exp_codpartida");

                entity.Property(e => e.ExpCodproyecto)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("exp_codproyecto");

                entity.Property(e => e.ExpEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("exp_empresa");

                entity.Property(e => e.ExpEstado)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("exp_estado");

                entity.Property(e => e.ExpFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("exp_fechai");

                entity.Property(e => e.ExpNivel)
                    .HasColumnType("decimal(18, 13)")
                    .HasColumnName("exp_nivel");

                entity.Property(e => e.ExpUsuarioi)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("exp_usuarioi");

                entity.Property(e => e.ExpVersion)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("exp_version");
            });

            modelBuilder.Entity<PrFormulacionDetail>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_FORMULACION_DETAIL");

                entity.Property(e => e.DforArticulo)
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("dfor_articulo");

                entity.Property(e => e.DforArticuloPadre)
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("dfor_articulo_padre");

                entity.Property(e => e.DforBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("dfor_bodega");

                entity.Property(e => e.DforCantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("dfor_cantidad");

                entity.Property(e => e.DforCodigo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("dfor_codigo");

                entity.Property(e => e.DforEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("dfor_empresa");

                entity.Property(e => e.DforEstado)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("dfor_estado");

                entity.Property(e => e.DforFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("dfor_fechai");

                entity.Property(e => e.DforFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("dfor_fecham");

                entity.Property(e => e.DforUsuarioi)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dfor_usuarioi");

                entity.Property(e => e.DforUsuariom)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("dfor_usuariom");
            });

            modelBuilder.Entity<PrFormulacionHeader>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_FORMULACION_HEADER");

                entity.Property(e => e.HforActiva)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("hfor_activa");

                entity.Property(e => e.HforArticulo)
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("hfor_articulo");

                entity.Property(e => e.HforCantidad)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("hfor_cantidad");

                entity.Property(e => e.HforCodigo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("hfor_codigo");

                entity.Property(e => e.HforDpto)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("hfor_dpto");

                entity.Property(e => e.HforEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("hfor_empresa");

                entity.Property(e => e.HforFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("hfor_fechai");

                entity.Property(e => e.HforFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("hfor_fecham");

                entity.Property(e => e.HforModuloBatch)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("hfor_modulo_batch");

                entity.Property(e => e.HforNivel)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("hfor_nivel");

                entity.Property(e => e.HforPlantilla)
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("hfor_plantilla");

                entity.Property(e => e.HforUsuarioi)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("hfor_usuarioi");

                entity.Property(e => e.HforUsuariom)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("hfor_usuariom");
            });

            modelBuilder.Entity<PrFunModulo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_FUN_MODULO");

                entity.Property(e => e.FunmCodFuncionalidad)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("funm_cod_funcionalidad");

                entity.Property(e => e.FunmEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("funm_empresa");

                entity.Property(e => e.FunmEstado).HasColumnName("funm_estado");

                entity.Property(e => e.FunmTipoModulo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("funm_tipo_modulo");
            });

            modelBuilder.Entity<PrFuncionalidad>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_FUNCIONALIDAD");

                entity.Property(e => e.FunCodFuncionalidad)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("fun_cod_funcionalidad");

                entity.Property(e => e.FunCodPadre)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("fun_cod_padre");

                entity.Property(e => e.FunCodigo)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("fun_codigo");

                entity.Property(e => e.FunEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("fun_empresa");

                entity.Property(e => e.FunEstructura)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("fun_estructura");

                entity.Property(e => e.FunMenuPadre)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("fun_menu_padre");

                entity.Property(e => e.FunNivel)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("fun_nivel");

                entity.Property(e => e.FunNombreMenu)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("fun_nombre_menu");

                entity.Property(e => e.FunPagina)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("fun_pagina");

                entity.Property(e => e.FunTituloPagina)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("fun_titulo_pagina");
            });

            modelBuilder.Entity<PrGrupo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_GRUPO");

                entity.Property(e => e.GrpArea)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("grp_area");

                entity.Property(e => e.GrpBuzon)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("grp_buzon");

                entity.Property(e => e.GrpCodigo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("grp_codigo");

                entity.Property(e => e.GrpContacto)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("grp_contacto");

                entity.Property(e => e.GrpDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("grp_direccion");

                entity.Property(e => e.GrpEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("grp_empresa");

                entity.Property(e => e.GrpEstado)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("grp_estado");

                entity.Property(e => e.GrpFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("grp_fechai");

                entity.Property(e => e.GrpFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("grp_fecham");

                entity.Property(e => e.GrpMail)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("grp_mail");

                entity.Property(e => e.GrpNombre)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("grp_nombre");

                entity.Property(e => e.GrpTipo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("grp_tipo");

                entity.Property(e => e.GrpUsuario)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("grp_usuario");

                entity.Property(e => e.GrpUsuarioi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("grp_usuarioi");

                entity.Property(e => e.GrpUsuariom)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("grp_usuariom");
            });

            modelBuilder.Entity<PrLineaProduc>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_LINEA_PRODUC");

                entity.Property(e => e.LinproCodigo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("linpro_codigo");

                entity.Property(e => e.LinproEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("linpro_empresa");

                entity.Property(e => e.LinproFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("linpro_fechai");

                entity.Property(e => e.LinproFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("linpro_fecham");

                entity.Property(e => e.LinproNombre)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("linpro_nombre");

                entity.Property(e => e.LinproUsuarioi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("linpro_usuarioi");

                entity.Property(e => e.LinproUsuariom)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("linpro_usuariom");
            });

            modelBuilder.Entity<PrMbgrupo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_MBGRUPO");

                entity.Property(e => e.MbgCodigo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("mbg_codigo");

                entity.Property(e => e.MbgEjecucion)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("mbg_ejecucion");

                entity.Property(e => e.MbgEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("mbg_empresa");

                entity.Property(e => e.MbgEstado)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("mbg_estado");

                entity.Property(e => e.MbgFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("mbg_fechai");

                entity.Property(e => e.MbgFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("mbg_fecham");

                entity.Property(e => e.MbgGrupo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("mbg_grupo");

                entity.Property(e => e.MbgJefe)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("mbg_jefe");

                entity.Property(e => e.MbgTipo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("mbg_tipo");

                entity.Property(e => e.MbgUsuario)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("mbg_usuario");

                entity.Property(e => e.MbgUsuarioi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("mbg_usuarioi");

                entity.Property(e => e.MbgUsuariom)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("mbg_usuariom");
            });

            modelBuilder.Entity<PrMoneda>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_MONEDAS");

                entity.Property(e => e.MonCodigo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("MON_CODIGO");

                entity.Property(e => e.MonEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MON_EMPRESA");

                entity.Property(e => e.MonFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("MON_FECHAI");

                entity.Property(e => e.MonFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("MON_FECHAM");

                entity.Property(e => e.MonMoneda)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("MON_MONEDA");

                entity.Property(e => e.MonNombre)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("MON_NOMBRE");

                entity.Property(e => e.MonReferencia)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("MON_REFERENCIA");

                entity.Property(e => e.MonUsuarioi)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MON_USUARIOI");

                entity.Property(e => e.MonUsuariom)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("MON_USUARIOM");
            });

            modelBuilder.Entity<PrPartidaPresup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_PARTIDA_PRESUP");

                entity.Property(e => e.ParAceptacargos)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("par_aceptacargos");

                entity.Property(e => e.ParAreanegocio)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("par_areanegocio");

                entity.Property(e => e.ParCodconcepto)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("par_codconcepto");

                entity.Property(e => e.ParCodgrupousuario)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("par_codgrupousuario");

                entity.Property(e => e.ParCodpartida)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("par_codpartida");

                entity.Property(e => e.ParCodpartidaAsoc)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("par_codpartida_asoc");

                entity.Property(e => e.ParCodpartidapadre)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("par_codpartidapadre");

                entity.Property(e => e.ParDescripcion)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("par_descripcion");

                entity.Property(e => e.ParEje1)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_eje1");

                entity.Property(e => e.ParEje10)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_eje10");

                entity.Property(e => e.ParEje11)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_eje11");

                entity.Property(e => e.ParEje12)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_eje12");

                entity.Property(e => e.ParEje2)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_eje2");

                entity.Property(e => e.ParEje3)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_eje3");

                entity.Property(e => e.ParEje4)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_eje4");

                entity.Property(e => e.ParEje5)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_eje5");

                entity.Property(e => e.ParEje6)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_eje6");

                entity.Property(e => e.ParEje7)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_eje7");

                entity.Property(e => e.ParEje8)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_eje8");

                entity.Property(e => e.ParEje9)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_eje9");

                entity.Property(e => e.ParEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("par_empresa");

                entity.Property(e => e.ParFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("par_fechai");

                entity.Property(e => e.ParFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("par_fecham");

                entity.Property(e => e.ParImpCf).HasColumnName("par_imp_cf");

                entity.Property(e => e.ParImpRep)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("par_imp_rep");

                entity.Property(e => e.ParMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("par_moneda");

                entity.Property(e => e.ParMov1)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_mov1");

                entity.Property(e => e.ParMov10)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_mov10");

                entity.Property(e => e.ParMov11)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_mov11");

                entity.Property(e => e.ParMov12)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_mov12");

                entity.Property(e => e.ParMov2)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_mov2");

                entity.Property(e => e.ParMov3)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_mov3");

                entity.Property(e => e.ParMov4)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_mov4");

                entity.Property(e => e.ParMov5)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_mov5");

                entity.Property(e => e.ParMov6)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_mov6");

                entity.Property(e => e.ParMov7)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_mov7");

                entity.Property(e => e.ParMov8)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_mov8");

                entity.Property(e => e.ParMov9)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_mov9");

                entity.Property(e => e.ParNivel)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("par_nivel");

                entity.Property(e => e.ParNompartida)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("par_nompartida");

                entity.Property(e => e.ParNumpartida)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("par_numpartida");

                entity.Property(e => e.ParOrden)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("par_orden");

                entity.Property(e => e.ParSaldo)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_saldo");

                entity.Property(e => e.ParSaldo1)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_saldo1");

                entity.Property(e => e.ParSaldo10)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_saldo10");

                entity.Property(e => e.ParSaldo11)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_saldo11");

                entity.Property(e => e.ParSaldo12)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_saldo12");

                entity.Property(e => e.ParSaldo2)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_saldo2");

                entity.Property(e => e.ParSaldo3)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_saldo3");

                entity.Property(e => e.ParSaldo4)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_saldo4");

                entity.Property(e => e.ParSaldo5)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_saldo5");

                entity.Property(e => e.ParSaldo6)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_saldo6");

                entity.Property(e => e.ParSaldo7)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_saldo7");

                entity.Property(e => e.ParSaldo8)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_saldo8");

                entity.Property(e => e.ParSaldo9)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_saldo9");

                entity.Property(e => e.ParTipopartida)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("par_tipopartida");

                entity.Property(e => e.ParTipopresupuesto)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("par_tipopresupuesto");

                entity.Property(e => e.ParTipoproyecto)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("par_tipoproyecto");

                entity.Property(e => e.ParUndo)
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("par_undo");

                entity.Property(e => e.ParUsuarioi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("par_usuarioi");

                entity.Property(e => e.ParUsuariom)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("par_usuariom");

                entity.Property(e => e.ParValor1)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_valor1");

                entity.Property(e => e.ParValor10)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_valor10");

                entity.Property(e => e.ParValor11)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_valor11");

                entity.Property(e => e.ParValor12)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_valor12");

                entity.Property(e => e.ParValor2)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_valor2");

                entity.Property(e => e.ParValor3)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_valor3");

                entity.Property(e => e.ParValor4)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_valor4");

                entity.Property(e => e.ParValor5)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_valor5");

                entity.Property(e => e.ParValor6)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_valor6");

                entity.Property(e => e.ParValor7)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_valor7");

                entity.Property(e => e.ParValor8)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_valor8");

                entity.Property(e => e.ParValor9)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_valor9");

                entity.Property(e => e.ParValortotal)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("par_valortotal");

                entity.Property(e => e.ParVersion)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("par_version");
            });

            modelBuilder.Entity<PrPartidaProy>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_PARTIDA_PROY");

                entity.Property(e => e.ProyCantUnidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_cant_unidad");

                entity.Property(e => e.ProyCodInv)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("proy_cod_inv");

                entity.Property(e => e.ProyCodLinea)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("proy_cod_linea");

                entity.Property(e => e.ProyCodigo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("proy_codigo");

                entity.Property(e => e.ProyCostoHmod)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("proy_costo_hmod");

                entity.Property(e => e.ProyDescripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("proy_descripcion");

                entity.Property(e => e.ProyEmpresa)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("proy_empresa");

                entity.Property(e => e.ProyFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("proy_fechai");

                entity.Property(e => e.ProyFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("proy_fecham");

                entity.Property(e => e.ProyGrupo).HasColumnName("proy_grupo");

                entity.Property(e => e.ProyHorasMod)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("proy_horas_mod");

                entity.Property(e => e.ProyMesEjec).HasColumnName("proy_mes_ejec");

                entity.Property(e => e.ProyNombre)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("proy_nombre");

                entity.Property(e => e.ProyOrigen)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("proy_origen");

                entity.Property(e => e.ProyPartida)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("proy_partida");

                entity.Property(e => e.ProyPrecio)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("proy_precio");

                entity.Property(e => e.ProyUsuarioi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("proy_usuarioi");

                entity.Property(e => e.ProyUsuariom)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("proy_usuariom");

                entity.Property(e => e.ProyValorTotal)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("proy_valor_total");

                entity.Property(e => e.ProyValorUni)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_valor_uni");

                entity.Property(e => e.ProyVersion)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("proy_version");
            });

            modelBuilder.Entity<PrPartidaProyAnual>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_PARTIDA_PROY_ANUAL");

                entity.Property(e => e.ProyCantidadPre1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_cantidad_pre1");

                entity.Property(e => e.ProyCantidadPre10)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_cantidad_pre10");

                entity.Property(e => e.ProyCantidadPre11)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_cantidad_pre11");

                entity.Property(e => e.ProyCantidadPre12)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_cantidad_pre12");

                entity.Property(e => e.ProyCantidadPre2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_cantidad_pre2");

                entity.Property(e => e.ProyCantidadPre3)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_cantidad_pre3");

                entity.Property(e => e.ProyCantidadPre4)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_cantidad_pre4");

                entity.Property(e => e.ProyCantidadPre5)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_cantidad_pre5");

                entity.Property(e => e.ProyCantidadPre6)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_cantidad_pre6");

                entity.Property(e => e.ProyCantidadPre7)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_cantidad_pre7");

                entity.Property(e => e.ProyCantidadPre8)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_cantidad_pre8");

                entity.Property(e => e.ProyCantidadPre9)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_cantidad_pre9");

                entity.Property(e => e.ProyCodInv)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("proy_cod_inv");

                entity.Property(e => e.ProyCodLinea)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("proy_cod_linea");

                entity.Property(e => e.ProyCodigo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("proy_codigo");

                entity.Property(e => e.ProyDescripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("proy_descripcion");

                entity.Property(e => e.ProyEmpresa)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("proy_empresa");

                entity.Property(e => e.ProyEstado)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("proy_estado");

                entity.Property(e => e.ProyFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("proy_fechai");

                entity.Property(e => e.ProyFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("proy_fecham");

                entity.Property(e => e.ProyNombre)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("proy_nombre");

                entity.Property(e => e.ProyOrigen)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("proy_origen");

                entity.Property(e => e.ProyPartida)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("proy_partida");

                entity.Property(e => e.ProyTipo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("proy_tipo");

                entity.Property(e => e.ProyTotalEje1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_eje1");

                entity.Property(e => e.ProyTotalEje10)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_eje10");

                entity.Property(e => e.ProyTotalEje11)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_eje11");

                entity.Property(e => e.ProyTotalEje12)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_eje12");

                entity.Property(e => e.ProyTotalEje2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_eje2");

                entity.Property(e => e.ProyTotalEje3)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_eje3");

                entity.Property(e => e.ProyTotalEje4)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_eje4");

                entity.Property(e => e.ProyTotalEje5)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_eje5");

                entity.Property(e => e.ProyTotalEje6)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_eje6");

                entity.Property(e => e.ProyTotalEje7)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_eje7");

                entity.Property(e => e.ProyTotalEje8)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_eje8");

                entity.Property(e => e.ProyTotalEje9)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_eje9");

                entity.Property(e => e.ProyTotalMov1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_mov1");

                entity.Property(e => e.ProyTotalMov10)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_mov10");

                entity.Property(e => e.ProyTotalMov11)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_mov11");

                entity.Property(e => e.ProyTotalMov12)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_mov12");

                entity.Property(e => e.ProyTotalMov2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_mov2");

                entity.Property(e => e.ProyTotalMov3)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_mov3");

                entity.Property(e => e.ProyTotalMov4)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_mov4");

                entity.Property(e => e.ProyTotalMov5)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_mov5");

                entity.Property(e => e.ProyTotalMov6)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_mov6");

                entity.Property(e => e.ProyTotalMov7)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_mov7");

                entity.Property(e => e.ProyTotalMov8)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_mov8");

                entity.Property(e => e.ProyTotalMov9)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_mov9");

                entity.Property(e => e.ProyTotalPre1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_pre1");

                entity.Property(e => e.ProyTotalPre10)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_pre10");

                entity.Property(e => e.ProyTotalPre11)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_pre11");

                entity.Property(e => e.ProyTotalPre12)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_pre12");

                entity.Property(e => e.ProyTotalPre2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_pre2");

                entity.Property(e => e.ProyTotalPre3)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_pre3");

                entity.Property(e => e.ProyTotalPre4)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_pre4");

                entity.Property(e => e.ProyTotalPre5)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_pre5");

                entity.Property(e => e.ProyTotalPre6)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_pre6");

                entity.Property(e => e.ProyTotalPre7)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_pre7");

                entity.Property(e => e.ProyTotalPre8)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_pre8");

                entity.Property(e => e.ProyTotalPre9)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_pre9");

                entity.Property(e => e.ProyTotalSal1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_sal1");

                entity.Property(e => e.ProyTotalSal10)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_sal10");

                entity.Property(e => e.ProyTotalSal11)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_sal11");

                entity.Property(e => e.ProyTotalSal12)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_sal12");

                entity.Property(e => e.ProyTotalSal2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_sal2");

                entity.Property(e => e.ProyTotalSal3)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_sal3");

                entity.Property(e => e.ProyTotalSal4)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_sal4");

                entity.Property(e => e.ProyTotalSal5)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_sal5");

                entity.Property(e => e.ProyTotalSal6)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_sal6");

                entity.Property(e => e.ProyTotalSal7)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_sal7");

                entity.Property(e => e.ProyTotalSal8)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_sal8");

                entity.Property(e => e.ProyTotalSal9)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_total_sal9");

                entity.Property(e => e.ProyUsuarioi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("proy_usuarioi");

                entity.Property(e => e.ProyUsuariom)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("proy_usuariom");

                entity.Property(e => e.ProyValorPre1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_valor_pre1");

                entity.Property(e => e.ProyValorPre10)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_valor_pre10");

                entity.Property(e => e.ProyValorPre11)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_valor_pre11");

                entity.Property(e => e.ProyValorPre12)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_valor_pre12");

                entity.Property(e => e.ProyValorPre2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_valor_pre2");

                entity.Property(e => e.ProyValorPre3)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_valor_pre3");

                entity.Property(e => e.ProyValorPre4)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_valor_pre4");

                entity.Property(e => e.ProyValorPre5)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_valor_pre5");

                entity.Property(e => e.ProyValorPre6)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_valor_pre6");

                entity.Property(e => e.ProyValorPre7)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_valor_pre7");

                entity.Property(e => e.ProyValorPre8)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_valor_pre8");

                entity.Property(e => e.ProyValorPre9)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("proy_valor_pre9");

                entity.Property(e => e.ProyVersion)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("proy_version");
            });

            modelBuilder.Entity<PrPartidaTran>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_PARTIDA_TRANS");

                entity.Property(e => e.TransCodigo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("trans_codigo");

                entity.Property(e => e.TransEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("trans_empresa");

                entity.Property(e => e.TransFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("trans_fechai");

                entity.Property(e => e.TransFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("trans_fecham");

                entity.Property(e => e.TransMesEjec)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("trans_mes_ejec");

                entity.Property(e => e.TransPartida)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("trans_partida");

                entity.Property(e => e.TransProyDestino)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("trans_proy_destino");

                entity.Property(e => e.TransProyOrigen)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("trans_proy_origen");

                entity.Property(e => e.TransTipo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("trans_tipo");

                entity.Property(e => e.TransUsuarioi)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("trans_usuarioi");

                entity.Property(e => e.TransUsuariom)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("trans_usuariom");

                entity.Property(e => e.TransValorTotal)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("trans_valor_total");

                entity.Property(e => e.TransVersion)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("trans_version");
            });

            modelBuilder.Entity<PrPartidaTransAnual>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_PARTIDA_TRANS_ANUAL");

                entity.Property(e => e.TransCodigo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("trans_codigo");

                entity.Property(e => e.TransDescripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("trans_descripcion");

                entity.Property(e => e.TransEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("trans_empresa");

                entity.Property(e => e.TransEstado)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("trans_estado");

                entity.Property(e => e.TransFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("trans_fechai");

                entity.Property(e => e.TransFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("trans_fecham");

                entity.Property(e => e.TransMov)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("trans_mov");

                entity.Property(e => e.TransPartidaDestino)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("trans_partida_destino");

                entity.Property(e => e.TransPartidaOrigen)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("trans_partida_origen");

                entity.Property(e => e.TransProyDestino)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("trans_proy_destino");

                entity.Property(e => e.TransProyOrigen)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("trans_proy_origen");

                entity.Property(e => e.TransTipo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("trans_tipo");

                entity.Property(e => e.TransTotalMov1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("trans_total_mov1");

                entity.Property(e => e.TransTotalMov10)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("trans_total_mov10");

                entity.Property(e => e.TransTotalMov11)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("trans_total_mov11");

                entity.Property(e => e.TransTotalMov12)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("trans_total_mov12");

                entity.Property(e => e.TransTotalMov2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("trans_total_mov2");

                entity.Property(e => e.TransTotalMov3)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("trans_total_mov3");

                entity.Property(e => e.TransTotalMov4)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("trans_total_mov4");

                entity.Property(e => e.TransTotalMov5)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("trans_total_mov5");

                entity.Property(e => e.TransTotalMov6)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("trans_total_mov6");

                entity.Property(e => e.TransTotalMov7)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("trans_total_mov7");

                entity.Property(e => e.TransTotalMov8)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("trans_total_mov8");

                entity.Property(e => e.TransTotalMov9)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("trans_total_mov9");

                entity.Property(e => e.TransUsuarioi)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("trans_usuarioi");

                entity.Property(e => e.TransUsuariom)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("trans_usuariom");

                entity.Property(e => e.TransValorTotalActual)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("trans_valor_total_actual");

                entity.Property(e => e.TransValorTotalAnterior)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("trans_valor_total_anterior");

                entity.Property(e => e.TransValorTotalMovimiento)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("trans_valor_total_movimiento");

                entity.Property(e => e.TransVersion)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("trans_version");
            });

            modelBuilder.Entity<PrPerfil>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_PERFIL");

                entity.Property(e => e.PrfEliminacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("prf_eliminacion");

                entity.Property(e => e.PrfEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("prf_empresa");

                entity.Property(e => e.PrfEscritura)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("prf_escritura");

                entity.Property(e => e.PrfFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("prf_fechai");

                entity.Property(e => e.PrfFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("prf_fecham");

                entity.Property(e => e.PrfLectura)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("prf_lectura");

                entity.Property(e => e.PrfModificacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("prf_modificacion");

                entity.Property(e => e.PrfNombrePagina)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("prf_nombre_pagina");

                entity.Property(e => e.PrfNombrePerfil)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("prf_nombre_perfil");

                entity.Property(e => e.PrfUsuarioi)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("prf_usuarioi");

                entity.Property(e => e.PrfUsuariom)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("prf_usuariom");
            });

            modelBuilder.Entity<PrPuesto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_PUESTOS");

                entity.Property(e => e.PuestoCodEscpuesto)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("puesto_cod_escpuesto");

                entity.Property(e => e.PuestoCodGradoreq)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("puesto_cod_gradoreq");

                entity.Property(e => e.PuestoCodOrgnivel)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("puesto_cod_orgnivel");

                entity.Property(e => e.PuestoCodPuesto)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("puesto_cod_puesto");

                entity.Property(e => e.PuestoCodPuestosup)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("puesto_cod_puestosup");

                entity.Property(e => e.PuestoEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("puesto_empresa");

                entity.Property(e => e.PuestoEstrCodigo)
                    .HasColumnType("decimal(10, 0)")
                    .HasColumnName("puesto_estr_codigo");

                entity.Property(e => e.PuestoFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("puesto_fechai");

                entity.Property(e => e.PuestoFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("puesto_fecham");

                entity.Property(e => e.PuestoNomPuesto)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("puesto_nom_puesto");

                entity.Property(e => e.PuestoObservac1)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("puesto_observac1");

                entity.Property(e => e.PuestoObservac2)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("puesto_observac2");

                entity.Property(e => e.PuestoObservac3)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("puesto_observac3");

                entity.Property(e => e.PuestoSuelPuesto)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("puesto_suel_puesto");

                entity.Property(e => e.PuestoTotalPtos)
                    .HasColumnType("decimal(10, 2)")
                    .HasColumnName("puesto_total_ptos");

                entity.Property(e => e.PuestoUsuarioi)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("puesto_usuarioi");

                entity.Property(e => e.PuestoUsuariom)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("puesto_usuariom");
            });

            modelBuilder.Entity<PrReporteTmp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_REPORTE_TMP");

                entity.Property(e => e.PrRepCampo1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo1");

                entity.Property(e => e.PrRepCampo10)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo10");

                entity.Property(e => e.PrRepCampo11)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo11");

                entity.Property(e => e.PrRepCampo12)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo12");

                entity.Property(e => e.PrRepCampo13)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo13");

                entity.Property(e => e.PrRepCampo14)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo14");

                entity.Property(e => e.PrRepCampo15)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo15");

                entity.Property(e => e.PrRepCampo16)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo16");

                entity.Property(e => e.PrRepCampo17)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo17");

                entity.Property(e => e.PrRepCampo18)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo18");

                entity.Property(e => e.PrRepCampo19)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo19");

                entity.Property(e => e.PrRepCampo2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo2");

                entity.Property(e => e.PrRepCampo20)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo20");

                entity.Property(e => e.PrRepCampo21)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo21");

                entity.Property(e => e.PrRepCampo22)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo22");

                entity.Property(e => e.PrRepCampo23)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo23");

                entity.Property(e => e.PrRepCampo24)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo24");

                entity.Property(e => e.PrRepCampo25)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo25");

                entity.Property(e => e.PrRepCampo26)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo26");

                entity.Property(e => e.PrRepCampo27)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo27");

                entity.Property(e => e.PrRepCampo28)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo28");

                entity.Property(e => e.PrRepCampo29)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo29");

                entity.Property(e => e.PrRepCampo3)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo3");

                entity.Property(e => e.PrRepCampo30)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo30");

                entity.Property(e => e.PrRepCampo31)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo31");

                entity.Property(e => e.PrRepCampo32)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo32");

                entity.Property(e => e.PrRepCampo33)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo33");

                entity.Property(e => e.PrRepCampo34)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo34");

                entity.Property(e => e.PrRepCampo35)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo35");

                entity.Property(e => e.PrRepCampo36)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo36");

                entity.Property(e => e.PrRepCampo37)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo37");

                entity.Property(e => e.PrRepCampo38)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo38");

                entity.Property(e => e.PrRepCampo39)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo39");

                entity.Property(e => e.PrRepCampo4)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo4");

                entity.Property(e => e.PrRepCampo40)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo40");

                entity.Property(e => e.PrRepCampo41)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo41");

                entity.Property(e => e.PrRepCampo42)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo42");

                entity.Property(e => e.PrRepCampo43)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo43");

                entity.Property(e => e.PrRepCampo44)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo44");

                entity.Property(e => e.PrRepCampo45)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo45");

                entity.Property(e => e.PrRepCampo46)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo46");

                entity.Property(e => e.PrRepCampo47)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo47");

                entity.Property(e => e.PrRepCampo48)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo48");

                entity.Property(e => e.PrRepCampo49)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo49");

                entity.Property(e => e.PrRepCampo5)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo5");

                entity.Property(e => e.PrRepCampo50)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo50");

                entity.Property(e => e.PrRepCampo51)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo51");

                entity.Property(e => e.PrRepCampo52)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo52");

                entity.Property(e => e.PrRepCampo53)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo53");

                entity.Property(e => e.PrRepCampo6)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo6");

                entity.Property(e => e.PrRepCampo7)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo7");

                entity.Property(e => e.PrRepCampo8)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo8");

                entity.Property(e => e.PrRepCampo9)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_campo9");

                entity.Property(e => e.PrRepEmpresa)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_empresa");

                entity.Property(e => e.PrRepFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("pr_rep_fechai");

                entity.Property(e => e.PrRepNombre)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_nombre");

                entity.Property(e => e.PrRepUsuarioi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("pr_rep_usuarioi");

                entity.Property(e => e.PrRepVersion)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("pr_rep_version");
            });

            modelBuilder.Entity<PrTasaDiarium>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_TASA_DIARIA");

                entity.Property(e => e.TasadCodigo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("tasad_codigo");

                entity.Property(e => e.TasadEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tasad_empresa");

                entity.Property(e => e.TasadFecha)
                    .HasColumnType("datetime")
                    .HasColumnName("tasad_fecha");

                entity.Property(e => e.TasadFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("tasad_fechai");

                entity.Property(e => e.TasadFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("tasad_fecham");

                entity.Property(e => e.TasadMoneda)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("tasad_moneda");

                entity.Property(e => e.TasadStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("tasad_status");

                entity.Property(e => e.TasadTasa)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("tasad_tasa");

                entity.Property(e => e.TasadUsuarioi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("tasad_usuarioi");

                entity.Property(e => e.TasadUsuariom)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("tasad_usuariom");
            });

            modelBuilder.Entity<PrTasaProm>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_TASA_PROM");

                entity.Property(e => e.TasapCodigo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("tasap_codigo");

                entity.Property(e => e.TasapEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tasap_empresa");

                entity.Property(e => e.TasapFecFin)
                    .HasColumnType("datetime")
                    .HasColumnName("tasap_fec_fin");

                entity.Property(e => e.TasapFecIni)
                    .HasColumnType("datetime")
                    .HasColumnName("tasap_fec_ini");

                entity.Property(e => e.TasapFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("tasap_fechai");

                entity.Property(e => e.TasapFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("tasap_fecham");

                entity.Property(e => e.TasapMoneda)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("tasap_moneda");

                entity.Property(e => e.TasapTasa)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("tasap_tasa");

                entity.Property(e => e.TasapUsuarioi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("tasap_usuarioi");

                entity.Property(e => e.TasapUsuariom)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("tasap_usuariom");
            });

            modelBuilder.Entity<PrTipoPresup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_TIPO_PRESUP");

                entity.Property(e => e.TipopreCodigo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("tipopre_codigo");

                entity.Property(e => e.TipopreEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("tipopre_empresa");

                entity.Property(e => e.TipopreFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("tipopre_fechai");

                entity.Property(e => e.TipopreFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("tipopre_fecham");

                entity.Property(e => e.TipopreNombre)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("tipopre_nombre");

                entity.Property(e => e.TipopreOrdenimp)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("tipopre_ordenimp");

                entity.Property(e => e.TipopreUsuarioi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("tipopre_usuarioi");

                entity.Property(e => e.TipopreUsuariom)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("tipopre_usuariom");
            });

            modelBuilder.Entity<PrUsuario>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_USUARIO");

                entity.Property(e => e.UsrCodigo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("usr_codigo");

                entity.Property(e => e.UsrConsola)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("usr_consola");

                entity.Property(e => e.UsrDepto)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("usr_depto");

                entity.Property(e => e.UsrEmail)
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("usr_email");

                entity.Property(e => e.UsrEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("usr_empresa");

                entity.Property(e => e.UsrEstado)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("usr_estado");

                entity.Property(e => e.UsrFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("usr_fechai");

                entity.Property(e => e.UsrFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("usr_fecham");

                entity.Property(e => e.UsrFolderRep)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("usr_folder_rep");

                entity.Property(e => e.UsrJefe)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("usr_jefe");

                entity.Property(e => e.UsrLogin)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("usr_login");

                entity.Property(e => e.UsrLoginDb)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("usr_login_db");

                entity.Property(e => e.UsrLugar)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("usr_lugar");

                entity.Property(e => e.UsrNombre)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("usr_nombre");

                entity.Property(e => e.UsrPerfil)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("usr_perfil");

                entity.Property(e => e.UsrPswd)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("usr_pswd");

                entity.Property(e => e.UsrPswdDb)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("usr_pswd_db");

                entity.Property(e => e.UsrPuesto)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("usr_puesto");

                entity.Property(e => e.UsrRol)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("usr_rol");

                entity.Property(e => e.UsrUsuarioi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("usr_usuarioi");

                entity.Property(e => e.UsrUsuariom)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("usr_usuariom");
            });

            modelBuilder.Entity<PrVersionPresup>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PR_VERSION_PRESUP");

                entity.Property(e => e.VerpreCodigo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("verpre_codigo");

                entity.Property(e => e.VerpreEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("verpre_empresa");

                entity.Property(e => e.VerpreEstado).HasColumnName("verpre_estado");

                entity.Property(e => e.VerpreFechacEstado)
                    .HasColumnType("datetime")
                    .HasColumnName("verpre_fechac_estado");

                entity.Property(e => e.VerpreFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("verpre_fechai");

                entity.Property(e => e.VerpreFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("verpre_fecham");

                entity.Property(e => e.VerpreFechaver)
                    .HasColumnType("datetime")
                    .HasColumnName("verpre_fechaver");

                entity.Property(e => e.VerpreNombre)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("verpre_nombre");

                entity.Property(e => e.VerpreSaldo)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("verpre_saldo");

                entity.Property(e => e.VerpreTipoModulo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("verpre_tipo_modulo");

                entity.Property(e => e.VerpreUsuarioi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("verpre_usuarioi");

                entity.Property(e => e.VerpreUsuariom)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("verpre_usuariom");
            });

            modelBuilder.Entity<PreciosListaH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PRECIOS_LISTA_H");

                entity.HasIndex(e => new { e.LishEmpresa, e.LishCodigo }, "PK_PRECIOS_LISTA_CODIGO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.LishCodigo).HasColumnName("LISH_CODIGO");

                entity.Property(e => e.LishDescripcion)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("LISH_DESCRIPCION");

                entity.Property(e => e.LishEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("LISH_EMPRESA");

                entity.Property(e => e.LishFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("LISH_FECHAC");

                entity.Property(e => e.LishFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("LISH_FECHAM");

                entity.Property(e => e.LishMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("LISH_MONEDA");

                entity.Property(e => e.LishNota1)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("LISH_NOTA1");

                entity.Property(e => e.LishNota2)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("LISH_NOTA2");

                entity.Property(e => e.LishStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("LISH_STATUS");

                entity.Property(e => e.LishUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("LISH_USUARIOC");

                entity.Property(e => e.LishUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("LISH_USUARIOM");
            });

            modelBuilder.Entity<PreciosListaL>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PRECIOS_LISTA_L");

                entity.HasIndex(e => new { e.LislEmpresa, e.LislCodigo, e.LislLinea }, "PK_PRECIOS_LISTA_L")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.LislCodigo).HasColumnName("LISL_CODIGO");

                entity.Property(e => e.LislEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("LISL_EMPRESA");

                entity.Property(e => e.LislFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("LISL_FECHAC");

                entity.Property(e => e.LislFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("LISL_FECHAM");

                entity.Property(e => e.LislInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("LISL_INVENTARIO");

                entity.Property(e => e.LislLinea).HasColumnName("LISL_LINEA");

                entity.Property(e => e.LislPrecio)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("LISL_PRECIO");

                entity.Property(e => e.LislUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("LISL_USUARIOC");

                entity.Property(e => e.LislUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("LISL_USUARIOM");
            });

            modelBuilder.Entity<PreciosProvee>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PRECIOS_PROVEE");

                entity.HasIndex(e => new { e.PrvEmpresa, e.PrvProveedor, e.PrvInventario }, "PK_PRECIOP")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.PrvEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PRV_EMPRESA");

                entity.Property(e => e.PrvInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("PRV_INVENTARIO");

                entity.Property(e => e.PrvPrecio)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PRV_PRECIO");

                entity.Property(e => e.PrvProveedor)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("PRV_PROVEEDOR");
            });

            modelBuilder.Entity<PrimerLune>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PRIMER_LUNES");

                entity.HasIndex(e => new { e.TlEmpresa, e.TlFecha }, "PK_LUNES")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.TlDia).HasColumnName("TL_DIA");

                entity.Property(e => e.TlEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TL_EMPRESA");

                entity.Property(e => e.TlFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TL_FECHA");

                entity.Property(e => e.TlHorasExtras).HasColumnName("TL_HORAS_EXTRAS");

                entity.Property(e => e.TlSemana).HasColumnName("TL_SEMANA");
            });

            modelBuilder.Entity<ProdDepProduccion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PROD_DEP_PRODUCCION");

                entity.Property(e => e.DpCcMoventrada)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("dp_cc_moventrada");

                entity.Property(e => e.DpCcMovsalida)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("dp_cc_movsalida");

                entity.Property(e => e.DpCodBodega)
                    .HasColumnType("decimal(9, 0)")
                    .HasColumnName("dp_cod_bodega");

                entity.Property(e => e.DpCodResponsable)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("dp_cod_responsable");

                entity.Property(e => e.DpCodigo)
                    .HasColumnType("decimal(9, 0)")
                    .HasColumnName("dp_codigo");

                entity.Property(e => e.DpCuentaMobra)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dp_cuenta_mobra");

                entity.Property(e => e.DpCuentaMprima)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dp_cuenta_mprima");

                entity.Property(e => e.DpCuentaOvh)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dp_cuenta_ovh");

                entity.Property(e => e.DpCuentaPp)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dp_cuenta_pp");

                entity.Property(e => e.DpCuentaPt)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("dp_cuenta_pt");

                entity.Property(e => e.DpEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("dp_empresa");

                entity.Property(e => e.DpFechai)
                    .HasColumnType("datetime")
                    .HasColumnName("dp_fechai");

                entity.Property(e => e.DpFecham)
                    .HasColumnType("datetime")
                    .HasColumnName("dp_fecham");

                entity.Property(e => e.DpMovEntrada)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("dp_mov_entrada");

                entity.Property(e => e.DpMovSalida)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("dp_mov_salida");

                entity.Property(e => e.DpNombre)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("dp_nombre");

                entity.Property(e => e.DpTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("dp_tipo");

                entity.Property(e => e.DpUsuarioi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dp_usuarioi");

                entity.Property(e => e.DpUsuariom)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("dp_usuariom");
            });

            modelBuilder.Entity<ProdFormatH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PROD_FORMAT_H");

                entity.HasIndex(e => new { e.FrmthEmpresa, e.FrmthCodigo, e.FrmthPagina }, "PK_PRDFORMATH1")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.FrmthCodigo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FRMTH_CODIGO");

                entity.Property(e => e.FrmthEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("FRMTH_EMPRESA");

                entity.Property(e => e.FrmthLineas).HasColumnName("FRMTH_LINEAS");

                entity.Property(e => e.FrmthPagina).HasColumnName("FRMTH_PAGINA");

                entity.Property(e => e.FrmthTitulo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("FRMTH_TITULO");
            });

            modelBuilder.Entity<ProdFormatL>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PROD_FORMAT_L");

                entity.HasIndex(e => new { e.FrmtlEmpresa, e.FrmtlCodigo, e.FrmtlPagina, e.FrmtlParrafo, e.FrmtlLinea, e.FrmtlTipo, e.FrmtlInventario }, "PK_PRDFORMATL1")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.FrmtlCodigo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("FRMTL_CODIGO");

                entity.Property(e => e.FrmtlEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("FRMTL_EMPRESA");

                entity.Property(e => e.FrmtlInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FRMTL_INVENTARIO");

                entity.Property(e => e.FrmtlLinea).HasColumnName("FRMTL_LINEA");

                entity.Property(e => e.FrmtlPagina).HasColumnName("FRMTL_PAGINA");

                entity.Property(e => e.FrmtlParrafo).HasColumnName("FRMTL_PARRAFO");

                entity.Property(e => e.FrmtlTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FRMTL_TIPO");
            });

            modelBuilder.Entity<ProdOrder>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PROD_ORDERS");

                entity.Property(e => e.OrdhArea)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_AREA");

                entity.Property(e => e.OrdhBackord)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_BACKORD");

                entity.Property(e => e.OrdhCiudad)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_CIUDAD");

                entity.Property(e => e.OrdhCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_CLIENTE");

                entity.Property(e => e.OrdhClinombre)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_CLINOMBRE");

                entity.Property(e => e.OrdhConcred)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_CONCRED");

                entity.Property(e => e.OrdhCondiciones)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_CONDICIONES");

                entity.Property(e => e.OrdhContacto)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_CONTACTO");

                entity.Property(e => e.OrdhCotizacion).HasColumnName("ORDH_COTIZACION");

                entity.Property(e => e.OrdhDepto)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_DEPTO");

                entity.Property(e => e.OrdhDirentrega)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_DIRENTREGA");

                entity.Property(e => e.OrdhDirentrega1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_DIRENTREGA1");

                entity.Property(e => e.OrdhEmision)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_EMISION");

                entity.Property(e => e.OrdhEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_EMPRESA");

                entity.Property(e => e.OrdhEnvioserie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_ENVIOSERIE");

                entity.Property(e => e.OrdhEspecial)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_ESPECIAL");

                entity.Property(e => e.OrdhFactura).HasColumnName("ORDH_FACTURA");

                entity.Property(e => e.OrdhFax)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_FAX");

                entity.Property(e => e.OrdhFecbackord)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_FECBACKORD");

                entity.Property(e => e.OrdhFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_FECHAC");

                entity.Property(e => e.OrdhFechadespacho)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_FECHADESPACHO");

                entity.Property(e => e.OrdhFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_FECHAM");

                entity.Property(e => e.OrdhFechapedido)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_FECHAPEDIDO");

                entity.Property(e => e.OrdhFechapurchase)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_FECHAPURCHASE");

                entity.Property(e => e.OrdhFlagfact)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_FLAGFACT");

                entity.Property(e => e.OrdhInstrucc)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_INSTRUCC");

                entity.Property(e => e.OrdhInstrucc1)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_INSTRUCC1");

                entity.Property(e => e.OrdhOrden).HasColumnName("ORDH_ORDEN");

                entity.Property(e => e.OrdhOrderby)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_ORDERBY");

                entity.Property(e => e.OrdhOrdertype)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_ORDERTYPE");

                entity.Property(e => e.OrdhPedbackord)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_PEDBACKORD");

                entity.Property(e => e.OrdhPhones)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_PHONES");

                entity.Property(e => e.OrdhPurchaseorder)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_PURCHASEORDER");

                entity.Property(e => e.OrdhSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_SERIE");

                entity.Property(e => e.OrdhSpecialformat)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_SPECIALFORMAT");

                entity.Property(e => e.OrdhStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_STATUS");

                entity.Property(e => e.OrdhTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ORDH_TOTAL");

                entity.Property(e => e.OrdhUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_USUARIOC");

                entity.Property(e => e.OrdhUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_USUARIOM");

                entity.Property(e => e.OrdhVendedor).HasColumnName("ORDH_VENDEDOR");

                entity.Property(e => e.OrdhVia)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_VIA");
            });

            modelBuilder.Entity<ProdOrdersH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PROD_ORDERS_H");

                entity.HasIndex(e => new { e.OrdhEmpresa, e.OrdhOrden }, "PK_PRODORDH1")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.OrdhEmpresa, e.OrdhFechadespacho, e.OrdhCliente, e.OrdhVendedor, e.OrdhFactura, e.OrdhFlagfact, e.OrdhStatus }, "SK_ORDFACTFECHAS")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.OrdhEmpresa, e.OrdhCliente, e.OrdhEmision, e.OrdhStatus }, "SK_PRODORDH1")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.OrdhEmpresa, e.OrdhClinombre, e.OrdhEmision, e.OrdhStatus }, "SK_PRODORDH2")
                    .HasFillFactor(90);

                entity.Property(e => e.OrdhArea)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_AREA");

                entity.Property(e => e.OrdhBackord)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_BACKORD");

                entity.Property(e => e.OrdhCiudad)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_CIUDAD");

                entity.Property(e => e.OrdhCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_CLIENTE");

                entity.Property(e => e.OrdhClinombre)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_CLINOMBRE");

                entity.Property(e => e.OrdhConcred)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_CONCRED");

                entity.Property(e => e.OrdhCondiciones)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_CONDICIONES");

                entity.Property(e => e.OrdhContacto)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_CONTACTO");

                entity.Property(e => e.OrdhCotizacion).HasColumnName("ORDH_COTIZACION");

                entity.Property(e => e.OrdhDepto)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_DEPTO");

                entity.Property(e => e.OrdhDescporcen)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("ORDH_DESCPORCEN");

                entity.Property(e => e.OrdhDescvalor)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("ORDH_DESCVALOR");

                entity.Property(e => e.OrdhDirentrega)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_DIRENTREGA");

                entity.Property(e => e.OrdhDirentrega1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_DIRENTREGA1");

                entity.Property(e => e.OrdhEmision)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_EMISION");

                entity.Property(e => e.OrdhEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_EMPRESA");

                entity.Property(e => e.OrdhEnvioserie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_ENVIOSERIE");

                entity.Property(e => e.OrdhEspecial)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_ESPECIAL");

                entity.Property(e => e.OrdhFactura).HasColumnName("ORDH_FACTURA");

                entity.Property(e => e.OrdhFax)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_FAX");

                entity.Property(e => e.OrdhFecbackord)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_FECBACKORD");

                entity.Property(e => e.OrdhFechac)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_FECHAC");

                entity.Property(e => e.OrdhFechadespacho)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_FECHADESPACHO");

                entity.Property(e => e.OrdhFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_FECHAM");

                entity.Property(e => e.OrdhFechapedido)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_FECHAPEDIDO");

                entity.Property(e => e.OrdhFechapurchase)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_FECHAPURCHASE");

                entity.Property(e => e.OrdhFlagfact)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_FLAGFACT");

                entity.Property(e => e.OrdhInstrucc)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_INSTRUCC");

                entity.Property(e => e.OrdhInstrucc1)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_INSTRUCC1");

                entity.Property(e => e.OrdhOrden).HasColumnName("ORDH_ORDEN");

                entity.Property(e => e.OrdhOrderby)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_ORDERBY");

                entity.Property(e => e.OrdhOrdertype)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_ORDERTYPE");

                entity.Property(e => e.OrdhPedbackord)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_PEDBACKORD");

                entity.Property(e => e.OrdhPhones)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_PHONES");

                entity.Property(e => e.OrdhPurchaseorder)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_PURCHASEORDER");

                entity.Property(e => e.OrdhSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_SERIE");

                entity.Property(e => e.OrdhSpecialformat)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_SPECIALFORMAT");

                entity.Property(e => e.OrdhStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_STATUS");

                entity.Property(e => e.OrdhTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ORDH_TOTAL");

                entity.Property(e => e.OrdhUsuarioc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_USUARIOC");

                entity.Property(e => e.OrdhUsuariom)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_USUARIOM");

                entity.Property(e => e.OrdhVendedor).HasColumnName("ORDH_VENDEDOR");

                entity.Property(e => e.OrdhVia)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("ORDH_VIA");
            });

            modelBuilder.Entity<ProdOrdersL>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PROD_ORDERS_L");

                entity.HasIndex(e => new { e.OrdlEmpresa, e.OrdlOrden, e.OrdlLinea }, "PK_PRODORDL1")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.OrdlBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("ORDL_BODEGA");

                entity.Property(e => e.OrdlCantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ORDL_CANTIDAD");

                entity.Property(e => e.OrdlDescuento)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ORDL_DESCUENTO");

                entity.Property(e => e.OrdlDescvalor)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("ORDL_DESCVALOR");

                entity.Property(e => e.OrdlDespachado)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ORDL_DESPACHADO");

                entity.Property(e => e.OrdlEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ORDL_EMPRESA");

                entity.Property(e => e.OrdlInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("ORDL_INVENTARIO");

                entity.Property(e => e.OrdlLinea).HasColumnName("ORDL_LINEA");

                entity.Property(e => e.OrdlOrden).HasColumnName("ORDL_ORDEN");

                entity.Property(e => e.OrdlPackage)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("ORDL_PACKAGE");

                entity.Property(e => e.OrdlPorcentaje)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("ORDL_PORCENTAJE");

                entity.Property(e => e.OrdlPreciou)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("ORDL_PRECIOU");

                entity.Property(e => e.OrdlSkunumber)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("ORDL_SKUNUMBER");
            });

            modelBuilder.Entity<Profile>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PROFILE");

                entity.HasIndex(e => new { e.PrfEmpresa, e.PrfUsuario, e.PrfModulo, e.PrfOpcion }, "PK_PROFUSU")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.PrfEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PRF_EMPRESA");

                entity.Property(e => e.PrfModulo)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PRF_MODULO");

                entity.Property(e => e.PrfOpcion)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("PRF_OPCION");

                entity.Property(e => e.PrfParam)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("PRF_PARAM");

                entity.Property(e => e.PrfUsuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PRF_USUARIO");
            });

            modelBuilder.Entity<Prospecto>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("PROSPECTOS");

                entity.HasIndex(e => new { e.ProsEmpresa, e.ProsCorrelativo }, "PROSPECTO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.ProsContacto)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PROS_CONTACTO");

                entity.Property(e => e.ProsCorrelativo).HasColumnName("PROS_CORRELATIVO");

                entity.Property(e => e.ProsEmail)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PROS_EMAIL");

                entity.Property(e => e.ProsEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PROS_EMPRESA");

                entity.Property(e => e.ProsFax)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PROS_FAX");

                entity.Property(e => e.ProsFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PROS_FECHA");

                entity.Property(e => e.ProsIndustria)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("PROS_INDUSTRIA");

                entity.Property(e => e.ProsNombre)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("PROS_NOMBRE");

                entity.Property(e => e.ProsTelefono)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("PROS_TELEFONO");

                entity.Property(e => e.ProsUbicacion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("PROS_UBICACION");

                entity.Property(e => e.ProsVendedor).HasColumnName("PROS_VENDEDOR");
            });

            modelBuilder.Entity<QsConfigTipo>(entity =>
            {
                entity.HasKey(e => new { e.CfgtEmpresa, e.CfgtCodigo });

                entity.ToTable("qs_config_tipo");

                entity.Property(e => e.CfgtEmpresa)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("cfgt_empresa");

                entity.Property(e => e.CfgtCodigo)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("cfgt_codigo");

                entity.Property(e => e.CfgtCorta)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("cfgt_corta");

                entity.Property(e => e.CfgtDesc)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("cfgt_desc");

                entity.Property(e => e.CfgtFechai)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cfgt_fechai");

                entity.Property(e => e.CfgtFecham)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("cfgt_fecham");

                entity.Property(e => e.CfgtPadre)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("cfgt_padre");

                entity.Property(e => e.CfgtTipo)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("cfgt_tipo");

                entity.Property(e => e.CfgtUsuarioi)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cfgt_usuarioi");

                entity.Property(e => e.CfgtUsuariom)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("cfgt_usuariom");

                entity.Property(e => e.CfgtValor)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("cfgt_valor");
            });

            modelBuilder.Entity<QsysContingencium>(entity =>
            {
                entity.HasKey(e => new { e.FecEmpresa, e.FecTienda, e.FecTerminal, e.FecFactura })
                    .HasName("PK_FECCONTINGENCIA");

                entity.ToTable("QSYS_CONTINGENCIA");

                entity.Property(e => e.FecEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("FEC_EMPRESA");

                entity.Property(e => e.FecTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("FEC_TIENDA");

                entity.Property(e => e.FecTerminal).HasColumnName("FEC_TERMINAL");

                entity.Property(e => e.FecFactura).HasColumnName("FEC_FACTURA");

                entity.Property(e => e.FecContingencia)
                    .HasColumnType("decimal(15, 0)")
                    .HasColumnName("FEC_CONTINGENCIA");

                entity.Property(e => e.FecFecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FEC_FECHA");

                entity.Property(e => e.FecSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("FEC_SERIE");

                entity.Property(e => e.FecUsuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FEC_USUARIO");
            });

            modelBuilder.Entity<QsysDocumento>(entity =>
            {
                entity.HasKey(e => new { e.Empresa, e.Tienda, e.Terminal, e.Factura })
                    .HasName("PK_QSYSDOCUMENTO");

                entity.ToTable("QSYS_DOCUMENTO");

                entity.HasIndex(e => new { e.Empresa, e.FelNumero, e.FelSerie }, "SK_QDFELSERNUMERO")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.Empresa, e.FelUuid }, "SK_QDFELUUID")
                    .HasFillFactor(90);

                entity.Property(e => e.Empresa)
                    .HasMaxLength(3)
                    .HasColumnName("EMPRESA");

                entity.Property(e => e.Tienda)
                    .HasMaxLength(2)
                    .HasColumnName("TIENDA");

                entity.Property(e => e.Terminal).HasColumnName("TERMINAL");

                entity.Property(e => e.Factura).HasColumnName("FACTURA");

                entity.Property(e => e.Bitacora).HasColumnName("BITACORA");

                entity.Property(e => e.ErrorFirma)
                    .HasMaxLength(200)
                    .HasColumnName("ERROR_FIRMA");

                entity.Property(e => e.Estado)
                    .HasMaxLength(10)
                    .HasColumnName("ESTADO");

                entity.Property(e => e.Exenta)
                    .HasMaxLength(2)
                    .HasColumnName("EXENTA");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA");

                entity.Property(e => e.FechaGrabado)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_GRABADO");

                entity.Property(e => e.FelFecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FEL_FECHA");

                entity.Property(e => e.FelNumero)
                    .HasMaxLength(30)
                    .HasColumnName("FEL_NUMERO");

                entity.Property(e => e.FelResponse)
                    .HasMaxLength(1)
                    .HasColumnName("FEL_RESPONSE");

                entity.Property(e => e.FelSerie)
                    .HasMaxLength(30)
                    .HasColumnName("FEL_SERIE");

                entity.Property(e => e.FelTipoDocumento)
                    .HasMaxLength(4)
                    .HasColumnName("FEL_TIPO_DOCUMENTO");

                entity.Property(e => e.FelUuid)
                    .HasMaxLength(100)
                    .HasColumnName("FEL_UUID");

                entity.Property(e => e.FelXml)
                    .HasMaxLength(1)
                    .HasColumnName("FEL_XML");

                entity.Property(e => e.FirmaElectronica)
                    .HasMaxLength(200)
                    .HasColumnName("FIRMA_ELECTRONICA");

                entity.Property(e => e.FormaPago)
                    .HasMaxLength(10)
                    .HasColumnName("FORMA_PAGO");

                entity.Property(e => e.Monto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("MONTO");

                entity.Property(e => e.NotaCredito)
                    .HasColumnType("decimal(15, 0)")
                    .HasColumnName("NOTA_CREDITO");

                entity.Property(e => e.Tipo)
                    .HasMaxLength(15)
                    .HasColumnName("TIPO");

                entity.Property(e => e.TipoCertificacion)
                    .HasMaxLength(4)
                    .HasColumnName("TIPO_CERTIFICACION");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(10)
                    .HasColumnName("USUARIO");

                entity.Property(e => e.XmlGenerado).HasColumnName("XML_GENERADO");
            });

            modelBuilder.Entity<QsysDocumentoAnula>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("QSYS_DOCUMENTO_ANULA");

                entity.HasIndex(e => new { e.Empresa, e.Tienda, e.Terminal, e.Factura }, "PK_QDASERFACTURA")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.Empresa, e.FelNumero, e.FelSerie }, "SK_QDAFELSERNUMERO")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.Empresa, e.FelUuid }, "SK_QDAFELUUID")
                    .HasFillFactor(90);

                entity.Property(e => e.Empresa)
                    .HasMaxLength(3)
                    .HasColumnName("EMPRESA");

                entity.Property(e => e.Factura).HasColumnName("FACTURA");

                entity.Property(e => e.FechaGrabado)
                    .HasColumnType("datetime")
                    .HasColumnName("FECHA_GRABADO");

                entity.Property(e => e.FelFecha)
                    .HasColumnType("datetime")
                    .HasColumnName("FEL_FECHA");

                entity.Property(e => e.FelNumero)
                    .HasMaxLength(30)
                    .HasColumnName("FEL_NUMERO");

                entity.Property(e => e.FelResponse)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FEL_RESPONSE");

                entity.Property(e => e.FelSerie)
                    .HasMaxLength(30)
                    .HasColumnName("FEL_SERIE");

                entity.Property(e => e.FelTipoDocumento)
                    .HasMaxLength(4)
                    .HasColumnName("FEL_TIPO_DOCUMENTO");

                entity.Property(e => e.FelUuid)
                    .HasMaxLength(100)
                    .HasColumnName("FEL_UUID");

                entity.Property(e => e.FelXml)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("FEL_XML");

                entity.Property(e => e.NotaCredito)
                    .HasColumnType("decimal(15, 0)")
                    .HasColumnName("NOTA_CREDITO");

                entity.Property(e => e.Status)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("STATUS");

                entity.Property(e => e.Terminal).HasColumnName("TERMINAL");

                entity.Property(e => e.Tienda)
                    .HasMaxLength(2)
                    .HasColumnName("TIENDA");

                entity.Property(e => e.Usuario)
                    .HasMaxLength(10)
                    .HasColumnName("USUARIO");
            });

            modelBuilder.Entity<QsysFelFactAnuVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("QsysFelFactAnu_vw");

                entity.Property(e => e.Ccorreo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CCorreo");

                entity.Property(e => e.Cllave)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CLlave");

                entity.Property(e => e.Cprefijo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CPrefijo");

                entity.Property(e => e.Ctoken)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CToken");

                entity.Property(e => e.Cusuario)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CUsuario");

                entity.Property(e => e.FechaAnulacion)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FechaDocAnular)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Feluuid)
                    .HasMaxLength(100)
                    .HasColumnName("FELUUID");

                entity.Property(e => e.MotivoAnulacion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Nitemisor)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("NITEmisor");

                entity.Property(e => e.Nitreceptor)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("NITReceptor");

                entity.Property(e => e.VehEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VEH_EMPRESA");

                entity.Property(e => e.VehFactura).HasColumnName("VEH_FACTURA");

                entity.Property(e => e.VehSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VEH_SERIE");

                entity.Property(e => e.VehTerminal).HasColumnName("VEH_TERMINAL");

                entity.Property(e => e.VehTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VEH_TIENDA");
            });

            modelBuilder.Entity<QsysFelHncredVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("QsysFelHNCRED_vw");

                entity.Property(e => e.Ccertifica)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CCertifica");

                entity.Property(e => e.Ccorreo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CCorreo");

                entity.Property(e => e.Cllave)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CLlave");

                entity.Property(e => e.Cprefijo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CPrefijo");

                entity.Property(e => e.Ctoken)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CToken");

                entity.Property(e => e.Cusuario)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CUsuario");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.Ecpostal)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ECPostal");

                entity.Property(e => e.Edepartamento)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("EDepartamento");

                entity.Property(e => e.Edireccion)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasColumnName("EDireccion");

                entity.Property(e => e.Empresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("EMPRESA");

                entity.Property(e => e.Emunicipio)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("EMunicipio");

                entity.Property(e => e.Encomercial)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasColumnName("ENComercial");

                entity.Property(e => e.Enit)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("ENit");

                entity.Property(e => e.Epais)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("EPais");

                entity.Property(e => e.Erazon)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasColumnName("ERazon");

                entity.Property(e => e.Eregimen)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("EREgimen");

                entity.Property(e => e.Fecha)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Ffecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("FFecha");

                entity.Property(e => e.Fuuid)
                    .HasMaxLength(100)
                    .HasColumnName("FUUID");

                entity.Property(e => e.GeneraIva)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("GeneraIVA");

                entity.Property(e => e.IsWalmart)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.MontoIva).HasColumnType("decimal(18, 6)");

                entity.Property(e => e.MontoSinIva).HasColumnType("decimal(18, 6)");

                entity.Property(e => e.Nmonto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("NMonto");

                entity.Property(e => e.Numero)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.RcodigoPostal)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("RCodigoPostal");

                entity.Property(e => e.Rcorreo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("RCorreo");

                entity.Property(e => e.Rdepartamento)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("RDepartamento");

                entity.Property(e => e.Rdireccion)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("RDireccion");

                entity.Property(e => e.Rmunicipio)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("RMunicipio");

                entity.Property(e => e.Rnit)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("RNIT");

                entity.Property(e => e.Rnombre)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("RNombre");

                entity.Property(e => e.Rpais)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("RPais");

                entity.Property(e => e.Serie)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.TipoDoc)
                    .HasMaxLength(4)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<QsysFelHndebVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("QsysFelHNDEB_vw");

                entity.Property(e => e.Ccertifica)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CCertifica");

                entity.Property(e => e.Ccorreo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CCorreo");

                entity.Property(e => e.Cllave)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CLlave");

                entity.Property(e => e.Cprefijo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CPrefijo");

                entity.Property(e => e.Ctoken)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CToken");

                entity.Property(e => e.Cusuario)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CUsuario");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(120)
                    .IsUnicode(false);

                entity.Property(e => e.Ecpostal)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ECPostal");

                entity.Property(e => e.Edepartamento)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("EDepartamento");

                entity.Property(e => e.Edireccion)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasColumnName("EDireccion");

                entity.Property(e => e.Empresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("EMPRESA");

                entity.Property(e => e.Emunicipio)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("EMunicipio");

                entity.Property(e => e.Encomercial)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasColumnName("ENComercial");

                entity.Property(e => e.Enit)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("ENit");

                entity.Property(e => e.Epais)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("EPais");

                entity.Property(e => e.Erazon)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasColumnName("ERazon");

                entity.Property(e => e.Eregimen)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("EREgimen");

                entity.Property(e => e.Fecha)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Ffecha)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FFecha")
                    .IsFixedLength();

                entity.Property(e => e.Fuuid)
                    .HasMaxLength(100)
                    .HasColumnName("FUUID");

                entity.Property(e => e.IsWalmart)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.MontoIva).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontoSinIva).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Nmonto)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("NMonto");

                entity.Property(e => e.Numero)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.RcodigoPostal)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("RCodigoPostal");

                entity.Property(e => e.Rcorreo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("RCorreo");

                entity.Property(e => e.Rdepartamento)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("RDepartamento");

                entity.Property(e => e.Rdireccion)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("RDireccion");

                entity.Property(e => e.Rmunicipio)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("RMunicipio");

                entity.Property(e => e.Rnit)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("RNIT");

                entity.Property(e => e.Rnombre)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("RNombre");

                entity.Property(e => e.Rpais)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("RPais");

                entity.Property(e => e.Serie)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");

                entity.Property(e => e.TipoDoc)
                    .HasMaxLength(4)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<QsysFelNabnanuVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("QsysFelNABNAnu_vw");

                entity.Property(e => e.Ccorreo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CCorreo");

                entity.Property(e => e.Cllave)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CLlave");

                entity.Property(e => e.Cprefijo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CPrefijo");

                entity.Property(e => e.Ctoken)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CToken");

                entity.Property(e => e.Cusuario)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CUsuario");

                entity.Property(e => e.Empresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("EMPRESA");

                entity.Property(e => e.FechaAnulacion)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FechaDocAnular)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Feluuid)
                    .HasMaxLength(100)
                    .HasColumnName("FELUUID");

                entity.Property(e => e.MotivoAnulacion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Nitemisor)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("NITEmisor");

                entity.Property(e => e.Nitreceptor)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("NITReceptor");

                entity.Property(e => e.Numero)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.Serie)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");
            });

            modelBuilder.Entity<QsysFelNcreanuVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("QsysFelNCREAnu_vw");

                entity.Property(e => e.Ccorreo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CCorreo");

                entity.Property(e => e.Cllave)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CLlave");

                entity.Property(e => e.Cprefijo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CPrefijo");

                entity.Property(e => e.Ctoken)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CToken");

                entity.Property(e => e.Cusuario)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CUsuario");

                entity.Property(e => e.Empresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("EMPRESA");

                entity.Property(e => e.FechaAnulacion)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FechaDocAnular)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Feluuid)
                    .HasMaxLength(100)
                    .HasColumnName("FELUUID");

                entity.Property(e => e.MotivoAnulacion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Nitemisor)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("NITEmisor");

                entity.Property(e => e.Nitreceptor)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("NITReceptor");

                entity.Property(e => e.Numero)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.Serie)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");
            });

            modelBuilder.Entity<QsysFelNdebanuVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("QsysFelNDEBAnu_vw");

                entity.Property(e => e.Ccorreo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CCorreo");

                entity.Property(e => e.Cllave)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CLlave");

                entity.Property(e => e.Cprefijo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CPrefijo");

                entity.Property(e => e.Ctoken)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CToken");

                entity.Property(e => e.Cusuario)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CUsuario");

                entity.Property(e => e.Empresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("EMPRESA");

                entity.Property(e => e.FechaAnulacion)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.FechaDocAnular)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Feluuid)
                    .HasMaxLength(100)
                    .HasColumnName("FELUUID");

                entity.Property(e => e.MotivoAnulacion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Nitemisor)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("NITEmisor");

                entity.Property(e => e.Nitreceptor)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("NITReceptor");

                entity.Property(e => e.Numero)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("NUMERO");

                entity.Property(e => e.Serie)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("SERIE");
            });

            modelBuilder.Entity<QsysfeldetalleVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("QSYSFELDETALLE_vw");

                entity.Property(e => e.BienOservicio)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("BienOServicio");

                entity.Property(e => e.Cantidad).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.CodigoUnidadGravable)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(45)
                    .IsUnicode(false);

                entity.Property(e => e.Descuento).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontoGravable).HasColumnType("decimal(19, 3)");

                entity.Property(e => e.MontoImpuesto).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.NombreCorto)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Precio).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PrecioUnitario).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Total).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.UnidadMedida)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.VehEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VEH_EMPRESA");

                entity.Property(e => e.VehFactura).HasColumnName("VEH_FACTURA");

                entity.Property(e => e.VehSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VEH_SERIE");

                entity.Property(e => e.VehTerminal).HasColumnName("VEH_TERMINAL");

                entity.Property(e => e.VehTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VEH_TIENDA");
            });

            modelBuilder.Entity<QsysfelheaderVw>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("QSYSFELHEADER_vw");

                entity.Property(e => e.Ccertifica)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CCertifica");

                entity.Property(e => e.Ccorreo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CCorreo");

                entity.Property(e => e.Cllave)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CLlave");

                entity.Property(e => e.Concred1)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.Cprefijo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CPrefijo");

                entity.Property(e => e.Ctoken)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CToken");

                entity.Property(e => e.Cusuario)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("CUsuario");

                entity.Property(e => e.Ecpostal)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("ECPostal");

                entity.Property(e => e.Edepartamento)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("EDepartamento");

                entity.Property(e => e.Edireccion)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasColumnName("EDireccion");

                entity.Property(e => e.Emunicipio)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("EMunicipio");

                entity.Property(e => e.Encomercial)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasColumnName("ENComercial");

                entity.Property(e => e.Enit)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("ENit");

                entity.Property(e => e.Epais)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("EPais");

                entity.Property(e => e.Erazon)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasColumnName("ERazon");

                entity.Property(e => e.Eregimen)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("EREgimen");

                entity.Property(e => e.Fecha)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.Fvenc)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("FVenc")
                    .IsFixedLength();

                entity.Property(e => e.GranTotal).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IsWalmart)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.Moneda)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.RcodigoPostal)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("RCodigoPostal");

                entity.Property(e => e.Rcorreo)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("RCorreo");

                entity.Property(e => e.Rdepartamento)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("RDepartamento");

                entity.Property(e => e.Rdireccion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("RDireccion");

                entity.Property(e => e.Rexento)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("RExento");

                entity.Property(e => e.Rmunicipio)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("RMunicipio");

                entity.Property(e => e.Rnit)
                    .HasMaxLength(8000)
                    .IsUnicode(false)
                    .HasColumnName("RNIT");

                entity.Property(e => e.Rnombre)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("RNombre");

                entity.Property(e => e.Rpais)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("RPais");

                entity.Property(e => e.TipoDoc)
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.TotalImpuesto).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.VehEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VEH_EMPRESA");

                entity.Property(e => e.VehFactura).HasColumnName("VEH_FACTURA");

                entity.Property(e => e.VehSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VEH_SERIE");

                entity.Property(e => e.VehTerminal).HasColumnName("VEH_TERMINAL");

                entity.Property(e => e.VehTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VEH_TIENDA");
            });

            modelBuilder.Entity<Qsysfmese>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("qsysfmeses");

                entity.Property(e => e.QfmAniomes)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("qfm_aniomes");

                entity.Property(e => e.QfmEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("qfm_empresa");
            });

            modelBuilder.Entity<Rechtar>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RECHTAR");

                entity.HasIndex(e => e.TarNumero, "IDXRECHTAR")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.TarCodigo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TAR_CODIGO");

                entity.Property(e => e.TarNumero)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("TAR_NUMERO");

                entity.Property(e => e.TarStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TAR_STATUS");
            });

            modelBuilder.Entity<RelUbicacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("REL_UBICACION");

                entity.HasIndex(e => new { e.UbiEmpresa, e.UbiCodigo }, "PK_RELUBICA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.UbiCodigo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("UBI_CODIGO");

                entity.Property(e => e.UbiDescripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("UBI_DESCRIPCION");

                entity.Property(e => e.UbiDireccion)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("UBI_DIRECCION");

                entity.Property(e => e.UbiEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("UBI_EMPRESA");

                entity.Property(e => e.UbiEncargado)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("UBI_ENCARGADO");

                entity.Property(e => e.UbiTelefono)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("UBI_TELEFONO");
            });

            modelBuilder.Entity<RelojFisico>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RELOJ_FISICO");

                entity.HasIndex(e => new { e.RfEmpresa, e.RfPersonal, e.RfAno, e.RfMes, e.RfFecha, e.RfHoras }, "PK_RFISICO")
                    .HasFillFactor(90);

                entity.Property(e => e.RfAno).HasColumnName("RF_ANO");

                entity.Property(e => e.RfEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("RF_EMPRESA");

                entity.Property(e => e.RfFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("RF_FECHA");

                entity.Property(e => e.RfHoras).HasColumnName("RF_HORAS");

                entity.Property(e => e.RfMes).HasColumnName("RF_MES");

                entity.Property(e => e.RfPersonal)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("RF_PERSONAL");
            });

            modelBuilder.Entity<Responsable>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RESPONSABLE");

                entity.Property(e => e.ResActivo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("RES_ACTIVO");

                entity.Property(e => e.ResEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("RES_EMPRESA");

                entity.Property(e => e.ResFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("RES_FECHA");

                entity.Property(e => e.ResPersona)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("RES_PERSONA");
            });

            modelBuilder.Entity<RolesUsuario>(entity =>
            {
                entity.HasKey(e => new { e.UserEmpresa, e.UserUsuario, e.UserRole });

                entity.ToTable("ROLES_USUARIO");

                entity.Property(e => e.UserEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("USER_EMPRESA");

                entity.Property(e => e.UserUsuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("USER_USUARIO");

                entity.Property(e => e.UserRole)
                    .HasMaxLength(20)
                    .HasColumnName("USER_ROLE")
                    .IsFixedLength();
            });

            modelBuilder.Entity<RutasDia>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RUTAS_DIAS");

                entity.Property(e => e.DstD1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DST_D1");

                entity.Property(e => e.DstD2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DST_D2");

                entity.Property(e => e.DstD3)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DST_D3");

                entity.Property(e => e.DstD4)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DST_D4");

                entity.Property(e => e.DstD5)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DST_D5");

                entity.Property(e => e.DstD6)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DST_D6");

                entity.Property(e => e.DstD7)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DST_D7");

                entity.Property(e => e.DstDescripcion)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("DST_DESCRIPCION");

                entity.Property(e => e.DstEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DST_EMPRESA");

                entity.Property(e => e.DstRuta)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("DST_RUTA");
            });

            modelBuilder.Entity<RutasZonageografica>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("RUTAS_ZONAGEOGRAFICA");

                entity.Property(e => e.CodEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("COD_EMPRESA");

                entity.Property(e => e.CodRuta)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("COD_RUTA");

                entity.Property(e => e.CodZona)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("COD_ZONA");
            });

            modelBuilder.Entity<SegVarUsuario>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("seg_var_usuario");

                entity.HasIndex(e => new { e.VusrEmpresa, e.VusrModulo, e.VusrVariable, e.VusrUsuario }, "PK_SVUSR")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.VusrEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VUSR_EMPRESA");

                entity.Property(e => e.VusrModulo)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VUSR_MODULO");

                entity.Property(e => e.VusrUsuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VUSR_USUARIO");

                entity.Property(e => e.VusrValor)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("VUSR_VALOR");

                entity.Property(e => e.VusrVariable)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("VUSR_VARIABLE");
            });

            modelBuilder.Entity<SegVariable>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SEG_VARIABLES");

                entity.HasIndex(e => new { e.SvarEmpresa, e.SvarModulo, e.SvarCodigo }, "PK_SEGVAR")
                    .HasFillFactor(90);

                entity.Property(e => e.SvarCodigo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("SVAR_CODIGO");

                entity.Property(e => e.SvarDefault)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SVAR_DEFAULT");

                entity.Property(e => e.SvarDescrip)
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasColumnName("SVAR_DESCRIP");

                entity.Property(e => e.SvarEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SVAR_EMPRESA");

                entity.Property(e => e.SvarModulo)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SVAR_MODULO");
            });

            modelBuilder.Entity<SistemasVenta>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SISTEMAS_VENTAS");

                entity.Property(e => e.SisEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SIS_EMPRESA");

                entity.Property(e => e.SisNombre)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SIS_NOMBRE");

                entity.Property(e => e.SisSistema)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("SIS_SISTEMA");
            });

            modelBuilder.Entity<SublineasVta>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SUBLINEAS_VTAS");

                entity.Property(e => e.SvtEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SVT_EMPRESA");

                entity.Property(e => e.SvtLineavta)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("SVT_LINEAVTA");

                entity.Property(e => e.SvtNombre)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SVT_NOMBRE");

                entity.Property(e => e.SvtSublineavta)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SVT_SUBLINEAVTA");

                entity.Property(e => e.SvtUtilidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("SVT_UTILIDAD");
            });

            modelBuilder.Entity<Sublineaspo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SUBLINEASPOS");

                entity.HasIndex(e => new { e.SubEmpresa, e.SubSublineainv }, "IDX_SUBLINEAS")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.SubEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SUB_EMPRESA");

                entity.Property(e => e.SubNombre)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("SUB_NOMBRE");

                entity.Property(e => e.SubSublineainv)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SUB_SUBLINEAINV");

                entity.Property(e => e.SubUtilidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("SUB_UTILIDAD");
            });

            modelBuilder.Entity<SumaFactura>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SUMA_FACTURA");

                entity.HasIndex(e => new { e.SumEmpresa, e.SumRandom, e.SumFactura }, "IDXSUMA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.SumEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SUM_EMPRESA");

                entity.Property(e => e.SumFactura).HasColumnName("SUM_FACTURA");

                entity.Property(e => e.SumRandom).HasColumnName("SUM_RANDOM");

                entity.Property(e => e.SumValor)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("SUM_VALOR");
            });

            modelBuilder.Entity<TablaPorcentaje>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TABLA_PORCENTAJES");

                entity.HasIndex(e => new { e.PctEmpresa, e.PctTipo, e.PctLinea }, "PK_TABLA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.PctEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("PCT_EMPRESA");

                entity.Property(e => e.PctFinal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PCT_FINAL");

                entity.Property(e => e.PctInicio)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PCT_INICIO");

                entity.Property(e => e.PctLinea).HasColumnName("PCT_LINEA");

                entity.Property(e => e.PctPorcentaje)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("PCT_PORCENTAJE");

                entity.Property(e => e.PctTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("PCT_TIPO");
            });

            modelBuilder.Entity<Tartemp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TARTEMP");

                entity.HasIndex(e => e.TartNumero, "IDXTARTEMP")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.TartCodigo)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TART_CODIGO");

                entity.Property(e => e.TartNumero)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("TART_NUMERO");

                entity.Property(e => e.TartStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TART_STATUS");
            });

            modelBuilder.Entity<TasaDolar>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TASA_DOLAR");

                entity.HasIndex(e => e.TasEmpresa, "PK_TASA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.TasEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TAS_EMPRESA");

                entity.Property(e => e.TasTasa)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("TAS_TASA");
            });

            modelBuilder.Entity<TempCliente>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TEMP_CLIENTE");

                entity.HasIndex(e => new { e.TmpEmpresa, e.TmpTienda, e.TmpTerminal, e.TmpNumero }, "TMP_CLI")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.TmpDireccion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("TMP_DIRECCION");

                entity.Property(e => e.TmpDireccion1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("TMP_DIRECCION1");

                entity.Property(e => e.TmpEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TMP_EMPRESA");

                entity.Property(e => e.TmpNit)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("TMP_NIT");

                entity.Property(e => e.TmpNombre)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("TMP_NOMBRE");

                entity.Property(e => e.TmpNumero).HasColumnName("TMP_NUMERO");

                entity.Property(e => e.TmpSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TMP_SERIE");

                entity.Property(e => e.TmpTerminal).HasColumnName("TMP_TERMINAL");

                entity.Property(e => e.TmpTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TMP_TIENDA");
            });

            modelBuilder.Entity<TempClienteExtra>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TEMP_CLIENTE_EXTRA");

                entity.HasIndex(e => new { e.TmpEmpresa, e.TmpTienda, e.TmpTerminal, e.TmpNumero }, "TMP_CLIEX")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.TmpEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TMP_EMPRESA");

                entity.Property(e => e.TmpGiro)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("TMP_GIRO");

                entity.Property(e => e.TmpNumero).HasColumnName("TMP_NUMERO");

                entity.Property(e => e.TmpRegistro)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TMP_REGISTRO");

                entity.Property(e => e.TmpSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TMP_SERIE");

                entity.Property(e => e.TmpTerminal).HasColumnName("TMP_TERMINAL");

                entity.Property(e => e.TmpTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TMP_TIENDA");
            });

            modelBuilder.Entity<TempClientePedido>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TEMP_CLIENTE_PEDIDOS");

                entity.HasIndex(e => new { e.TmpEmpresa, e.TmpOrden }, "TMP_CLIPEDIDOS")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.TmpDireccion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("TMP_DIRECCION");

                entity.Property(e => e.TmpDireccion1)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("TMP_DIRECCION1");

                entity.Property(e => e.TmpEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TMP_EMPRESA");

                entity.Property(e => e.TmpNit)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TMP_NIT");

                entity.Property(e => e.TmpNombre)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("TMP_NOMBRE");

                entity.Property(e => e.TmpOrden).HasColumnName("TMP_ORDEN");

                entity.Property(e => e.TmpPhones)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("TMP_PHONES");
            });

            modelBuilder.Entity<TempEstado>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TEMP_ESTADO");

                entity.HasIndex(e => new { e.TmpEmpresa, e.TmpRandom }, "PK_ESTADO")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.TmpEmpresa, e.TmpRandom, e.TmpTienda, e.TmpTerminal, e.TmpCliente }, "PK_ESTADO2")
                    .HasFillFactor(90);

                entity.Property(e => e.TmpCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TMP_CLIENTE");

                entity.Property(e => e.TmpDoctoafec)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("tmp_doctoafec");

                entity.Property(e => e.TmpDocumento).HasColumnName("TMP_DOCUMENTO");

                entity.Property(e => e.TmpEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TMP_EMPRESA");

                entity.Property(e => e.TmpFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TMP_FECHA");

                entity.Property(e => e.TmpMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TMP_MONEDA");

                entity.Property(e => e.TmpMonto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("TMP_MONTO");

                entity.Property(e => e.TmpOrdena).HasColumnName("TMP_ORDENA");

                entity.Property(e => e.TmpRandom).HasColumnName("TMP_RANDOM");

                entity.Property(e => e.TmpSaldo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("TMP_SALDO");

                entity.Property(e => e.TmpSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TMP_SERIE");

                entity.Property(e => e.TmpTasacam)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("TMP_TASACAM");

                entity.Property(e => e.TmpTerminal).HasColumnName("TMP_TERMINAL");

                entity.Property(e => e.TmpTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TMP_TIENDA");

                entity.Property(e => e.TmpTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TMP_TIPO");
            });

            modelBuilder.Entity<TempPartida>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TEMP_PARTIDAS");

                entity.HasIndex(e => new { e.TmpEmpresa, e.TmpMes, e.TmpNumAnt }, "TMP_PARTIDAS")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.TmpEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TMP_EMPRESA");

                entity.Property(e => e.TmpMes).HasColumnName("TMP_MES");

                entity.Property(e => e.TmpNumAct).HasColumnName("TMP_NUM_ACT");

                entity.Property(e => e.TmpNumAnt).HasColumnName("TMP_NUM_ANT");
            });

            modelBuilder.Entity<Temphead>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TEMPHEAD");

                entity.Property(e => e.TemphArea)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TEMPH_AREA");

                entity.Property(e => e.TemphCentro)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TEMPH_CENTRO");

                entity.Property(e => e.TemphCobrador)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TEMPH_COBRADOR");

                entity.Property(e => e.TemphDiasp).HasColumnName("TEMPH_DIASP");

                entity.Property(e => e.TemphEnvio).HasColumnName("TEMPH_ENVIO");

                entity.Property(e => e.TemphIntereses)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("TEMPH_INTERESES");

                entity.Property(e => e.TemphMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TEMPH_MONEDA");

                entity.Property(e => e.TemphNombre)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("TEMPH_NOMBRE");

                entity.Property(e => e.TemphOrdenc).HasColumnName("TEMPH_ORDENC");

                entity.Property(e => e.TemphRuta)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TEMPH_RUTA");

                entity.Property(e => e.TemphTasacam)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("TEMPH_TASACAM");

                entity.Property(e => e.TemphTransaccion)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TEMPH_TRANSACCION");

                entity.Property(e => e.TmphActxc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TMPH_ACTXC");

                entity.Property(e => e.TmphBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TMPH_BODEGA");

                entity.Property(e => e.TmphChtj1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TMPH_CHTJ1");

                entity.Property(e => e.TmphChtj2)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TMPH_CHTJ2");

                entity.Property(e => e.TmphCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TMPH_CLIENTE");

                entity.Property(e => e.TmphConcred1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TMPH_CONCRED1");

                entity.Property(e => e.TmphConcred2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TMPH_CONCRED2");

                entity.Property(e => e.TmphCortesia)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TMPH_CORTESIA");

                entity.Property(e => e.TmphDescuen)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("TMPH_DESCUEN");

                entity.Property(e => e.TmphDocnum1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TMPH_DOCNUM1");

                entity.Property(e => e.TmphDocnum2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TMPH_DOCNUM2");

                entity.Property(e => e.TmphEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TMPH_EMPRESA");

                entity.Property(e => e.TmphFactura).HasColumnName("TMPH_FACTURA");

                entity.Property(e => e.TmphFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TMPH_FECHA");

                entity.Property(e => e.TmphHora)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("TMPH_HORA");

                entity.Property(e => e.TmphIva)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("TMPH_IVA");

                entity.Property(e => e.TmphMonto1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("TMPH_MONTO1");

                entity.Property(e => e.TmphMonto2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("TMPH_MONTO2");

                entity.Property(e => e.TmphNumauto1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TMPH_NUMAUTO1");

                entity.Property(e => e.TmphNumauto2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TMPH_NUMAUTO2");

                entity.Property(e => e.TmphNumero).HasColumnName("TMPH_NUMERO");

                entity.Property(e => e.TmphNumtar1)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("TMPH_NUMTAR1");

                entity.Property(e => e.TmphNumtar2)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("TMPH_NUMTAR2");

                entity.Property(e => e.TmphOtros)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("TMPH_OTROS");

                entity.Property(e => e.TmphSaldo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("TMPH_SALDO");

                entity.Property(e => e.TmphSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TMPH_SERIE");

                entity.Property(e => e.TmphStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TMPH_STATUS");

                entity.Property(e => e.TmphTasa)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("TMPH_TASA");

                entity.Property(e => e.TmphTelefono)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TMPH_TELEFONO");

                entity.Property(e => e.TmphTerminal).HasColumnName("TMPH_TERMINAL");

                entity.Property(e => e.TmphTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TMPH_TIENDA");

                entity.Property(e => e.TmphTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("TMPH_TOTAL");

                entity.Property(e => e.TmphUsuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TMPH_USUARIO");

                entity.Property(e => e.TmphValor)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("TMPH_VALOR");

                entity.Property(e => e.TmphVendedor).HasColumnName("TMPH_VENDEDOR");
            });

            modelBuilder.Entity<Templine>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TEMPLINE");

                entity.Property(e => e.TmplBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TMPL_BODEGA");

                entity.Property(e => e.TmplComision)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("TMPL_COMISION");

                entity.Property(e => e.TmplCosto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("TMPL_COSTO");

                entity.Property(e => e.TmplCostotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("TMPL_COSTOTAL");

                entity.Property(e => e.TmplCosuni)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("TMPL_COSUNI");

                entity.Property(e => e.TmplDescuen)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("TMPL_DESCUEN");

                entity.Property(e => e.TmplEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TMPL_EMPRESA");

                entity.Property(e => e.TmplFechat)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TMPL_FECHAT");

                entity.Property(e => e.TmplGarantia)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("TMPL_GARANTIA");

                entity.Property(e => e.TmplInvNombre)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TMPL_INV_NOMBRE");

                entity.Property(e => e.TmplInvNuevo)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("TMPL_INV_NUEVO");

                entity.Property(e => e.TmplInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("TMPL_INVENTARIO");

                entity.Property(e => e.TmplLinea).HasColumnName("TMPL_LINEA");

                entity.Property(e => e.TmplNumero).HasColumnName("TMPL_NUMERO");

                entity.Property(e => e.TmplPctdescuento).HasColumnName("TMPL_PCTDESCUENTO");

                entity.Property(e => e.TmplPrecioun)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("TMPL_PRECIOUN");

                entity.Property(e => e.TmplSerie)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("TMPL_SERIE");

                entity.Property(e => e.TmplSerieflag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TMPL_SERIEFLAG");

                entity.Property(e => e.TmplSublineainv)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TMPL_SUBLINEAINV");

                entity.Property(e => e.TmplTerminal).HasColumnName("TMPL_TERMINAL");

                entity.Property(e => e.TmplTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TMPL_TIENDA");

                entity.Property(e => e.TmplUnidad)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("TMPL_UNIDAD");

                entity.Property(e => e.TmplUnidades)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("TMPL_UNIDADES");
            });

            modelBuilder.Entity<TmpCp2ClientesExtra>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TMP_CP2_CLIENTES_EXTRA");

                entity.Property(e => e.ExtAvisojornada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EXT_AVISOJORNADA");

                entity.Property(e => e.ExtAvisotel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EXT_AVISOTEL");

                entity.Property(e => e.ExtCelular)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("EXT_CELULAR");

                entity.Property(e => e.ExtCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("EXT_CLIENTE");

                entity.Property(e => e.ExtConcred)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EXT_CONCRED");

                entity.Property(e => e.ExtContacto1)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("EXT_CONTACTO1");

                entity.Property(e => e.ExtContacto2)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("EXT_CONTACTO2");

                entity.Property(e => e.ExtContacto3)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("EXT_CONTACTO3");

                entity.Property(e => e.ExtCorreoelec)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("EXT_CORREOELEC");

                entity.Property(e => e.ExtDias).HasColumnName("EXT_DIAS");

                entity.Property(e => e.ExtDocgenerar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EXT_DOCGENERAR");

                entity.Property(e => e.ExtEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("EXT_EMPRESA");

                entity.Property(e => e.ExtExtra1).HasColumnName("EXT_EXTRA1");

                entity.Property(e => e.ExtExtra2).HasColumnName("EXT_EXTRA2");

                entity.Property(e => e.ExtExtra3).HasColumnName("EXT_EXTRA3");

                entity.Property(e => e.ExtExtra4).HasColumnName("EXT_EXTRA4");

                entity.Property(e => e.ExtExtra5).HasColumnName("EXT_EXTRA5");

                entity.Property(e => e.ExtExtra6)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("EXT_EXTRA6");

                entity.Property(e => e.ExtExtra7)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("EXT_EXTRA7");

                entity.Property(e => e.ExtExtra8)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EXT_EXTRA8");

                entity.Property(e => e.ExtFaccontable)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EXT_FACCONTABLE");

                entity.Property(e => e.ExtFax)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXT_FAX");

                entity.Property(e => e.ExtFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EXT_FECHA");

                entity.Property(e => e.ExtGiro)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("EXT_GIRO");

                entity.Property(e => e.ExtLocal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EXT_LOCAL");

                entity.Property(e => e.ExtMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("EXT_MONEDA");

                entity.Property(e => e.ExtNivprecio).HasColumnName("EXT_NIVPRECIO");

                entity.Property(e => e.ExtNombrefac)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("EXT_NOMBREFAC");

                entity.Property(e => e.ExtPeriodofac).HasColumnName("EXT_PERIODOFAC");

                entity.Property(e => e.ExtRegistro)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("EXT_REGISTRO");

                entity.Property(e => e.ExtTelefonos)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("EXT_TELEFONOS");

                entity.Property(e => e.ExtTipfacturac)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EXT_TIPFACTURAC");

                entity.Property(e => e.ExtTipoind)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXT_TIPOIND");

                entity.Property(e => e.ExtUbicacion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("EXT_UBICACION");

                entity.Property(e => e.ExtVendedor).HasColumnName("EXT_VENDEDOR");
            });

            modelBuilder.Entity<TmpCp2Moneda>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TMP_CP2_MONEDAS");

                entity.Property(e => e.MonFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MON_FECHA");

                entity.Property(e => e.MonMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MON_MONEDA");

                entity.Property(e => e.MonTasa)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("MON_TASA");
            });

            modelBuilder.Entity<TmpCp2OtrosPrecio>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TMP_CP2_OTROS_PRECIOS");

                entity.Property(e => e.OtrEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("OTR_EMPRESA")
                    .IsFixedLength();

                entity.Property(e => e.OtrInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("OTR_INVENTARIO")
                    .IsFixedLength();

                entity.Property(e => e.OtrMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OTR_MONEDA")
                    .IsFixedLength();

                entity.Property(e => e.OtrPrecio1).HasColumnName("OTR_PRECIO1");

                entity.Property(e => e.OtrPrecio2).HasColumnName("OTR_PRECIO2");

                entity.Property(e => e.OtrPrecio3).HasColumnName("OTR_PRECIO3");

                entity.Property(e => e.OtrPrecio4).HasColumnName("OTR_PRECIO4");

                entity.Property(e => e.OtrPrecio5).HasColumnName("OTR_PRECIO5");

                entity.Property(e => e.OtrPrecio6).HasColumnName("OTR_PRECIO6");
            });

            modelBuilder.Entity<TmpCp2VendedorExtra>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TMP_CP2_VENDEDOR_EXTRA");

                entity.Property(e => e.VxtBasecom)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("VXT_BASECOM");

                entity.Property(e => e.VxtBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VXT_BODEGA");

                entity.Property(e => e.VxtBonificacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VXT_BONIFICACION");

                entity.Property(e => e.VxtCanal).HasColumnName("VXT_CANAL");

                entity.Property(e => e.VxtClicodigo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("VXT_CLICODIGO");

                entity.Property(e => e.VxtClicodxz)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("VXT_CLICODXZ");

                entity.Property(e => e.VxtEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VXT_EMPRESA");

                entity.Property(e => e.VxtEnvios)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VXT_ENVIOS")
                    .IsFixedLength();

                entity.Property(e => e.VxtFactoraux)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("VXT_FACTORAUX");

                entity.Property(e => e.VxtFactorpil)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("VXT_FACTORPIL");

                entity.Property(e => e.VxtLimiteparr).HasColumnName("VXT_LIMITEPARR");

                entity.Property(e => e.VxtMinMulta)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VXT_MIN_MULTA");

                entity.Property(e => e.VxtMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VXT_MONEDA");

                entity.Property(e => e.VxtMonedadef)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VXT_MONEDADEF");

                entity.Property(e => e.VxtMultfinan)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VXT_MULTFINAN");

                entity.Property(e => e.VxtNivprecdef).HasColumnName("VXT_NIVPRECDEF");

                entity.Property(e => e.VxtNivprecio).HasColumnName("VXT_NIVPRECIO");

                entity.Property(e => e.VxtOperasa)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VXT_OPERASA")
                    .IsFixedLength();

                entity.Property(e => e.VxtPorcmulta)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VXT_PORCMULTA");

                entity.Property(e => e.VxtPorctolera)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VXT_PORCTOLERA");

                entity.Property(e => e.VxtPorfact)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("VXT_PORFACT");

                entity.Property(e => e.VxtSeguridad)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VXT_SEGURIDAD")
                    .IsFixedLength();

                entity.Property(e => e.VxtSistema)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("VXT_SISTEMA");

                entity.Property(e => e.VxtTipoliquidac)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VXT_TIPOLIQUIDAC");

                entity.Property(e => e.VxtTipruta).HasColumnName("VXT_TIPRUTA");

                entity.Property(e => e.VxtUnidcambio)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VXT_UNIDCAMBIO");

                entity.Property(e => e.VxtVendedor).HasColumnName("VXT_VENDEDOR");
            });

            modelBuilder.Entity<TmpCp3OtrosPrecio>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TMP_CP3_OTROS_PRECIOS");

                entity.Property(e => e.OtrEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("OTR_EMPRESA")
                    .IsFixedLength();

                entity.Property(e => e.OtrInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("OTR_INVENTARIO")
                    .IsFixedLength();

                entity.Property(e => e.OtrMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OTR_MONEDA")
                    .IsFixedLength();

                entity.Property(e => e.OtrPrecio1).HasColumnName("OTR_PRECIO1");

                entity.Property(e => e.OtrPrecio2).HasColumnName("OTR_PRECIO2");

                entity.Property(e => e.OtrPrecio3).HasColumnName("OTR_PRECIO3");

                entity.Property(e => e.OtrPrecio4).HasColumnName("OTR_PRECIO4");

                entity.Property(e => e.OtrPrecio5).HasColumnName("OTR_PRECIO5");

                entity.Property(e => e.OtrPrecio6).HasColumnName("OTR_PRECIO6");
            });

            modelBuilder.Entity<TmpCpClientesExtra>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TMP_CP_CLIENTES_EXTRA");

                entity.Property(e => e.ExtAvisojornada)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EXT_AVISOJORNADA");

                entity.Property(e => e.ExtAvisotel)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EXT_AVISOTEL");

                entity.Property(e => e.ExtCelular)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("EXT_CELULAR");

                entity.Property(e => e.ExtCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("EXT_CLIENTE");

                entity.Property(e => e.ExtConcred)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EXT_CONCRED");

                entity.Property(e => e.ExtContacto1)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("EXT_CONTACTO1");

                entity.Property(e => e.ExtContacto2)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("EXT_CONTACTO2");

                entity.Property(e => e.ExtContacto3)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("EXT_CONTACTO3");

                entity.Property(e => e.ExtCorreoelec)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("EXT_CORREOELEC");

                entity.Property(e => e.ExtDias).HasColumnName("EXT_DIAS");

                entity.Property(e => e.ExtDocgenerar)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EXT_DOCGENERAR");

                entity.Property(e => e.ExtEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("EXT_EMPRESA");

                entity.Property(e => e.ExtExtra1).HasColumnName("EXT_EXTRA1");

                entity.Property(e => e.ExtExtra2).HasColumnName("EXT_EXTRA2");

                entity.Property(e => e.ExtExtra3).HasColumnName("EXT_EXTRA3");

                entity.Property(e => e.ExtExtra4).HasColumnName("EXT_EXTRA4");

                entity.Property(e => e.ExtExtra5).HasColumnName("EXT_EXTRA5");

                entity.Property(e => e.ExtExtra6)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("EXT_EXTRA6");

                entity.Property(e => e.ExtExtra7)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("EXT_EXTRA7");

                entity.Property(e => e.ExtExtra8)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EXT_EXTRA8");

                entity.Property(e => e.ExtFaccontable)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EXT_FACCONTABLE");

                entity.Property(e => e.ExtFax)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXT_FAX");

                entity.Property(e => e.ExtFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("EXT_FECHA");

                entity.Property(e => e.ExtGiro)
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("EXT_GIRO");

                entity.Property(e => e.ExtLocal)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EXT_LOCAL");

                entity.Property(e => e.ExtMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("EXT_MONEDA");

                entity.Property(e => e.ExtNivprecio).HasColumnName("EXT_NIVPRECIO");

                entity.Property(e => e.ExtNombrefac)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("EXT_NOMBREFAC");

                entity.Property(e => e.ExtPeriodofac).HasColumnName("EXT_PERIODOFAC");

                entity.Property(e => e.ExtRegistro)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("EXT_REGISTRO");

                entity.Property(e => e.ExtTelefonos)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("EXT_TELEFONOS");

                entity.Property(e => e.ExtTipfacturac)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("EXT_TIPFACTURAC");

                entity.Property(e => e.ExtTipoind)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("EXT_TIPOIND");

                entity.Property(e => e.ExtUbicacion)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("EXT_UBICACION");

                entity.Property(e => e.ExtVendedor).HasColumnName("EXT_VENDEDOR");
            });

            modelBuilder.Entity<TmpCpInventario>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TMP_CP_INVENTARIO");

                entity.Property(e => e.TmpInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("TMP_INVENTARIO")
                    .IsFixedLength();

                entity.Property(e => e.TmpInvtipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TMP_INVTIPO")
                    .IsFixedLength();
            });

            modelBuilder.Entity<TmpCpMoneda>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TMP_CP_MONEDAS");

                entity.Property(e => e.TmpMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TMP_MONEDA")
                    .IsFixedLength();

                entity.Property(e => e.TmpMonedanivel)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TMP_MONEDANIVEL")
                    .IsFixedLength();

                entity.Property(e => e.TmpMontipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TMP_MONTIPO")
                    .IsFixedLength();

                entity.Property(e => e.TmpNivel).HasColumnName("TMP_NIVEL");
            });

            modelBuilder.Entity<TmpCpMonedas1>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TMP_CP_MONEDAS1");

                entity.Property(e => e.MonFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("MON_FECHA");

                entity.Property(e => e.MonMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("MON_MONEDA");

                entity.Property(e => e.MonTasa)
                    .HasColumnType("decimal(23, 8)")
                    .HasColumnName("MON_TASA");
            });

            modelBuilder.Entity<TmpCpOtrosPrecio>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TMP_CP_OTROS_PRECIOS");

                entity.Property(e => e.OtrEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("OTR_EMPRESA")
                    .IsFixedLength();

                entity.Property(e => e.OtrInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("OTR_INVENTARIO")
                    .IsFixedLength();

                entity.Property(e => e.OtrMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("OTR_MONEDA")
                    .IsFixedLength();

                entity.Property(e => e.OtrPrecio1).HasColumnName("OTR_PRECIO1");

                entity.Property(e => e.OtrPrecio2).HasColumnName("OTR_PRECIO2");

                entity.Property(e => e.OtrPrecio3).HasColumnName("OTR_PRECIO3");

                entity.Property(e => e.OtrPrecio4).HasColumnName("OTR_PRECIO4");

                entity.Property(e => e.OtrPrecio5).HasColumnName("OTR_PRECIO5");

                entity.Property(e => e.OtrPrecio6).HasColumnName("OTR_PRECIO6");
            });

            modelBuilder.Entity<TmpCpVendedorExtra>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TMP_CP_VENDEDOR_EXTRA");

                entity.Property(e => e.VxtBasecom)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("VXT_BASECOM");

                entity.Property(e => e.VxtBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VXT_BODEGA");

                entity.Property(e => e.VxtBonificacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VXT_BONIFICACION");

                entity.Property(e => e.VxtCanal).HasColumnName("VXT_CANAL");

                entity.Property(e => e.VxtClicodigo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("VXT_CLICODIGO");

                entity.Property(e => e.VxtClicodxz)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("VXT_CLICODXZ");

                entity.Property(e => e.VxtEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VXT_EMPRESA");

                entity.Property(e => e.VxtEnvios)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VXT_ENVIOS")
                    .IsFixedLength();

                entity.Property(e => e.VxtFactoraux)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("VXT_FACTORAUX");

                entity.Property(e => e.VxtFactorpil)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("VXT_FACTORPIL");

                entity.Property(e => e.VxtLimiteparr).HasColumnName("VXT_LIMITEPARR");

                entity.Property(e => e.VxtMinMulta)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VXT_MIN_MULTA");

                entity.Property(e => e.VxtMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VXT_MONEDA");

                entity.Property(e => e.VxtMonedadef)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VXT_MONEDADEF");

                entity.Property(e => e.VxtMultfinan)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VXT_MULTFINAN");

                entity.Property(e => e.VxtNivprecdef).HasColumnName("VXT_NIVPRECDEF");

                entity.Property(e => e.VxtNivprecio).HasColumnName("VXT_NIVPRECIO");

                entity.Property(e => e.VxtOperasa)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VXT_OPERASA")
                    .IsFixedLength();

                entity.Property(e => e.VxtPorcmulta)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VXT_PORCMULTA");

                entity.Property(e => e.VxtPorctolera)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VXT_PORCTOLERA");

                entity.Property(e => e.VxtPorfact)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("VXT_PORFACT");

                entity.Property(e => e.VxtSeguridad)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VXT_SEGURIDAD")
                    .IsFixedLength();

                entity.Property(e => e.VxtSistema)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("VXT_SISTEMA");

                entity.Property(e => e.VxtTipoliquidac)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VXT_TIPOLIQUIDAC");

                entity.Property(e => e.VxtTipruta).HasColumnName("VXT_TIPRUTA");

                entity.Property(e => e.VxtUnidcambio)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VXT_UNIDCAMBIO");

                entity.Property(e => e.VxtVendedor).HasColumnName("VXT_VENDEDOR");
            });

            modelBuilder.Entity<TmpVtadev>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TMP_VTADEV");

                entity.Property(e => e.CliCad)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CLI_CAD");

                entity.Property(e => e.CliCaddesc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CLI_CADDESC");

                entity.Property(e => e.CliSca)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CLI_SCA");

                entity.Property(e => e.CliScadesc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("CLI_SCADESC");

                entity.Property(e => e.Correl).HasColumnName("CORREL");

                entity.Property(e => e.DevTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DEV_TOTAL");

                entity.Property(e => e.DevUnidades)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DEV_UNIDADES");

                entity.Property(e => e.VehCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("VEH_CLIENTE");

                entity.Property(e => e.VehEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VEH_EMPRESA");

                entity.Property(e => e.VelInventario)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("VEL_INVENTARIO");

                entity.Property(e => e.VelTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEL_TOTAL");

                entity.Property(e => e.VelUnidades)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEL_UNIDADES");
            });

            modelBuilder.Entity<TransConfig>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("Trans_Config");

                entity.Property(e => e.Descripcion)
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasColumnName("descripcion");

                entity.Property(e => e.Empresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("empresa");

                entity.Property(e => e.Modulo)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("modulo");

                entity.Property(e => e.TipoDocu)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("tipo_docu");

                entity.Property(e => e.TipoTrans)
                    .HasColumnType("numeric(18, 0)")
                    .HasColumnName("tipo_trans");

                entity.Property(e => e.Transaccion)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("transaccion");
            });

            modelBuilder.Entity<TransacInv>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TRANSAC_INV");

                entity.HasIndex(e => new { e.TraEmpresa, e.TraCorrelativo }, "PK_TRANS_INV")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => e.TraEmpresa, "SK_TRANSGEN1")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.TraEmpresa, e.TraInventario }, "SK_TRANSGEN2")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.TraEmpresa, e.TraBodega, e.TraInventario, e.TraFechat }, "SK_TRASACBIF")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.TraEmpresa, e.TraFechat }, "SK_TRASACF")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.TraEmpresa, e.TraTipo, e.TraFechat }, "SK_TRASACTF")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.TraEmpresa, e.TraInventario, e.TraFechat }, "TRASAC2")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.TraEmpresa, e.TraTipodoc, e.TraDocumento }, "TRA_TIPODOCUMENTO")
                    .HasFillFactor(90);

                entity.Property(e => e.TraBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRA_BODEGA");

                entity.Property(e => e.TraCantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("TRA_CANTIDAD");

                entity.Property(e => e.TraCentro)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRA_CENTRO");

                entity.Property(e => e.TraCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TRA_CLIENTE");

                entity.Property(e => e.TraCorrelativo).HasColumnName("TRA_CORRELATIVO");

                entity.Property(e => e.TraCosto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("TRA_COSTO");

                entity.Property(e => e.TraDocumento)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TRA_DOCUMENTO");

                entity.Property(e => e.TraEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TRA_EMPRESA");

                entity.Property(e => e.TraFechat)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("TRA_FECHAT");

                entity.Property(e => e.TraInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("TRA_INVENTARIO");

                entity.Property(e => e.TraPrecio)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("TRA_PRECIO");

                entity.Property(e => e.TraSublineainv)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TRA_SUBLINEAINV");

                entity.Property(e => e.TraTasa)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("TRA_TASA");

                entity.Property(e => e.TraTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TRA_TIPO");

                entity.Property(e => e.TraTipodoc)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("TRA_TIPODOC");
            });

            modelBuilder.Entity<TransacVentasH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TRANSAC_VENTAS_H");

                entity.HasIndex(e => new { e.TvhEmpresa, e.TvhCodigo }, "TRA_VENTAS_H")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.TvhCodigo)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TVH_CODIGO");

                entity.Property(e => e.TvhEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TVH_EMPRESA");

                entity.Property(e => e.TvhNombre)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("TVH_NOMBRE");

                entity.Property(e => e.TvhTipo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TVH_TIPO");
            });

            modelBuilder.Entity<TransacVentasL>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TRANSAC_VENTAS_L");

                entity.HasIndex(e => new { e.TvlEmpresa, e.TvlCodigo, e.TvlCuenta, e.TvlCorrelativo }, "TRA_VENTAS_H")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.TvlCampo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TVL_CAMPO");

                entity.Property(e => e.TvlCodigo)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TVL_CODIGO");

                entity.Property(e => e.TvlCorrelativo).HasColumnName("TVL_CORRELATIVO");

                entity.Property(e => e.TvlCuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TVL_CUENTA");

                entity.Property(e => e.TvlDebeHaber)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TVL_DEBE_HABER");

                entity.Property(e => e.TvlEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TVL_EMPRESA");
            });

            modelBuilder.Entity<TransaccionCompra>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TRANSACCION_COMPRAS");

                entity.HasIndex(e => new { e.TrcEmpresa, e.TrcCodigo, e.TrcCuenta, e.TrcCampo }, "TRA_COMPRAS")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.TrcCampo)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("TRC_CAMPO");

                entity.Property(e => e.TrcCodigo)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TRC_CODIGO");

                entity.Property(e => e.TrcCuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("TRC_CUENTA");

                entity.Property(e => e.TrcDebehaber)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("TRC_DEBEHABER");

                entity.Property(e => e.TrcEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TRC_EMPRESA");
            });

            modelBuilder.Entity<TurnoSemana>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TURNO_SEMANA");

                entity.HasIndex(e => new { e.TsEmpresa, e.TsTurnoSem }, "PK_TUR_SEM1")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.TsDescripcion)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("TS_DESCRIPCION");

                entity.Property(e => e.TsEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("TS_EMPRESA");

                entity.Property(e => e.TsHe11).HasColumnName("TS_HE1_1");

                entity.Property(e => e.TsHe12).HasColumnName("TS_HE1_2");

                entity.Property(e => e.TsHe13).HasColumnName("TS_HE1_3");

                entity.Property(e => e.TsHe14).HasColumnName("TS_HE1_4");

                entity.Property(e => e.TsHe15).HasColumnName("TS_HE1_5");

                entity.Property(e => e.TsHe16).HasColumnName("TS_HE1_6");

                entity.Property(e => e.TsHe17).HasColumnName("TS_HE1_7");

                entity.Property(e => e.TsHe21).HasColumnName("TS_HE2_1");

                entity.Property(e => e.TsHe22).HasColumnName("TS_HE2_2");

                entity.Property(e => e.TsHe23).HasColumnName("TS_HE2_3");

                entity.Property(e => e.TsHe24).HasColumnName("TS_HE2_4");

                entity.Property(e => e.TsHe25).HasColumnName("TS_HE2_5");

                entity.Property(e => e.TsHe26).HasColumnName("TS_HE2_6");

                entity.Property(e => e.TsHe27).HasColumnName("TS_HE2_7");

                entity.Property(e => e.TsHorasExtras1)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TS_HORAS_EXTRAS1");

                entity.Property(e => e.TsHorasExtras2)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TS_HORAS_EXTRAS2");

                entity.Property(e => e.TsHorasExtras3)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TS_HORAS_EXTRAS3");

                entity.Property(e => e.TsHorasExtras4)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TS_HORAS_EXTRAS4");

                entity.Property(e => e.TsHorasExtras5)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TS_HORAS_EXTRAS5");

                entity.Property(e => e.TsHorasExtras6)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TS_HORAS_EXTRAS6");

                entity.Property(e => e.TsHorasExtras7)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("TS_HORAS_EXTRAS7");

                entity.Property(e => e.TsHs11).HasColumnName("TS_HS1_1");

                entity.Property(e => e.TsHs12).HasColumnName("TS_HS1_2");

                entity.Property(e => e.TsHs13).HasColumnName("TS_HS1_3");

                entity.Property(e => e.TsHs14).HasColumnName("TS_HS1_4");

                entity.Property(e => e.TsHs15).HasColumnName("TS_HS1_5");

                entity.Property(e => e.TsHs16).HasColumnName("TS_HS1_6");

                entity.Property(e => e.TsHs17).HasColumnName("TS_HS1_7");

                entity.Property(e => e.TsHs21).HasColumnName("TS_HS2_1");

                entity.Property(e => e.TsHs22).HasColumnName("TS_HS2_2");

                entity.Property(e => e.TsHs23).HasColumnName("TS_HS2_3");

                entity.Property(e => e.TsHs24).HasColumnName("TS_HS2_4");

                entity.Property(e => e.TsHs25).HasColumnName("TS_HS2_5");

                entity.Property(e => e.TsHs26).HasColumnName("TS_HS2_6");

                entity.Property(e => e.TsHs27).HasColumnName("TS_HS2_7");

                entity.Property(e => e.TsTol1).HasColumnName("TS_TOL1");

                entity.Property(e => e.TsTol2).HasColumnName("TS_TOL2");

                entity.Property(e => e.TsTol3).HasColumnName("TS_TOL3");

                entity.Property(e => e.TsTol4).HasColumnName("TS_TOL4");

                entity.Property(e => e.TsTurnoSem)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("TS_TURNO_SEM");
            });

            modelBuilder.Entity<Ubicacion>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("UBICACION");

                entity.HasIndex(e => new { e.UbiEmpresa, e.UbiUbicacion }, "PK_UBICA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.UbiDir1)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("UBI_DIR1");

                entity.Property(e => e.UbiDir2)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("UBI_DIR2");

                entity.Property(e => e.UbiDir3)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("UBI_DIR3");

                entity.Property(e => e.UbiEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("UBI_EMPRESA");

                entity.Property(e => e.UbiUbicacion)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("UBI_UBICACION");
            });

            modelBuilder.Entity<UniMedidum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("UNI_MEDIDA");

                entity.HasIndex(e => new { e.UniEmpresa, e.UniUnidad }, "PK_UNIMED")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.UniCantidad)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("UNI_CANTIDAD");

                entity.Property(e => e.UniEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("UNI_EMPRESA");

                entity.Property(e => e.UniUnidad)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("UNI_UNIDAD");
            });

            modelBuilder.Entity<Usuario>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("USUARIOS");

                entity.HasIndex(e => new { e.User_Empresa, e.User_Usuario }, "PK_USUARIO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.User_Empresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("USER_EMPRESA");

                entity.Property(e => e.User_Nombre)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("USER_NOMBRE");

                entity.Property(e => e.User_Password)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("USER_PASSWORD");

                entity.Property(e => e.User_Usuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("USER_USUARIO");
            });

            modelBuilder.Entity<VenCanale>(entity =>
            {
                entity.ToTable("VEN_CANALES");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.VencNombre)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("VENC_NOMBRE");
            });

            modelBuilder.Entity<VenTipovendedor>(entity =>
            {
                entity.ToTable("VEN_TIPOVENDEDOR");

                entity.Property(e => e.Id)
                    .ValueGeneratedNever()
                    .HasColumnName("ID");

                entity.Property(e => e.VtvNombre)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("VTV_NOMBRE");
            });

            modelBuilder.Entity<VendeMinmaxCamb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENDE_MINMAX_CAMB");

                entity.HasIndex(e => new { e.VminEmpresa, e.VminVendedor, e.VminInventario }, "PK_VENMINMAX")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.VminEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VMIN_EMPRESA");

                entity.Property(e => e.VminExtra1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("VMIN_EXTRA1");

                entity.Property(e => e.VminExtra2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("VMIN_EXTRA2");

                entity.Property(e => e.VminExtra3)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VMIN_EXTRA3");

                entity.Property(e => e.VminExtra4)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VMIN_EXTRA4");

                entity.Property(e => e.VminInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("VMIN_INVENTARIO");

                entity.Property(e => e.VminMaximo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VMIN_MAXIMO");

                entity.Property(e => e.VminMinimo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VMIN_MINIMO");

                entity.Property(e => e.VminVendedor).HasColumnName("VMIN_VENDEDOR");
            });

            modelBuilder.Entity<VendePorcBonbol>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENDE_PORC_BONBOL");

                entity.HasIndex(e => new { e.BbprcEmpresa, e.BbprcVendedor, e.BbprcLinea }, "PK_VPORCBONBOL")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.BbprcEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("BBPRC_EMPRESA");

                entity.Property(e => e.BbprcFinal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("BBPRC_FINAL");

                entity.Property(e => e.BbprcInicio)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("BBPRC_INICIO");

                entity.Property(e => e.BbprcLinea).HasColumnName("BBPRC_LINEA");

                entity.Property(e => e.BbprcPorcentaje)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("BBPRC_PORCENTAJE");

                entity.Property(e => e.BbprcVendedor).HasColumnName("BBPRC_VENDEDOR");
            });

            modelBuilder.Entity<VendePorcVolum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENDE_PORC_VOLUM");

                entity.HasIndex(e => new { e.VpctEmpresa, e.VpctVendedor, e.VpctLinea }, "PK_TABLA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.VpctEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VPCT_EMPRESA");

                entity.Property(e => e.VpctFinal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VPCT_FINAL");

                entity.Property(e => e.VpctInicio)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VPCT_INICIO");

                entity.Property(e => e.VpctLinea).HasColumnName("VPCT_LINEA");

                entity.Property(e => e.VpctPorcentaje)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VPCT_PORCENTAJE");

                entity.Property(e => e.VpctVendedor).HasColumnName("VPCT_VENDEDOR");
            });

            modelBuilder.Entity<Vendedor>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENDEDOR");

                entity.HasIndex(e => new { e.Ven_Empresa, e.Ven_Codigo }, "IDXVEN")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.Ven_Codigo).HasColumnName("VEN_CODIGO");

                entity.Property(e => e.Ven_Comision)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEN_COMISION");

                entity.Property(e => e.Ven_Empresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VEN_EMPRESA");

                entity.Property(e => e.Ven_Nombre)
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("VEN_NOMBRE");
            });

            modelBuilder.Entity<VendedorExtra>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENDEDOR_EXTRA");

                entity.HasIndex(e => new { e.VxtEmpresa, e.VxtVendedor }, "VEN_EXTRA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.VxtBasecom)
                    .HasColumnType("decimal(18, 2)")
                    .HasColumnName("VXT_BASECOM");

                entity.Property(e => e.VxtBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VXT_BODEGA");

                entity.Property(e => e.VxtBonificacion)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VXT_BONIFICACION");

                entity.Property(e => e.VxtCanal).HasColumnName("VXT_CANAL");

                entity.Property(e => e.VxtClicodigo)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("VXT_CLICODIGO");

                entity.Property(e => e.VxtClicodxz)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("VXT_CLICODXZ");

                entity.Property(e => e.VxtEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VXT_EMPRESA");

                entity.Property(e => e.VxtEnvios)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VXT_ENVIOS")
                    .IsFixedLength();

                entity.Property(e => e.VxtFactoraux)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("VXT_FACTORAUX");

                entity.Property(e => e.VxtFactorpil)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("VXT_FACTORPIL");

                entity.Property(e => e.VxtLimiteparr).HasColumnName("VXT_LIMITEPARR");

                entity.Property(e => e.VxtMinMulta)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VXT_MIN_MULTA");

                entity.Property(e => e.VxtMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VXT_MONEDA");

                entity.Property(e => e.VxtMonedadef)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VXT_MONEDADEF");

                entity.Property(e => e.VxtMultfinan)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VXT_MULTFINAN");

                entity.Property(e => e.VxtNivprecdef).HasColumnName("VXT_NIVPRECDEF");

                entity.Property(e => e.VxtNivprecio).HasColumnName("VXT_NIVPRECIO");

                entity.Property(e => e.VxtOperasa)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VXT_OPERASA")
                    .IsFixedLength();

                entity.Property(e => e.VxtPorcmulta)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VXT_PORCMULTA");

                entity.Property(e => e.VxtPorctolera)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VXT_PORCTOLERA");

                entity.Property(e => e.VxtPorfact)
                    .HasColumnType("decimal(5, 2)")
                    .HasColumnName("VXT_PORFACT");

                entity.Property(e => e.VxtSeguridad)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VXT_SEGURIDAD")
                    .IsFixedLength();

                entity.Property(e => e.VxtSistema)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("VXT_SISTEMA");

                entity.Property(e => e.VxtTipoliquidac)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VXT_TIPOLIQUIDAC");

                entity.Property(e => e.VxtTipruta).HasColumnName("VXT_TIPRUTA");

                entity.Property(e => e.VxtUnidcambio)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VXT_UNIDCAMBIO");

                entity.Property(e => e.VxtVendedor).HasColumnName("VXT_VENDEDOR");
            });

            modelBuilder.Entity<VensalPorcVolum>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENSAL_PORC_VOLUM");

                entity.HasIndex(e => new { e.VsvvEmpresa, e.VsvvVendedor, e.VsvvLinea }, "PK_VENSALPORCVOL")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.VsvvEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VSVV_EMPRESA");

                entity.Property(e => e.VsvvFinal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VSVV_FINAL");

                entity.Property(e => e.VsvvInicio)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VSVV_INICIO");

                entity.Property(e => e.VsvvLinea).HasColumnName("VSVV_LINEA");

                entity.Property(e => e.VsvvPorcentaje)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VSVV_PORCENTAJE");

                entity.Property(e => e.VsvvVendedor).HasColumnName("VSVV_VENDEDOR");
            });

            modelBuilder.Entity<Venthpo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENTHPOS");

                entity.HasIndex(e => new { e.VehEmpresa, e.VehCliente }, "ADVEH_CLIENTE")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.VehEmpresa, e.VehTienda, e.VehTerminal, e.VehSerie, e.VehFactura }, "ADVEH_FACTURA")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.VehEmpresa, e.VehTienda, e.VehTerminal, e.VehNumero }, "ADVEH_NUMERO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.VehEmpresa, e.VehFecha }, "SK_VENTHF")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.VehEmpresa, e.VehTienda, e.VehFecha, e.VehStatus }, "SK_VENTHTFS")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.VehEmpresa, e.VehTienda, e.VehTerminal, e.VehFecha, e.VehStatus }, "SK_VENTHTTFS")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.VehEmpresa, e.VehVendedor, e.VehFecha, e.VehStatus }, "SK_VENTHVFS")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.VehEmpresa, e.VehCliente, e.VehFecha, e.VehStatus, e.VehConcred1, e.VehNumauto2 }, "sk_fecha_pago_a")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.VehEmpresa, e.VehStatus, e.VehConcred1, e.VehNumauto2, e.VehSaldo }, "sk_fecha_pago_b")
                    .HasFillFactor(90);

                entity.Property(e => e.VehActcxc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VEH_ACTCXC");

                entity.Property(e => e.VehArea)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("VEH_AREA");

                entity.Property(e => e.VehBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VEH_BODEGA");

                entity.Property(e => e.VehCentro)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VEH_CENTRO");

                entity.Property(e => e.VehChtj1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VEH_CHTJ1");

                entity.Property(e => e.VehChtj2)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VEH_CHTJ2");

                entity.Property(e => e.VehCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("VEH_CLIENTE");

                entity.Property(e => e.VehCobrador)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VEH_COBRADOR");

                entity.Property(e => e.VehConcred1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VEH_CONCRED1");

                entity.Property(e => e.VehConcred2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VEH_CONCRED2");

                entity.Property(e => e.VehDescuen)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEH_DESCUEN");

                entity.Property(e => e.VehDiasp).HasColumnName("VEH_DIASP");

                entity.Property(e => e.VehDocnum1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("VEH_DOCNUM1");

                entity.Property(e => e.VehDocnum2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("VEH_DOCNUM2");

                entity.Property(e => e.VehEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VEH_EMPRESA");

                entity.Property(e => e.VehEnvio).HasColumnName("VEH_ENVIO");

                entity.Property(e => e.VehFactura).HasColumnName("VEH_FACTURA");

                entity.Property(e => e.VehFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VEH_FECHA");

                entity.Property(e => e.VehHora)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("VEH_HORA");

                entity.Property(e => e.VehIntereses)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEH_INTERESES");

                entity.Property(e => e.VehIva)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEH_IVA");

                entity.Property(e => e.VehMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VEH_MONEDA");

                entity.Property(e => e.VehMonto1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEH_MONTO1");

                entity.Property(e => e.VehMonto2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEH_MONTO2");

                entity.Property(e => e.VehNumauto1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VEH_NUMAUTO1");

                entity.Property(e => e.VehNumauto2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VEH_NUMAUTO2");

                entity.Property(e => e.VehNumero).HasColumnName("VEH_NUMERO");

                entity.Property(e => e.VehNumtar1)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("VEH_NUMTAR1");

                entity.Property(e => e.VehNuntarj2)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("VEH_NUNTARJ2");

                entity.Property(e => e.VehObserva)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("VEH_OBSERVA");

                entity.Property(e => e.VehOrdenc).HasColumnName("VEH_ORDENC");

                entity.Property(e => e.VehOtros)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEH_OTROS");

                entity.Property(e => e.VehRuta)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("VEH_RUTA");

                entity.Property(e => e.VehSaldo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEH_SALDO");

                entity.Property(e => e.VehSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VEH_SERIE");

                entity.Property(e => e.VehStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VEH_STATUS");

                entity.Property(e => e.VehTasa)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEH_TASA");

                entity.Property(e => e.VehTasacam)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEH_TASACAM");

                entity.Property(e => e.VehTerminal).HasColumnName("VEH_TERMINAL");

                entity.Property(e => e.VehTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VEH_TIENDA");

                entity.Property(e => e.VehTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEH_TOTAL");

                entity.Property(e => e.VehTransaccion)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VEH_TRANSACCION");

                entity.Property(e => e.VehUsuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VEH_USUARIO");

                entity.Property(e => e.VehValor)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEH_VALOR");

                entity.Property(e => e.VehVendedor).HasColumnName("VEH_VENDEDOR");
            });

            modelBuilder.Entity<VenthposExt>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENTHPOS_EXT");

                entity.HasIndex(e => new { e.VehxEmpresa, e.VehxTienda, e.VehxTerminal, e.VehxSerie, e.VehxFactura }, "ADVHX_FACTURA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.VehxEmpresa, e.VehxTienda, e.VehxTerminal, e.VehxSerie, e.VehxFactura, e.VehxFechaVenc }, "SK_VENTHXFV")
                    .HasFillFactor(90);

                entity.Property(e => e.VehxCentro)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VEHX_CENTRO");

                entity.Property(e => e.VehxCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("VEHX_CLIENTE");

                entity.Property(e => e.VehxDescDescuento)
                    .HasMaxLength(70)
                    .IsUnicode(false)
                    .HasColumnName("VEHX_DESC_DESCUENTO");

                entity.Property(e => e.VehxDescuento)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEHX_DESCUENTO");

                entity.Property(e => e.VehxDiasCli).HasColumnName("VEHX_DIAS_CLI");

                entity.Property(e => e.VehxEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VEHX_EMPRESA");

                entity.Property(e => e.VehxFactura).HasColumnName("VEHX_FACTURA");

                entity.Property(e => e.VehxFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VEHX_FECHA");

                entity.Property(e => e.VehxFechaVenc)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VEHX_FECHA_VENC");

                entity.Property(e => e.VehxPctglobal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEHX_PCTGLOBAL");

                entity.Property(e => e.VehxPeriodoano).HasColumnName("VEHX_PERIODOANO");

                entity.Property(e => e.VehxPeriodomes).HasColumnName("VEHX_PERIODOMES");

                entity.Property(e => e.VehxSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VEHX_SERIE");

                entity.Property(e => e.VehxStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VEHX_STATUS");

                entity.Property(e => e.VehxTerminal).HasColumnName("VEHX_TERMINAL");

                entity.Property(e => e.VehxTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VEHX_TIENDA");

                entity.Property(e => e.VehxVendedor).HasColumnName("VEHX_VENDEDOR");
            });

            modelBuilder.Entity<VenthposExtra>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENTHPOS_EXTRA");

                entity.HasIndex(e => new { e.VexEmpresa, e.VexCliente }, "ADVEX_CLIENTE")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.VexEmpresa, e.VexTienda, e.VexTerminal, e.VexFactura }, "ADVEX_NUMERO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.VexEmpresa, e.VexTienda, e.VexFecha }, "SK_VENTXTFS")
                    .HasFillFactor(90);

                entity.Property(e => e.VexActcxc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VEX_ACTCXC");

                entity.Property(e => e.VexArea)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("VEX_AREA");

                entity.Property(e => e.VexBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VEX_BODEGA");

                entity.Property(e => e.VexCentro)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VEX_CENTRO");

                entity.Property(e => e.VexChtj1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VEX_CHTJ1");

                entity.Property(e => e.VexChtj2)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VEX_CHTJ2");

                entity.Property(e => e.VexCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("VEX_CLIENTE");

                entity.Property(e => e.VexCobrador)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VEX_COBRADOR");

                entity.Property(e => e.VexConcred1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VEX_CONCRED1");

                entity.Property(e => e.VexConcred2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VEX_CONCRED2");

                entity.Property(e => e.VexDescuen)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEX_DESCUEN");

                entity.Property(e => e.VexDiasp).HasColumnName("VEX_DIASP");

                entity.Property(e => e.VexDocnum1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("VEX_DOCNUM1");

                entity.Property(e => e.VexDocnum2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("VEX_DOCNUM2");

                entity.Property(e => e.VexEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VEX_EMPRESA");

                entity.Property(e => e.VexEnvio).HasColumnName("VEX_ENVIO");

                entity.Property(e => e.VexFactura).HasColumnName("VEX_FACTURA");

                entity.Property(e => e.VexFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VEX_FECHA");

                entity.Property(e => e.VexHora)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("VEX_HORA");

                entity.Property(e => e.VexIntereses)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEX_INTERESES");

                entity.Property(e => e.VexIva)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEX_IVA");

                entity.Property(e => e.VexMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VEX_MONEDA");

                entity.Property(e => e.VexMonto1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEX_MONTO1");

                entity.Property(e => e.VexMonto2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEX_MONTO2");

                entity.Property(e => e.VexNumauto1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VEX_NUMAUTO1");

                entity.Property(e => e.VexNumauto2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VEX_NUMAUTO2");

                entity.Property(e => e.VexNumero).HasColumnName("VEX_NUMERO");

                entity.Property(e => e.VexNumtar1)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("VEX_NUMTAR1");

                entity.Property(e => e.VexNuntarj2)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("VEX_NUNTARJ2");

                entity.Property(e => e.VexObserva)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("VEX_OBSERVA");

                entity.Property(e => e.VexOrdenc).HasColumnName("VEX_ORDENC");

                entity.Property(e => e.VexOtros)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEX_OTROS");

                entity.Property(e => e.VexRuta)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("VEX_RUTA");

                entity.Property(e => e.VexSaldo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEX_SALDO");

                entity.Property(e => e.VexSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VEX_SERIE");

                entity.Property(e => e.VexStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VEX_STATUS");

                entity.Property(e => e.VexTasa)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEX_TASA");

                entity.Property(e => e.VexTasacam)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEX_TASACAM");

                entity.Property(e => e.VexTerminal).HasColumnName("VEX_TERMINAL");

                entity.Property(e => e.VexTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VEX_TIENDA");

                entity.Property(e => e.VexTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEX_TOTAL");

                entity.Property(e => e.VexTransaccion)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VEX_TRANSACCION");

                entity.Property(e => e.VexUsuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VEX_USUARIO");

                entity.Property(e => e.VexValor)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEX_VALOR");

                entity.Property(e => e.VexVendedor).HasColumnName("VEX_VENDEDOR");
            });

            modelBuilder.Entity<VenthposFecae>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENTHPOS_FECAE");

                entity.HasIndex(e => new { e.VehEmpresa, e.VehTienda, e.VehTerminal, e.VehFactura }, "PK_VENTHFECAE")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.VehCae)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("VEH_CAE");

                entity.Property(e => e.VehEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VEH_EMPRESA");

                entity.Property(e => e.VehFactura).HasColumnName("VEH_FACTURA");

                entity.Property(e => e.VehFechacfe)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VEH_FECHACFE");

                entity.Property(e => e.VehFechaemi)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VEH_FECHAEMI");

                entity.Property(e => e.VehHoracfe)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VEH_HORACFE");

                entity.Property(e => e.VehHoraemi)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VEH_HORAEMI");

                entity.Property(e => e.VehSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VEH_SERIE");

                entity.Property(e => e.VehTerminal).HasColumnName("VEH_TERMINAL");

                entity.Property(e => e.VehTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VEH_TIENDA");
            });

            modelBuilder.Entity<VenthposProf>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENTHPOS_PROF");

                entity.HasIndex(e => new { e.VhpEmpresa, e.VhpCliente }, "ADVHP_CLIENTE")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.VhpEmpresa, e.VhpTienda, e.VhpTerminal, e.VhpNumero }, "ADVHP_NUMERO")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.VhpEmpresa, e.VhpFecha }, "SK_VENTHF_VHP")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.VhpEmpresa, e.VhpTienda, e.VhpFecha, e.VhpStatus }, "SK_VENTHTFS_VHP")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.VhpEmpresa, e.VhpTienda, e.VhpTerminal, e.VhpFecha, e.VhpStatus }, "SK_VENTHTTFS_VHP")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.VhpEmpresa, e.VhpVendedor, e.VhpFecha, e.VhpStatus }, "SK_VENTHVFS_VHP")
                    .HasFillFactor(90);

                entity.Property(e => e.VhpActcxc)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VHP_ACTCXC");

                entity.Property(e => e.VhpArea)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("VHP_AREA");

                entity.Property(e => e.VhpBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VHP_BODEGA");

                entity.Property(e => e.VhpCentro)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VHP_CENTRO");

                entity.Property(e => e.VhpChtj1)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VHP_CHTJ1");

                entity.Property(e => e.VhpChtj2)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VHP_CHTJ2");

                entity.Property(e => e.VhpCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("VHP_CLIENTE");

                entity.Property(e => e.VhpCobrador)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VHP_COBRADOR");

                entity.Property(e => e.VhpConcred1)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VHP_CONCRED1");

                entity.Property(e => e.VhpConcred2)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VHP_CONCRED2");

                entity.Property(e => e.VhpDescuen)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VHP_DESCUEN");

                entity.Property(e => e.VhpDiasp).HasColumnName("VHP_DIASP");

                entity.Property(e => e.VhpDocnum1)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("VHP_DOCNUM1");

                entity.Property(e => e.VhpDocnum2)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("VHP_DOCNUM2");

                entity.Property(e => e.VhpEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VHP_EMPRESA");

                entity.Property(e => e.VhpEnvio).HasColumnName("VHP_ENVIO");

                entity.Property(e => e.VhpFactura).HasColumnName("VHP_FACTURA");

                entity.Property(e => e.VhpFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VHP_FECHA");

                entity.Property(e => e.VhpHora)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("VHP_HORA");

                entity.Property(e => e.VhpIntereses)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VHP_INTERESES");

                entity.Property(e => e.VhpIva)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VHP_IVA");

                entity.Property(e => e.VhpMoneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VHP_MONEDA");

                entity.Property(e => e.VhpMonto1)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VHP_MONTO1");

                entity.Property(e => e.VhpMonto2)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VHP_MONTO2");

                entity.Property(e => e.VhpNumauto1)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VHP_NUMAUTO1");

                entity.Property(e => e.VhpNumauto2)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VHP_NUMAUTO2");

                entity.Property(e => e.VhpNumero).HasColumnName("VHP_NUMERO");

                entity.Property(e => e.VhpNumtar1)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("VHP_NUMTAR1");

                entity.Property(e => e.VhpNuntarj2)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("VHP_NUNTARJ2");

                entity.Property(e => e.VhpObserva)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("VHP_OBSERVA");

                entity.Property(e => e.VhpOrdenc).HasColumnName("VHP_ORDENC");

                entity.Property(e => e.VhpOtros)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VHP_OTROS");

                entity.Property(e => e.VhpRuta)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("VHP_RUTA");

                entity.Property(e => e.VhpSaldo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VHP_SALDO");

                entity.Property(e => e.VhpSerie)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VHP_SERIE");

                entity.Property(e => e.VhpStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VHP_STATUS");

                entity.Property(e => e.VhpTasa)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VHP_TASA");

                entity.Property(e => e.VhpTasacam)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VHP_TASACAM");

                entity.Property(e => e.VhpTerminal).HasColumnName("VHP_TERMINAL");

                entity.Property(e => e.VhpTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VHP_TIENDA");

                entity.Property(e => e.VhpTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VHP_TOTAL");

                entity.Property(e => e.VhpTransaccion)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VHP_TRANSACCION");

                entity.Property(e => e.VhpUsuario)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VHP_USUARIO");

                entity.Property(e => e.VhpValor)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VHP_VALOR");

                entity.Property(e => e.VhpVendedor).HasColumnName("VHP_VENDEDOR");
            });

            modelBuilder.Entity<VenthposVw01>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VENTHPOS_vw01");

                entity.Property(e => e.CliCadena)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CLI_CADENA");

                entity.Property(e => e.CliSubcadena)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CLI_SUBCADENA");

                entity.Property(e => e.DevCostotal).HasColumnName("DEV_COSTOTAL");

                entity.Property(e => e.DevUnidades).HasColumnName("DEV_UNIDADES");

                entity.Property(e => e.VehAniomes)
                    .HasMaxLength(6)
                    .HasColumnName("VEH_ANIOMES");

                entity.Property(e => e.VehCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("VEH_CLIENTE");

                entity.Property(e => e.VelCostotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEL_COSTOTAL");

                entity.Property(e => e.VelInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("VEL_INVENTARIO");

                entity.Property(e => e.VelUnidades)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEL_UNIDADES");
            });

            modelBuilder.Entity<Ventlpo>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENTLPOS");

                entity.HasIndex(e => new { e.VelEmpresa, e.VelTienda, e.VelTerminal, e.VelNumero, e.VelLinea, e.VelInventario }, "ADVENL")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => e.VelSublineainv, "ADVENSUB")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.VelEmpresa, e.VelFechat, e.VelCodigoNuevo }, "SK_VENTLFN")
                    .HasFillFactor(90);

                entity.Property(e => e.VelBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VEL_BODEGA");

                entity.Property(e => e.VelCodigoNombre)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("VEL_CODIGO_NOMBRE");

                entity.Property(e => e.VelCodigoNuevo)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("VEL_CODIGO_NUEVO");

                entity.Property(e => e.VelComision)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEL_COMISION");

                entity.Property(e => e.VelCosto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEL_COSTO");

                entity.Property(e => e.VelCostotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEL_COSTOTAL");

                entity.Property(e => e.VelCosuni)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEL_COSUNI");

                entity.Property(e => e.VelDescuen)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEL_DESCUEN");

                entity.Property(e => e.VelEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VEL_EMPRESA");

                entity.Property(e => e.VelFechat)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VEL_FECHAT");

                entity.Property(e => e.VelGarantia)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEL_GARANTIA");

                entity.Property(e => e.VelInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("VEL_INVENTARIO");

                entity.Property(e => e.VelLinea).HasColumnName("VEL_LINEA");

                entity.Property(e => e.VelNumero).HasColumnName("VEL_NUMERO");

                entity.Property(e => e.VelPctdescuento).HasColumnName("VEL_PCTDESCUENTO");

                entity.Property(e => e.VelPrecioun)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEL_PRECIOUN");

                entity.Property(e => e.VelSerie)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("VEL_SERIE");

                entity.Property(e => e.VelSerieflag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VEL_SERIEFLAG");

                entity.Property(e => e.VelSublineainv)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VEL_SUBLINEAINV");

                entity.Property(e => e.VelTerminal).HasColumnName("VEL_TERMINAL");

                entity.Property(e => e.VelTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VEL_TIENDA");

                entity.Property(e => e.VelUnidad)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("VEL_UNIDAD");

                entity.Property(e => e.VelUnidades)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VEL_UNIDADES");
            });

            modelBuilder.Entity<VentlposDescrip>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENTLPOS_DESCRIP");

                entity.HasIndex(e => new { e.VdesEmpresa, e.VdesTienda, e.VdesTerminal, e.VdesNumero, e.VdesLinea }, "ADVENL_DES")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.VdesDescrip1)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("VDES_DESCRIP1");

                entity.Property(e => e.VdesDescrip10)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("VDES_DESCRIP10");

                entity.Property(e => e.VdesDescrip2)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("VDES_DESCRIP2");

                entity.Property(e => e.VdesDescrip3)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("VDES_DESCRIP3");

                entity.Property(e => e.VdesDescrip4)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("VDES_DESCRIP4");

                entity.Property(e => e.VdesDescrip5)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("VDES_DESCRIP5");

                entity.Property(e => e.VdesDescrip6)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("VDES_DESCRIP6");

                entity.Property(e => e.VdesDescrip7)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("VDES_DESCRIP7");

                entity.Property(e => e.VdesDescrip8)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("VDES_DESCRIP8");

                entity.Property(e => e.VdesDescrip9)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("VDES_DESCRIP9");

                entity.Property(e => e.VdesEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VDES_EMPRESA");

                entity.Property(e => e.VdesExtra1)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("VDES_EXTRA1");

                entity.Property(e => e.VdesExtra2)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("VDES_EXTRA2");

                entity.Property(e => e.VdesExtra3)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("VDES_EXTRA3");

                entity.Property(e => e.VdesExtra4)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("VDES_EXTRA4");

                entity.Property(e => e.VdesExtra5)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VDES_EXTRA5");

                entity.Property(e => e.VdesExtra6)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VDES_EXTRA6");

                entity.Property(e => e.VdesExtra7)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VDES_EXTRA7");

                entity.Property(e => e.VdesExtra8)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VDES_EXTRA8");

                entity.Property(e => e.VdesLinea).HasColumnName("VDES_LINEA");

                entity.Property(e => e.VdesNumero).HasColumnName("VDES_NUMERO");

                entity.Property(e => e.VdesPrecioud)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VDES_PRECIOUD");

                entity.Property(e => e.VdesTerminal).HasColumnName("VDES_TERMINAL");

                entity.Property(e => e.VdesTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VDES_TIENDA");

                entity.Property(e => e.VdesTotald)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VDES_TOTALD");
            });

            modelBuilder.Entity<VentlposExtra>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENTLPOS_EXTRA");

                entity.HasIndex(e => new { e.VxlEmpresa, e.VxlTienda, e.VxlTerminal, e.VxlNumero, e.VxlLinea }, "ADVEXL")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.VxlBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VXL_BODEGA");

                entity.Property(e => e.VxlCodigoNombre)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("VXL_CODIGO_NOMBRE");

                entity.Property(e => e.VxlCodigoNuevo)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("VXL_CODIGO_NUEVO");

                entity.Property(e => e.VxlComision)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VXL_COMISION");

                entity.Property(e => e.VxlCosto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VXL_COSTO");

                entity.Property(e => e.VxlCostotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VXL_COSTOTAL");

                entity.Property(e => e.VxlCosuni)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VXL_COSUNI");

                entity.Property(e => e.VxlDescuen)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VXL_DESCUEN");

                entity.Property(e => e.VxlEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VXL_EMPRESA");

                entity.Property(e => e.VxlFechat)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VXL_FECHAT");

                entity.Property(e => e.VxlGarantia)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VXL_GARANTIA");

                entity.Property(e => e.VxlInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("VXL_INVENTARIO");

                entity.Property(e => e.VxlLinea).HasColumnName("VXL_LINEA");

                entity.Property(e => e.VxlNumero).HasColumnName("VXL_NUMERO");

                entity.Property(e => e.VxlPctdescuento).HasColumnName("VXL_PCTDESCUENTO");

                entity.Property(e => e.VxlPrecioun)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VXL_PRECIOUN");

                entity.Property(e => e.VxlSerie)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("VXL_SERIE");

                entity.Property(e => e.VxlSerieflag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VXL_SERIEFLAG");

                entity.Property(e => e.VxlSublineainv)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VXL_SUBLINEAINV");

                entity.Property(e => e.VxlTerminal).HasColumnName("VXL_TERMINAL");

                entity.Property(e => e.VxlTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VXL_TIENDA");

                entity.Property(e => e.VxlUnidad)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("VXL_UNIDAD");

                entity.Property(e => e.VxlUnidades)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VXL_UNIDADES");
            });

            modelBuilder.Entity<VentlposProf>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VENTLPOS_PROF");

                entity.HasIndex(e => new { e.VlpEmpresa, e.VlpTienda, e.VlpTerminal, e.VlpNumero, e.VlpLinea }, "ADVENL_VLP")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.HasIndex(e => e.VlpSublineainv, "ADVENSUB_VLP")
                    .HasFillFactor(90);

                entity.HasIndex(e => new { e.VlpEmpresa, e.VlpFechat, e.VlpCodigoNuevo }, "SK_VENTLFN_VLP")
                    .HasFillFactor(90);

                entity.Property(e => e.VlpBodega)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VLP_BODEGA");

                entity.Property(e => e.VlpCodigoNombre)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("VLP_CODIGO_NOMBRE");

                entity.Property(e => e.VlpCodigoNuevo)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("VLP_CODIGO_NUEVO");

                entity.Property(e => e.VlpComision)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VLP_COMISION");

                entity.Property(e => e.VlpCosto)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VLP_COSTO");

                entity.Property(e => e.VlpCostotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VLP_COSTOTAL");

                entity.Property(e => e.VlpCosuni)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VLP_COSUNI");

                entity.Property(e => e.VlpDescuen)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VLP_DESCUEN");

                entity.Property(e => e.VlpEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VLP_EMPRESA");

                entity.Property(e => e.VlpFechat)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VLP_FECHAT");

                entity.Property(e => e.VlpGarantia)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VLP_GARANTIA");

                entity.Property(e => e.VlpInventario)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("VLP_INVENTARIO");

                entity.Property(e => e.VlpLinea).HasColumnName("VLP_LINEA");

                entity.Property(e => e.VlpNumero).HasColumnName("VLP_NUMERO");

                entity.Property(e => e.VlpPctdescuento).HasColumnName("VLP_PCTDESCUENTO");

                entity.Property(e => e.VlpPrecioun)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VLP_PRECIOUN");

                entity.Property(e => e.VlpSerie)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("VLP_SERIE");

                entity.Property(e => e.VlpSerieflag)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("VLP_SERIEFLAG");

                entity.Property(e => e.VlpSublineainv)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("VLP_SUBLINEAINV");

                entity.Property(e => e.VlpTerminal).HasColumnName("VLP_TERMINAL");

                entity.Property(e => e.VlpTienda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("VLP_TIENDA");

                entity.Property(e => e.VlpUnidad)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("VLP_UNIDAD");

                entity.Property(e => e.VlpUnidades)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VLP_UNIDADES");
            });

            modelBuilder.Entity<VerifFecha>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VERIF_FECHA");

                entity.HasIndex(e => new { e.VerEmpresa, e.VerModulo }, "VER_FECHA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.VerAno).HasColumnName("VER_ANO");

                entity.Property(e => e.VerEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VER_EMPRESA");

                entity.Property(e => e.VerMes).HasColumnName("VER_MES");

                entity.Property(e => e.VerModulo)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VER_MODULO");
            });

            modelBuilder.Entity<Visita>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VISITAS");

                entity.HasIndex(e => new { e.VisEmpresa, e.VisVisita }, "VISITA")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.VisCliente)
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasColumnName("VIS_CLIENTE");

                entity.Property(e => e.VisEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VIS_EMPRESA");

                entity.Property(e => e.VisFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VIS_FECHA");

                entity.Property(e => e.VisResul1)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("VIS_RESUL1");

                entity.Property(e => e.VisResul2)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("VIS_RESUL2");

                entity.Property(e => e.VisResul3)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("VIS_RESUL3");

                entity.Property(e => e.VisVendedor).HasColumnName("VIS_VENDEDOR");

                entity.Property(e => e.VisVisita).HasColumnName("VIS_VISITA");
            });

            modelBuilder.Entity<Vitacven>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VITACVEN");

                entity.HasIndex(e => new { e.VitEmpresa, e.VitVendedor, e.VitFecha, e.VitHora }, "PK_VITACVEN")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.VitEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VIT_EMPRESA");

                entity.Property(e => e.VitFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("VIT_FECHA");

                entity.Property(e => e.VitHora)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("VIT_HORA");

                entity.Property(e => e.VitVendedor).HasColumnName("VIT_VENDEDOR");
            });

            modelBuilder.Entity<VprcBonoart>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VPRC_BONOART");

                entity.HasIndex(e => new { e.BoprcEmpresa, e.BoprcVendedor, e.BoprcLinea }, "PK_VPORCBONOART")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.BoprcEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("BOPRC_EMPRESA");

                entity.Property(e => e.BoprcFinal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("BOPRC_FINAL");

                entity.Property(e => e.BoprcInicio)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("BOPRC_INICIO");

                entity.Property(e => e.BoprcLinea).HasColumnName("BOPRC_LINEA");

                entity.Property(e => e.BoprcPorcentaje)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("BOPRC_PORCENTAJE");

                entity.Property(e => e.BoprcVendedor).HasColumnName("BOPRC_VENDEDOR");
            });

            modelBuilder.Entity<Vtavendedor>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("VTAVENDEDOR");

                entity.HasIndex(e => new { e.VenvEmpresa, e.VenvVendedor, e.VenvAnio, e.VenvMes }, "VTAVEND")
                    .IsUnique()
                    .HasFillFactor(90);

                entity.Property(e => e.VenvAnio).HasColumnName("VENV_ANIO");

                entity.Property(e => e.VenvComision)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VENV_COMISION");

                entity.Property(e => e.VenvEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("VENV_EMPRESA");

                entity.Property(e => e.VenvMes).HasColumnName("VENV_MES");

                entity.Property(e => e.VenvVendedor).HasColumnName("VENV_VENDEDOR");

                entity.Property(e => e.VenvVtatot)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("VENV_VTATOT");
            });

            modelBuilder.Entity<XdistLiquidacH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("XDIST_LIQUIDAC_H");

                entity.Property(e => e.DlqhCobrTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DLQH_COBR_TOTAL");

                entity.Property(e => e.DlqhCredTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DLQH_CRED_TOTAL");

                entity.Property(e => e.DlqhEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DLQH_EMPRESA");

                entity.Property(e => e.DlqhExisCamb)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DLQH_EXIS_CAMB");

                entity.Property(e => e.DlqhExisCant)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DLQH_EXIS_CANT");

                entity.Property(e => e.DlqhFcierre)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DLQH_FCIERRE");

                entity.Property(e => e.DlqhFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DLQH_FECHA");

                entity.Property(e => e.DlqhLiquidac).HasColumnName("DLQH_LIQUIDAC");

                entity.Property(e => e.DlqhMultas)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DLQH_MULTAS");

                entity.Property(e => e.DlqhObservac1)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("DLQH_OBSERVAC1");

                entity.Property(e => e.DlqhObservac2)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("DLQH_OBSERVAC2");

                entity.Property(e => e.DlqhSaldo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DLQH_SALDO");

                entity.Property(e => e.DlqhSaldoant)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DLQH_SALDOANT");

                entity.Property(e => e.DlqhStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DLQH_STATUS");

                entity.Property(e => e.DlqhTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DLQH_TOTAL");

                entity.Property(e => e.DlqhUltliquidac).HasColumnName("DLQH_ULTLIQUIDAC");

                entity.Property(e => e.DlqhVendedor).HasColumnName("DLQH_VENDEDOR");
            });

            modelBuilder.Entity<YdistLiquidacH>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("YDIST_LIQUIDAC_H");

                entity.Property(e => e.DlqhCobrTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DLQH_COBR_TOTAL");

                entity.Property(e => e.DlqhCredTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DLQH_CRED_TOTAL");

                entity.Property(e => e.DlqhEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DLQH_EMPRESA");

                entity.Property(e => e.DlqhExisCamb)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DLQH_EXIS_CAMB");

                entity.Property(e => e.DlqhExisCant)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DLQH_EXIS_CANT");

                entity.Property(e => e.DlqhFcierre)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DLQH_FCIERRE");

                entity.Property(e => e.DlqhFecha)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("DLQH_FECHA");

                entity.Property(e => e.DlqhLiquidac).HasColumnName("DLQH_LIQUIDAC");

                entity.Property(e => e.DlqhMultas)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DLQH_MULTAS");

                entity.Property(e => e.DlqhObservac1)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("DLQH_OBSERVAC1");

                entity.Property(e => e.DlqhObservac2)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("DLQH_OBSERVAC2");

                entity.Property(e => e.DlqhSaldo)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DLQH_SALDO");

                entity.Property(e => e.DlqhSaldoant)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DLQH_SALDOANT");

                entity.Property(e => e.DlqhStatus)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("DLQH_STATUS");

                entity.Property(e => e.DlqhTotal)
                    .HasColumnType("decimal(18, 6)")
                    .HasColumnName("DLQH_TOTAL");

                entity.Property(e => e.DlqhUltliquidac).HasColumnName("DLQH_ULTLIQUIDAC");

                entity.Property(e => e.DlqhVendedor).HasColumnName("DLQH_VENDEDOR");
            });

            modelBuilder.Entity<Zonasgeografica>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ZONASGEOGRAFICAS");

                entity.Property(e => e.CodEmpresa)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("COD_EMPRESA");

                entity.Property(e => e.CodZona)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("COD_ZONA");

                entity.Property(e => e.ZonDescripcion)
                    .HasMaxLength(50)
                    .HasColumnName("ZON_DESCRIPCION");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
